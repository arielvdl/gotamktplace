{
	"id": "1fe53a5ce97229230df62e73cf20f3e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"openzeppelin-contracts-master/gota.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\";\nimport \"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"openzeppelin-contracts-master/contracts/access/Ownable.sol\"; \n\ncontract NFTMarketplace is Ownable {\n    struct Listing {\n        address nftContract;\n        uint256 tokenId;\n        uint256 price;\n        bool isAuction;\n        bool isActive;\n        uint256 expiresAt;\n    }\n\n    mapping(uint256 => Listing) public listings;\n    uint256 public nextListingId;\n    uint256 public platformFeePercentage = 5;\n    uint256 public royaltiesFeePercentage = 5;\n    address public platformFeeWallet;\n    address public royaltiesFeeWallet;\n\n    event ListingCreated(uint256 listingId, address indexed nftContract, uint256 indexed tokenId, uint256 price, bool isAuction, uint256 expiresAt);\n    event ListingCancelled(uint256 listingId);\n    event NFTSold(uint256 listingId, address indexed buyer, uint256 price);\n    event PlatformFeePercentageUpdated(uint256 newPercentage);\n\n    modifier onlyNFTOwner(address nftContract, uint256 tokenId) {\n        require(IERC721(nftContract).ownerOf(tokenId) == msg.sender, \"Only NFT owner can perform this action\");\n        _;\n    }\n\n    constructor(address _platformFeeWallet, address _royaltiesFeeWallet) Ownable(msg.sender) {\n        platformFeeWallet = _platformFeeWallet;\n        royaltiesFeeWallet = _royaltiesFeeWallet;\n    }\n\n    function setPlatformFeePercentage(uint256 newPercentage) external onlyOwner {\n        require(newPercentage <= 100, \"Percentage must be between 0 and 100\");\n        platformFeePercentage = newPercentage;\n        emit PlatformFeePercentageUpdated(newPercentage);\n    }\n\n    function createListing(address nftContract, uint256 tokenId, uint256 price, bool isAuction, uint256 duration) external {\n        require(price > 0, \"Price must be greater than zero\");\n        require(IERC721(nftContract).ownerOf(tokenId) == msg.sender, \"Only NFT owner can create a listing\");\n\n        if (isAuction) {\n            require(duration > 0, \"Auction duration must be greater than zero\");\n        } else {\n            duration = 0;\n        }\n\n        IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId);\n\n        listings[nextListingId] = Listing({\n            nftContract: nftContract,\n            tokenId: tokenId,\n            price: price,\n            isAuction: isAuction,\n            isActive: true,\n            expiresAt: block.timestamp + duration\n        });\n\n        emit ListingCreated(nextListingId, nftContract, tokenId, price, isAuction, block.timestamp + duration);\n\n        nextListingId++;\n    }\n\n    function cancelListing(uint256 listingId) external {\n        Listing storage listing = listings[listingId];\n        require(listing.isActive, \"Listing is not active\");\n        require(IERC721(listing.nftContract).ownerOf(listing.tokenId) == address(this), \"Only the contract can cancel the listing\");\n\n        IERC721(listing.nftContract).transferFrom(address(this), msg.sender, listing.tokenId);\n\n        listing.isActive = false;\n\n        emit ListingCancelled(listingId);\n    }\n\n    function buyListing(uint256 listingId) external payable {\n        Listing storage listing = listings[listingId];\n        require(listing.isActive, \"Listing is not active\");\n        require(listing.price == msg.value, \"Incorrect payment amount\");\n\n        address seller = IERC721(listing.nftContract).ownerOf(listing.tokenId);\n\n        IERC721(listing.nftContract).transferFrom(address(this), msg.sender, listing.tokenId);\n\n        uint256 platformFee = (listing.price * platformFeePercentage) / 100;\n        uint256 royaltiesFee = (listing.price * royaltiesFeePercentage) / 100;\n        uint256 sellerAmount = listing.price - platformFee - royaltiesFee;\n\n        payable(platformFeeWallet).transfer(platformFee);\n        payable(royaltiesFeeWallet).transfer(royaltiesFee);\n        payable(seller).transfer(sellerAmount);\n\n        listing.isActive = false;\n\n        emit NFTSold(listingId, msg.sender, listing.price);\n    }\n\n    function getActiveListings() external view returns (uint256[] memory) {\n        uint256[] memory activeListings = new uint256[](nextListingId);\n        uint256 count = 0;\n\n        for (uint256 i = 0; i < nextListingId; i++) {\n            if (listings[i].isActive) {\n                activeListings[count] = i;\n                count++;\n            }\n        }\n\n        uint256[] memory result = new uint256[](count);\n        for (uint256 i = 0; i < count; i++) {\n            result[i] = activeListings[i];\n        }\n\n        return result;\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"openzeppelin-contracts-master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"openzeppelin-contracts-master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"openzeppelin-contracts-master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"openzeppelin-contracts-master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"openzeppelin-contracts-master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "openzeppelin-contracts-master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"openzeppelin-contracts-master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"openzeppelin-contracts-master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"openzeppelin-contracts-master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"openzeppelin-contracts-master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1447,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1451,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1454,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1458,
								"contract": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts-master/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts-master/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220013f8c62d90f50a1ca75527dd41cfec4da28c3c75ce9aeb51e8304d24adecd5964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220013f8c62d90f50a1ca75527dd41cfec4da28c3c75ce9aeb51e8304d24adecd5964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD EXTCODEHASH DUP13 PUSH3 0xD90F50 LOG1 0xCA PUSH22 0x527DD41CFEC4DA28C3C75CE9AEB51E8304D24ADECD59 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220013f8c62d90f50a1ca75527dd41cfec4da28c3c75ce9aeb51e8304d24adecd5964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD EXTCODEHASH DUP13 PUSH3 0xD90F50 LOG1 0xCA PUSH22 0x527DD41CFEC4DA28C3C75CE9AEB51E8304D24ADECD59 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220013f8c62d90f50a1ca75527dd41cfec4da28c3c75ce9aeb51e8304d24adecd5964736f6c63430008150033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-contracts-master/contracts/access/Ownable.sol",
								"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts-master/contracts/utils/Context.sol",
								"openzeppelin-contracts-master/contracts/utils/Strings.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/math/Math.sol",
								"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol",
								"openzeppelin-contracts-master/gota.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c4ca0699a81fba8674436198f36baee5df725d0744c5d6aea4826065e8e045964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c4ca0699a81fba8674436198f36baee5df725d0744c5d6aea4826065e8e045964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x4C LOG0 PUSH10 0x9A81FBA8674436198F36 0xBA 0xEE 0x5D 0xF7 0x25 0xD0 PUSH21 0x4C5D6AEA4826065E8E045964736F6C634300081500 CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c4ca0699a81fba8674436198f36baee5df725d0744c5d6aea4826065e8e045964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x4C LOG0 PUSH10 0x9A81FBA8674436198F36 0xBA 0xEE 0x5D 0xF7 0x25 0xD0 PUSH21 0x4C5D6AEA4826065E8E045964736F6C634300081500 CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c4ca0699a81fba8674436198f36baee5df725d0744c5d6aea4826065e8e045964736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-contracts-master/contracts/access/Ownable.sol",
								"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts-master/contracts/utils/Context.sol",
								"openzeppelin-contracts-master/contracts/utils/Strings.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/math/Math.sol",
								"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol",
								"openzeppelin-contracts-master/gota.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e40375fbfeba2c17afa9eead348239a33e3204405c3b8670e3ecded530fa8ae64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e40375fbfeba2c17afa9eead348239a33e3204405c3b8670e3ecded530fa8ae64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BLOCKHASH CALLDATACOPY PUSH0 0xBF 0xEB LOG2 0xC1 PUSH27 0xFA9EEAD348239A33E3204405C3B8670E3ECDED530FA8AE64736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e40375fbfeba2c17afa9eead348239a33e3204405c3b8670e3ecded530fa8ae64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BLOCKHASH CALLDATACOPY PUSH0 0xBF 0xEB LOG2 0xC1 PUSH27 0xFA9EEAD348239A33E3204405C3B8670E3ECDED530FA8AE64736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e40375fbfeba2c17afa9eead348239a33e3204405c3b8670e3ecded530fa8ae64736f6c63430008150033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-contracts-master/contracts/access/Ownable.sol",
								"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts-master/contracts/utils/Context.sol",
								"openzeppelin-contracts-master/contracts/utils/Strings.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/math/Math.sol",
								"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol",
								"openzeppelin-contracts-master/gota.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts-master/gota.sol": {
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_platformFeeWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_royaltiesFeeWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "ListingCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isAuction",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expiresAt",
									"type": "uint256"
								}
							],
							"name": "ListingCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPercentage",
									"type": "uint256"
								}
							],
							"name": "PlatformFeePercentageUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "buyListing",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "cancelListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAuction",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "createListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getActiveListings",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAuction",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "expiresAt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextListingId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFeeWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltiesFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltiesFeeWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPercentage",
									"type": "uint256"
								}
							],
							"name": "setPlatformFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts-master/gota.sol\":299:4684  contract NFTMarketplace is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"openzeppelin-contracts-master/gota.sol\":641:642  5 */\n  0x05\n    /* \"openzeppelin-contracts-master/gota.sol\":602:642  uint256 public platformFeePercentage = 5 */\n  0x03\n  sstore\n    /* \"openzeppelin-contracts-master/gota.sol\":688:689  5 */\n  0x05\n    /* \"openzeppelin-contracts-master/gota.sol\":648:689  uint256 public royaltiesFeePercentage = 5 */\n  0x04\n  sstore\n    /* \"openzeppelin-contracts-master/gota.sol\":1305:1499  constructor(address _platformFeeWallet, address _royaltiesFeeWallet) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"openzeppelin-contracts-master/gota.sol\":1382:1392  msg.sender */\n  caller\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"openzeppelin-contracts-master/gota.sol\":1424:1442  _platformFeeWallet */\n  dup2\n    /* \"openzeppelin-contracts-master/gota.sol\":1404:1421  platformFeeWallet */\n  0x05\n  0x00\n    /* \"openzeppelin-contracts-master/gota.sol\":1404:1442  platformFeeWallet = _platformFeeWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"openzeppelin-contracts-master/gota.sol\":1473:1492  _royaltiesFeeWallet */\n  dup1\n    /* \"openzeppelin-contracts-master/gota.sol\":1452:1470  royaltiesFeeWallet */\n  0x06\n  0x00\n    /* \"openzeppelin-contracts-master/gota.sol\":1452:1492  royaltiesFeeWallet = _royaltiesFeeWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"openzeppelin-contracts-master/gota.sol\":1305:1499  constructor(address _platformFeeWallet, address _royaltiesFeeWallet) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"openzeppelin-contracts-master/gota.sol\":299:4684  contract NFTMarketplace is Ownable {... */\n  jump(tag_13)\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-contracts-master/gota.sol\":299:4684  contract NFTMarketplace is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts-master/gota.sol\":299:4684  contract NFTMarketplace is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xd9194bb2\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd9194bb2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xde74e57b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe20fc118\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xaaccf1ec\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcdd78cfc\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x4884f459\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x4884f459\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8333903e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x87c35bc0\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x0d08a3a0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1a5d63db\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x305a67a8\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin-contracts-master/gota.sol\":733:766  address public royaltiesFeeWallet */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/gota.sol\":648:689  uint256 public royaltiesFeePercentage = 5 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/gota.sol\":2724:3204  function cancelListing(uint256 listingId) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"openzeppelin-contracts-master/gota.sol\":3210:4133  function buyListing(uint256 listingId) external payable {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"openzeppelin-contracts-master/gota.sol\":1505:1772  function setPlatformFeePercentage(uint256 newPercentage) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"openzeppelin-contracts-master/gota.sol\":4139:4682  function getActiveListings() external view returns (uint256[] memory) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/gota.sol\":568:596  uint256 public nextListingId */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/gota.sol\":602:642  uint256 public platformFeePercentage = 5 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/gota.sol\":1778:2718  function createListing(address nftContract, uint256 tokenId, uint256 price, bool isAuction, uint256 duration) external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"openzeppelin-contracts-master/gota.sol\":519:562  mapping(uint256 => Listing) public listings */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/gota.sol\":695:727  address public platformFeeWallet */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"openzeppelin-contracts-master/gota.sol\":733:766  address public royaltiesFeeWallet */\n    tag_21:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":648:689  uint256 public royaltiesFeePercentage = 5 */\n    tag_26:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":2724:3204  function cancelListing(uint256 listingId) external {... */\n    tag_33:\n        /* \"openzeppelin-contracts-master/gota.sol\":2785:2808  Listing storage listing */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":2811:2819  listings */\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":2811:2830  listings[listingId] */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":2820:2829  listingId */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":2811:2830  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts-master/gota.sol\":2785:2830  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":2848:2855  listing */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":2848:2864  listing.isActive */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":2840:2890  require(listing.isActive, \"Listing is not active\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"openzeppelin-contracts-master/gota.sol\":2973:2977  this */\n      address\n        /* \"openzeppelin-contracts-master/gota.sol\":2908:2978  IERC721(listing.nftContract).ownerOf(listing.tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":2916:2923  listing */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":2916:2935  listing.nftContract */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":2908:2944  IERC721(listing.nftContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"openzeppelin-contracts-master/gota.sol\":2945:2952  listing */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":2945:2960  listing.tokenId */\n      0x01\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":2908:2961  IERC721(listing.nftContract).ownerOf(listing.tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"openzeppelin-contracts-master/gota.sol\":2908:2978  IERC721(listing.nftContract).ownerOf(listing.tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts-master/gota.sol\":2900:3023  require(IERC721(listing.nftContract).ownerOf(listing.tokenId) == address(this), \"Only the contract can cancel the listing\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"openzeppelin-contracts-master/gota.sol\":3042:3049  listing */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":3042:3061  listing.nftContract */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3034:3075  IERC721(listing.nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"openzeppelin-contracts-master/gota.sol\":3084:3088  this */\n      address\n        /* \"openzeppelin-contracts-master/gota.sol\":3091:3101  msg.sender */\n      caller\n        /* \"openzeppelin-contracts-master/gota.sol\":3103:3110  listing */\n      dup5\n        /* \"openzeppelin-contracts-master/gota.sol\":3103:3118  listing.tokenId */\n      0x01\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3034:3119  IERC721(listing.nftContract).transferFrom(address(this), msg.sender, listing.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3149:3154  false */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3130:3137  listing */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":3130:3146  listing.isActive */\n      0x03\n      add\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":3130:3154  listing.isActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3170:3197  ListingCancelled(listingId) */\n      0x411aee90354c51b1b04cd563fcab2617142a9d50da19232d888547c8a1b7fd8a\n        /* \"openzeppelin-contracts-master/gota.sol\":3187:3196  listingId */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":3170:3197  ListingCancelled(listingId) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"openzeppelin-contracts-master/gota.sol\":2775:3204  {... */\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":2724:3204  function cancelListing(uint256 listingId) external {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":3210:4133  function buyListing(uint256 listingId) external payable {... */\n    tag_36:\n        /* \"openzeppelin-contracts-master/gota.sol\":3276:3299  Listing storage listing */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3302:3310  listings */\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":3302:3321  listings[listingId] */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3311:3320  listingId */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":3302:3321  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts-master/gota.sol\":3276:3321  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3339:3346  listing */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":3339:3355  listing.isActive */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3331:3381  require(listing.isActive, \"Listing is not active\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_84\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"openzeppelin-contracts-master/gota.sol\":3416:3425  msg.value */\n      callvalue\n        /* \"openzeppelin-contracts-master/gota.sol\":3399:3406  listing */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":3399:3412  listing.price */\n      0x02\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3399:3425  listing.price == msg.value */\n      eq\n        /* \"openzeppelin-contracts-master/gota.sol\":3391:3454  require(listing.price == msg.value, \"Incorrect payment amount\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"openzeppelin-contracts-master/gota.sol\":3465:3479  address seller */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3490:3497  listing */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":3490:3509  listing.nftContract */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3482:3518  IERC721(listing.nftContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"openzeppelin-contracts-master/gota.sol\":3519:3526  listing */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":3519:3534  listing.tokenId */\n      0x01\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3482:3535  IERC721(listing.nftContract).ownerOf(listing.tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_105:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_108:\n        /* \"openzeppelin-contracts-master/gota.sol\":3465:3535  address seller = IERC721(listing.nftContract).ownerOf(listing.tokenId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3554:3561  listing */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":3554:3573  listing.nftContract */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3546:3587  IERC721(listing.nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"openzeppelin-contracts-master/gota.sol\":3596:3600  this */\n      address\n        /* \"openzeppelin-contracts-master/gota.sol\":3603:3613  msg.sender */\n      caller\n        /* \"openzeppelin-contracts-master/gota.sol\":3615:3622  listing */\n      dup6\n        /* \"openzeppelin-contracts-master/gota.sol\":3615:3630  listing.tokenId */\n      0x01\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3546:3631  IERC721(listing.nftContract).transferFrom(address(this), msg.sender, listing.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_109:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3642:3661  uint256 platformFee */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3706:3709  100 */\n      0x64\n        /* \"openzeppelin-contracts-master/gota.sol\":3681:3702  platformFeePercentage */\n      sload(0x03)\n        /* \"openzeppelin-contracts-master/gota.sol\":3665:3672  listing */\n      dup5\n        /* \"openzeppelin-contracts-master/gota.sol\":3665:3678  listing.price */\n      0x02\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3665:3702  listing.price * platformFeePercentage */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"openzeppelin-contracts-master/gota.sol\":3664:3709  (listing.price * platformFeePercentage) / 100 */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"openzeppelin-contracts-master/gota.sol\":3642:3709  uint256 platformFee = (listing.price * platformFeePercentage) / 100 */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3719:3739  uint256 royaltiesFee */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3785:3788  100 */\n      0x64\n        /* \"openzeppelin-contracts-master/gota.sol\":3759:3781  royaltiesFeePercentage */\n      sload(0x04)\n        /* \"openzeppelin-contracts-master/gota.sol\":3743:3750  listing */\n      dup6\n        /* \"openzeppelin-contracts-master/gota.sol\":3743:3756  listing.price */\n      0x02\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3743:3781  listing.price * royaltiesFeePercentage */\n      tag_117\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_117:\n        /* \"openzeppelin-contracts-master/gota.sol\":3742:3788  (listing.price * royaltiesFeePercentage) / 100 */\n      tag_118\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_118:\n        /* \"openzeppelin-contracts-master/gota.sol\":3719:3788  uint256 royaltiesFee = (listing.price * royaltiesFeePercentage) / 100 */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3798:3818  uint256 sellerAmount */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":3851:3863  royaltiesFee */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":3837:3848  platformFee */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":3821:3828  listing */\n      dup7\n        /* \"openzeppelin-contracts-master/gota.sol\":3821:3834  listing.price */\n      0x02\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":3821:3848  listing.price - platformFee */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"openzeppelin-contracts-master/gota.sol\":3821:3863  listing.price - platformFee - royaltiesFee */\n      tag_121\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n        /* \"openzeppelin-contracts-master/gota.sol\":3798:3863  uint256 sellerAmount = listing.price - platformFee - royaltiesFee */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3882:3899  platformFeeWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3874:3909  payable(platformFeeWallet).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3874:3922  payable(platformFeeWallet).transfer(platformFee) */\n      0x08fc\n        /* \"openzeppelin-contracts-master/gota.sol\":3910:3921  platformFee */\n      dup5\n        /* \"openzeppelin-contracts-master/gota.sol\":3874:3922  payable(platformFeeWallet).transfer(platformFee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3940:3958  royaltiesFeeWallet */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3932:3968  payable(royaltiesFeeWallet).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3932:3982  payable(royaltiesFeeWallet).transfer(royaltiesFee) */\n      0x08fc\n        /* \"openzeppelin-contracts-master/gota.sol\":3969:3981  royaltiesFee */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":3932:3982  payable(royaltiesFeeWallet).transfer(royaltiesFee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4000:4006  seller */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":3992:4016  payable(seller).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":3992:4030  payable(seller).transfer(sellerAmount) */\n      0x08fc\n        /* \"openzeppelin-contracts-master/gota.sol\":4017:4029  sellerAmount */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":3992:4030  payable(seller).transfer(sellerAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4060:4065  false */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":4041:4048  listing */\n      dup6\n        /* \"openzeppelin-contracts-master/gota.sol\":4041:4057  listing.isActive */\n      0x03\n      add\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":4041:4065  listing.isActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4100:4110  msg.sender */\n      caller\n        /* \"openzeppelin-contracts-master/gota.sol\":4081:4126  NFTSold(listingId, msg.sender, listing.price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a\n        /* \"openzeppelin-contracts-master/gota.sol\":4089:4098  listingId */\n      dup8\n        /* \"openzeppelin-contracts-master/gota.sol\":4112:4119  listing */\n      dup8\n        /* \"openzeppelin-contracts-master/gota.sol\":4112:4125  listing.price */\n      0x02\n      add\n      sload\n        /* \"openzeppelin-contracts-master/gota.sol\":4081:4126  NFTSold(listingId, msg.sender, listing.price) */\n      mload(0x40)\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"openzeppelin-contracts-master/gota.sol\":3266:4133  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":3210:4133  function buyListing(uint256 listingId) external payable {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_39:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_134\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_135\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":1505:1772  function setPlatformFeePercentage(uint256 newPercentage) external onlyOwner {... */\n    tag_43:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"openzeppelin-contracts-master/gota.sol\":1616:1619  100 */\n      0x64\n        /* \"openzeppelin-contracts-master/gota.sol\":1599:1612  newPercentage */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":1599:1619  newPercentage <= 100 */\n      gt\n      iszero\n        /* \"openzeppelin-contracts-master/gota.sol\":1591:1660  require(newPercentage <= 100, \"Percentage must be between 0 and 100\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"openzeppelin-contracts-master/gota.sol\":1694:1707  newPercentage */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":1670:1691  platformFeePercentage */\n      0x03\n        /* \"openzeppelin-contracts-master/gota.sol\":1670:1707  platformFeePercentage = newPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":1722:1765  PlatformFeePercentageUpdated(newPercentage) */\n      0xd0a5ddfa06600c6481dcd2923a572827c06e53859f23f7ddab41ff3144ee8687\n        /* \"openzeppelin-contracts-master/gota.sol\":1751:1764  newPercentage */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":1722:1765  PlatformFeePercentageUpdated(newPercentage) */\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"openzeppelin-contracts-master/gota.sol\":1505:1772  function setPlatformFeePercentage(uint256 newPercentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":4139:4682  function getActiveListings() external view returns (uint256[] memory) {... */\n    tag_46:\n        /* \"openzeppelin-contracts-master/gota.sol\":4191:4207  uint256[] memory */\n      0x60\n        /* \"openzeppelin-contracts-master/gota.sol\":4219:4250  uint256[] memory activeListings */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":4267:4280  nextListingId */\n      sload(0x02)\n        /* \"openzeppelin-contracts-master/gota.sol\":4253:4281  new uint256[](nextListingId) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n    tag_144:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_147:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4219:4281  uint256[] memory activeListings = new uint256[](nextListingId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4291:4304  uint256 count */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":4324:4333  uint256 i */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":4319:4496  for (uint256 i = 0; i < nextListingId; i++) {... */\n    tag_148:\n        /* \"openzeppelin-contracts-master/gota.sol\":4343:4356  nextListingId */\n      sload(0x02)\n        /* \"openzeppelin-contracts-master/gota.sol\":4339:4340  i */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":4339:4356  i < nextListingId */\n      lt\n        /* \"openzeppelin-contracts-master/gota.sol\":4319:4496  for (uint256 i = 0; i < nextListingId; i++) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"openzeppelin-contracts-master/gota.sol\":4381:4389  listings */\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":4381:4392  listings[i] */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":4390:4391  i */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":4381:4392  listings[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts-master/gota.sol\":4381:4401  listings[i].isActive */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":4377:4486  if (listings[i].isActive) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"openzeppelin-contracts-master/gota.sol\":4445:4446  i */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":4421:4435  activeListings */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":4436:4441  count */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":4421:4442  activeListings[count] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n    tag_152:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":4421:4446  activeListings[count] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4464:4471  count++ */\n      dup2\n      dup1\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4377:4486  if (listings[i].isActive) {... */\n    tag_151:\n        /* \"openzeppelin-contracts-master/gota.sol\":4358:4361  i++ */\n      dup1\n      dup1\n      tag_157\n      swap1\n      tag_156\n      jump\t// in\n    tag_157:\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4319:4496  for (uint256 i = 0; i < nextListingId; i++) {... */\n      jump(tag_148)\n    tag_149:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4506:4529  uint256[] memory result */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":4546:4551  count */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":4532:4552  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_158\n      jumpi\n      tag_159\n      tag_146\n      jump\t// in\n    tag_159:\n    tag_158:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_160:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4506:4552  uint256[] memory result = new uint256[](count) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4567:4576  uint256 i */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":4562:4652  for (uint256 i = 0; i < count; i++) {... */\n    tag_161:\n        /* \"openzeppelin-contracts-master/gota.sol\":4586:4591  count */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":4582:4583  i */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":4582:4591  i < count */\n      lt\n        /* \"openzeppelin-contracts-master/gota.sol\":4562:4652  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"openzeppelin-contracts-master/gota.sol\":4624:4638  activeListings */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":4639:4640  i */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":4624:4641  activeListings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_154\n      jump\t// in\n    tag_165:\n    tag_164:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"openzeppelin-contracts-master/gota.sol\":4612:4618  result */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":4619:4620  i */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":4612:4621  result[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_167\n      tag_154\n      jump\t// in\n    tag_167:\n    tag_166:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":4612:4641  result[i] = activeListings[i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4593:4596  i++ */\n      dup1\n      dup1\n      tag_168\n      swap1\n      tag_156\n      jump\t// in\n    tag_168:\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4562:4652  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_161)\n    tag_162:\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4669:4675  result */\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":4662:4675  return result */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":4139:4682  function getActiveListings() external view returns (uint256[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":568:596  uint256 public nextListingId */\n    tag_55:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":602:642  uint256 public platformFeePercentage = 5 */\n    tag_59:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":1778:2718  function createListing(address nftContract, uint256 tokenId, uint256 price, bool isAuction, uint256 duration) external {... */\n    tag_65:\n        /* \"openzeppelin-contracts-master/gota.sol\":1923:1924  0 */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":1915:1920  price */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":1915:1924  price > 0 */\n      gt\n        /* \"openzeppelin-contracts-master/gota.sol\":1907:1960  require(price > 0, \"Price must be greater than zero\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"openzeppelin-contracts-master/gota.sol\":2019:2029  msg.sender */\n      caller\n        /* \"openzeppelin-contracts-master/gota.sol\":1978:2029  IERC721(nftContract).ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/gota.sol\":1986:1997  nftContract */\n      dup6\n        /* \"openzeppelin-contracts-master/gota.sol\":1978:2006  IERC721(nftContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"openzeppelin-contracts-master/gota.sol\":2007:2014  tokenId */\n      dup7\n        /* \"openzeppelin-contracts-master/gota.sol\":1978:2015  IERC721(nftContract).ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_177:\n        /* \"openzeppelin-contracts-master/gota.sol\":1978:2029  IERC721(nftContract).ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts-master/gota.sol\":1970:2069  require(IERC721(nftContract).ownerOf(tokenId) == msg.sender, \"Only NFT owner can create a listing\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"openzeppelin-contracts-master/gota.sol\":2084:2093  isAuction */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":2080:2230  if (isAuction) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"openzeppelin-contracts-master/gota.sol\":2128:2129  0 */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":2117:2125  duration */\n      dup2\n        /* \"openzeppelin-contracts-master/gota.sol\":2117:2129  duration > 0 */\n      gt\n        /* \"openzeppelin-contracts-master/gota.sol\":2109:2176  require(duration > 0, \"Auction duration must be greater than zero\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"openzeppelin-contracts-master/gota.sol\":2080:2230  if (isAuction) {... */\n      jump(tag_185)\n    tag_181:\n        /* \"openzeppelin-contracts-master/gota.sol\":2218:2219  0 */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":2207:2219  duration = 0 */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":2080:2230  if (isAuction) {... */\n    tag_185:\n        /* \"openzeppelin-contracts-master/gota.sol\":2248:2259  nftContract */\n      dup5\n        /* \"openzeppelin-contracts-master/gota.sol\":2240:2273  IERC721(nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"openzeppelin-contracts-master/gota.sol\":2274:2284  msg.sender */\n      caller\n        /* \"openzeppelin-contracts-master/gota.sol\":2294:2298  this */\n      address\n        /* \"openzeppelin-contracts-master/gota.sol\":2301:2308  tokenId */\n      dup8\n        /* \"openzeppelin-contracts-master/gota.sol\":2240:2309  IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_186:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"openzeppelin-contracts-master/gota.sol\":2381:2392  nftContract */\n      dup7\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":2415:2422  tokenId */\n      dup6\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":2443:2448  price */\n      dup5\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":2473:2482  isAuction */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":2506:2510  true */\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"openzeppelin-contracts-master/gota.sol\":2553:2561  duration */\n      dup3\n        /* \"openzeppelin-contracts-master/gota.sol\":2535:2550  block.timestamp */\n      timestamp\n        /* \"openzeppelin-contracts-master/gota.sol\":2535:2561  block.timestamp + duration */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"openzeppelin-contracts-master/gota.sol\":2346:2572  Listing({... */\n      dup2\n      mstore\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":2320:2328  listings */\n      0x01\n        /* \"openzeppelin-contracts-master/gota.sol\":2320:2343  listings[nextListingId] */\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":2329:2342  nextListingId */\n      sload(0x02)\n        /* \"openzeppelin-contracts-master/gota.sol\":2320:2343  listings[nextListingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts-master/gota.sol\":2320:2572  listings[nextListingId] = Listing({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":2631:2638  tokenId */\n      dup4\n        /* \"openzeppelin-contracts-master/gota.sol\":2618:2629  nftContract */\n      dup6\n        /* \"openzeppelin-contracts-master/gota.sol\":2588:2685  ListingCreated(nextListingId, nftContract, tokenId, price, isAuction, block.timestamp + duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b20b21402c6ccf4b5f2e911ee605585802d96508e51890a1a317975b864dbb0\n        /* \"openzeppelin-contracts-master/gota.sol\":2603:2616  nextListingId */\n      sload(0x02)\n        /* \"openzeppelin-contracts-master/gota.sol\":2640:2645  price */\n      dup7\n        /* \"openzeppelin-contracts-master/gota.sol\":2647:2656  isAuction */\n      dup7\n        /* \"openzeppelin-contracts-master/gota.sol\":2676:2684  duration */\n      dup7\n        /* \"openzeppelin-contracts-master/gota.sol\":2658:2673  block.timestamp */\n      timestamp\n        /* \"openzeppelin-contracts-master/gota.sol\":2658:2684  block.timestamp + duration */\n      tag_192\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_192:\n        /* \"openzeppelin-contracts-master/gota.sol\":2588:2685  ListingCreated(nextListingId, nftContract, tokenId, price, isAuction, block.timestamp + duration) */\n      mload(0x40)\n      tag_193\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-contracts-master/gota.sol\":2696:2709  nextListingId */\n      0x02\n      0x00\n        /* \"openzeppelin-contracts-master/gota.sol\":2696:2711  nextListingId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_195\n      swap1\n      tag_156\n      jump\t// in\n    tag_195:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"openzeppelin-contracts-master/gota.sol\":1778:2718  function createListing(address nftContract, uint256 tokenId, uint256 price, bool isAuction, uint256 duration) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":519:562  mapping(uint256 => Listing) public listings */\n    tag_69:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"openzeppelin-contracts-master/gota.sol\":695:727  address public platformFeeWallet */\n    tag_74:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_199:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_201\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_135\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_201:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_203\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_204\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_205\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_51\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_205:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_206\n      jumpi\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_207\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_204\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_206:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"openzeppelin-contracts-master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts-master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_204:\n        /* \"openzeppelin-contracts-master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"openzeppelin-contracts-master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"openzeppelin-contracts-master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin-contracts-master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_211:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_212:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_255\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_211\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_213:\n        /* \"#utility.yul\":328:352   */\n      tag_257\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_212\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_23:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_259\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_213\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_214:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_215:\n        /* \"#utility.yul\":763:787   */\n      tag_262\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_214\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_28:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_264\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_215\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_217:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_219:\n        /* \"#utility.yul\":1428:1452   */\n      tag_269\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_214\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_270:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_220:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_272\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_219\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_32:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_275\n      tag_217\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1704:1823   */\n    tag_274:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_276\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_220\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2077   */\n    tag_221:\n        /* \"#utility.yul\":2030:2036   */\n      0x00\n        /* \"#utility.yul\":2064:2069   */\n      dup2\n        /* \"#utility.yul\":2058:2070   */\n      mload\n        /* \"#utility.yul\":2048:2070   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2083:2267   */\n    tag_222:\n        /* \"#utility.yul\":2182:2193   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup3\n        /* \"#utility.yul\":2211:2214   */\n      dup3\n        /* \"#utility.yul\":2204:2223   */\n      mstore\n        /* \"#utility.yul\":2256:2260   */\n      0x20\n        /* \"#utility.yul\":2251:2254   */\n      dup3\n        /* \"#utility.yul\":2247:2261   */\n      add\n        /* \"#utility.yul\":2232:2261   */\n      swap1\n      pop\n        /* \"#utility.yul\":2083:2267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2273:2405   */\n    tag_223:\n        /* \"#utility.yul\":2340:2344   */\n      0x00\n        /* \"#utility.yul\":2363:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2366   */\n      swap1\n      pop\n        /* \"#utility.yul\":2393:2397   */\n      0x20\n        /* \"#utility.yul\":2388:2391   */\n      dup3\n        /* \"#utility.yul\":2384:2398   */\n      add\n        /* \"#utility.yul\":2376:2398   */\n      swap1\n      pop\n        /* \"#utility.yul\":2273:2405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2411:2519   */\n    tag_224:\n        /* \"#utility.yul\":2488:2512   */\n      tag_281\n        /* \"#utility.yul\":2506:2511   */\n      dup2\n        /* \"#utility.yul\":2488:2512   */\n      tag_214\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2483:2486   */\n      dup3\n        /* \"#utility.yul\":2476:2513   */\n      mstore\n        /* \"#utility.yul\":2411:2519   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2525:2704   */\n    tag_225:\n        /* \"#utility.yul\":2594:2604   */\n      0x00\n        /* \"#utility.yul\":2615:2661   */\n      tag_283\n        /* \"#utility.yul\":2657:2660   */\n      dup4\n        /* \"#utility.yul\":2649:2655   */\n      dup4\n        /* \"#utility.yul\":2615:2661   */\n      tag_224\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2693:2697   */\n      0x20\n        /* \"#utility.yul\":2688:2691   */\n      dup4\n        /* \"#utility.yul\":2684:2698   */\n      add\n        /* \"#utility.yul\":2670:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2823   */\n    tag_226:\n        /* \"#utility.yul\":2780:2784   */\n      0x00\n        /* \"#utility.yul\":2812:2816   */\n      0x20\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      add\n        /* \"#utility.yul\":2795:2817   */\n      swap1\n      pop\n        /* \"#utility.yul\":2710:2823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2859:3591   */\n    tag_227:\n        /* \"#utility.yul\":2978:2981   */\n      0x00\n        /* \"#utility.yul\":3007:3061   */\n      tag_286\n        /* \"#utility.yul\":3055:3060   */\n      dup3\n        /* \"#utility.yul\":3007:3061   */\n      tag_221\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3077:3163   */\n      tag_287\n        /* \"#utility.yul\":3156:3162   */\n      dup2\n        /* \"#utility.yul\":3151:3154   */\n      dup6\n        /* \"#utility.yul\":3077:3163   */\n      tag_222\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3070:3163   */\n      swap4\n      pop\n        /* \"#utility.yul\":3187:3243   */\n      tag_288\n        /* \"#utility.yul\":3237:3242   */\n      dup4\n        /* \"#utility.yul\":3187:3243   */\n      tag_223\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3266:3273   */\n      dup1\n        /* \"#utility.yul\":3297:3298   */\n      0x00\n        /* \"#utility.yul\":3282:3566   */\n    tag_289:\n        /* \"#utility.yul\":3307:3313   */\n      dup4\n        /* \"#utility.yul\":3304:3305   */\n      dup2\n        /* \"#utility.yul\":3301:3314   */\n      lt\n        /* \"#utility.yul\":3282:3566   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3383:3389   */\n      dup2\n        /* \"#utility.yul\":3377:3390   */\n      mload\n        /* \"#utility.yul\":3410:3473   */\n      tag_292\n        /* \"#utility.yul\":3469:3472   */\n      dup9\n        /* \"#utility.yul\":3454:3467   */\n      dup3\n        /* \"#utility.yul\":3410:3473   */\n      tag_225\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3403:3473   */\n      swap8\n      pop\n        /* \"#utility.yul\":3496:3556   */\n      tag_293\n        /* \"#utility.yul\":3549:3555   */\n      dup4\n        /* \"#utility.yul\":3496:3556   */\n      tag_226\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3486:3556   */\n      swap3\n      pop\n        /* \"#utility.yul\":3342:3566   */\n      pop\n        /* \"#utility.yul\":3329:3330   */\n      0x01\n        /* \"#utility.yul\":3326:3327   */\n      dup2\n        /* \"#utility.yul\":3322:3331   */\n      add\n        /* \"#utility.yul\":3317:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3566   */\n      jump(tag_289)\n    tag_291:\n        /* \"#utility.yul\":3286:3300   */\n      pop\n        /* \"#utility.yul\":3582:3585   */\n      dup6\n        /* \"#utility.yul\":3575:3585   */\n      swap4\n      pop\n        /* \"#utility.yul\":2983:3591   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2859:3591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3597:3970   */\n    tag_48:\n        /* \"#utility.yul\":3740:3744   */\n      0x00\n        /* \"#utility.yul\":3778:3780   */\n      0x20\n        /* \"#utility.yul\":3767:3776   */\n      dup3\n        /* \"#utility.yul\":3763:3781   */\n      add\n        /* \"#utility.yul\":3755:3781   */\n      swap1\n      pop\n        /* \"#utility.yul\":3827:3836   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      dup2\n        /* \"#utility.yul\":3817:3837   */\n      sub\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3802:3811   */\n      dup4\n        /* \"#utility.yul\":3798:3815   */\n      add\n        /* \"#utility.yul\":3791:3838   */\n      mstore\n        /* \"#utility.yul\":3855:3963   */\n      tag_295\n        /* \"#utility.yul\":3958:3962   */\n      dup2\n        /* \"#utility.yul\":3949:3955   */\n      dup5\n        /* \"#utility.yul\":3855:3963   */\n      tag_227\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3847:3963   */\n      swap1\n      pop\n        /* \"#utility.yul\":3597:3970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3976:4098   */\n    tag_228:\n        /* \"#utility.yul\":4049:4073   */\n      tag_297\n        /* \"#utility.yul\":4067:4072   */\n      dup2\n        /* \"#utility.yul\":4049:4073   */\n      tag_212\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4042:4047   */\n      dup2\n        /* \"#utility.yul\":4039:4074   */\n      eq\n        /* \"#utility.yul\":4029:4092   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":4088:4089   */\n      0x00\n        /* \"#utility.yul\":4085:4086   */\n      dup1\n        /* \"#utility.yul\":4078:4090   */\n      revert\n        /* \"#utility.yul\":4029:4092   */\n    tag_298:\n        /* \"#utility.yul\":3976:4098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4104:4243   */\n    tag_229:\n        /* \"#utility.yul\":4150:4155   */\n      0x00\n        /* \"#utility.yul\":4188:4194   */\n      dup2\n        /* \"#utility.yul\":4175:4195   */\n      calldataload\n        /* \"#utility.yul\":4166:4195   */\n      swap1\n      pop\n        /* \"#utility.yul\":4204:4237   */\n      tag_300\n        /* \"#utility.yul\":4231:4236   */\n      dup2\n        /* \"#utility.yul\":4204:4237   */\n      tag_228\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4104:4243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4339   */\n    tag_230:\n        /* \"#utility.yul\":4283:4290   */\n      0x00\n        /* \"#utility.yul\":4326:4331   */\n      dup2\n        /* \"#utility.yul\":4319:4332   */\n      iszero\n        /* \"#utility.yul\":4312:4333   */\n      iszero\n        /* \"#utility.yul\":4301:4333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4249:4339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4345:4461   */\n    tag_231:\n        /* \"#utility.yul\":4415:4436   */\n      tag_303\n        /* \"#utility.yul\":4430:4435   */\n      dup2\n        /* \"#utility.yul\":4415:4436   */\n      tag_230\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4408:4413   */\n      dup2\n        /* \"#utility.yul\":4405:4437   */\n      eq\n        /* \"#utility.yul\":4395:4455   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4451:4452   */\n      0x00\n        /* \"#utility.yul\":4448:4449   */\n      dup1\n        /* \"#utility.yul\":4441:4453   */\n      revert\n        /* \"#utility.yul\":4395:4455   */\n    tag_304:\n        /* \"#utility.yul\":4345:4461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4467:4600   */\n    tag_232:\n        /* \"#utility.yul\":4510:4515   */\n      0x00\n        /* \"#utility.yul\":4548:4554   */\n      dup2\n        /* \"#utility.yul\":4535:4555   */\n      calldataload\n        /* \"#utility.yul\":4526:4555   */\n      swap1\n      pop\n        /* \"#utility.yul\":4564:4594   */\n      tag_306\n        /* \"#utility.yul\":4588:4593   */\n      dup2\n        /* \"#utility.yul\":4564:4594   */\n      tag_231\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4467:4600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4606:5511   */\n    tag_64:\n        /* \"#utility.yul\":4698:4704   */\n      0x00\n        /* \"#utility.yul\":4706:4712   */\n      dup1\n        /* \"#utility.yul\":4714:4720   */\n      0x00\n        /* \"#utility.yul\":4722:4728   */\n      dup1\n        /* \"#utility.yul\":4730:4736   */\n      0x00\n        /* \"#utility.yul\":4779:4782   */\n      0xa0\n        /* \"#utility.yul\":4767:4776   */\n      dup7\n        /* \"#utility.yul\":4758:4765   */\n      dup9\n        /* \"#utility.yul\":4754:4777   */\n      sub\n        /* \"#utility.yul\":4750:4783   */\n      slt\n        /* \"#utility.yul\":4747:4867   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4786:4865   */\n      tag_309\n      tag_217\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4747:4867   */\n    tag_308:\n        /* \"#utility.yul\":4906:4907   */\n      0x00\n        /* \"#utility.yul\":4931:4984   */\n      tag_310\n        /* \"#utility.yul\":4976:4983   */\n      dup9\n        /* \"#utility.yul\":4967:4973   */\n      dup3\n        /* \"#utility.yul\":4956:4965   */\n      dup10\n        /* \"#utility.yul\":4952:4974   */\n      add\n        /* \"#utility.yul\":4931:4984   */\n      tag_229\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4921:4984   */\n      swap6\n      pop\n        /* \"#utility.yul\":4877:4994   */\n      pop\n        /* \"#utility.yul\":5033:5035   */\n      0x20\n        /* \"#utility.yul\":5059:5112   */\n      tag_311\n        /* \"#utility.yul\":5104:5111   */\n      dup9\n        /* \"#utility.yul\":5095:5101   */\n      dup3\n        /* \"#utility.yul\":5084:5093   */\n      dup10\n        /* \"#utility.yul\":5080:5102   */\n      add\n        /* \"#utility.yul\":5059:5112   */\n      tag_220\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5049:5112   */\n      swap5\n      pop\n        /* \"#utility.yul\":5004:5122   */\n      pop\n        /* \"#utility.yul\":5161:5163   */\n      0x40\n        /* \"#utility.yul\":5187:5240   */\n      tag_312\n        /* \"#utility.yul\":5232:5239   */\n      dup9\n        /* \"#utility.yul\":5223:5229   */\n      dup3\n        /* \"#utility.yul\":5212:5221   */\n      dup10\n        /* \"#utility.yul\":5208:5230   */\n      add\n        /* \"#utility.yul\":5187:5240   */\n      tag_220\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5177:5240   */\n      swap4\n      pop\n        /* \"#utility.yul\":5132:5250   */\n      pop\n        /* \"#utility.yul\":5289:5291   */\n      0x60\n        /* \"#utility.yul\":5315:5365   */\n      tag_313\n        /* \"#utility.yul\":5357:5364   */\n      dup9\n        /* \"#utility.yul\":5348:5354   */\n      dup3\n        /* \"#utility.yul\":5337:5346   */\n      dup10\n        /* \"#utility.yul\":5333:5355   */\n      add\n        /* \"#utility.yul\":5315:5365   */\n      tag_232\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5305:5365   */\n      swap3\n      pop\n        /* \"#utility.yul\":5260:5375   */\n      pop\n        /* \"#utility.yul\":5414:5417   */\n      0x80\n        /* \"#utility.yul\":5441:5494   */\n      tag_314\n        /* \"#utility.yul\":5486:5493   */\n      dup9\n        /* \"#utility.yul\":5477:5483   */\n      dup3\n        /* \"#utility.yul\":5466:5475   */\n      dup10\n        /* \"#utility.yul\":5462:5484   */\n      add\n        /* \"#utility.yul\":5441:5494   */\n      tag_220\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5431:5494   */\n      swap2\n      pop\n        /* \"#utility.yul\":5385:5504   */\n      pop\n        /* \"#utility.yul\":4606:5511   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5517:5626   */\n    tag_233:\n        /* \"#utility.yul\":5598:5619   */\n      tag_316\n        /* \"#utility.yul\":5613:5618   */\n      dup2\n        /* \"#utility.yul\":5598:5619   */\n      tag_230\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5593:5596   */\n      dup3\n        /* \"#utility.yul\":5586:5620   */\n      mstore\n        /* \"#utility.yul\":5517:5626   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5632:6383   */\n    tag_71:\n        /* \"#utility.yul\":5853:5857   */\n      0x00\n        /* \"#utility.yul\":5891:5894   */\n      0xc0\n        /* \"#utility.yul\":5880:5889   */\n      dup3\n        /* \"#utility.yul\":5876:5895   */\n      add\n        /* \"#utility.yul\":5868:5895   */\n      swap1\n      pop\n        /* \"#utility.yul\":5905:5976   */\n      tag_318\n        /* \"#utility.yul\":5973:5974   */\n      0x00\n        /* \"#utility.yul\":5962:5971   */\n      dup4\n        /* \"#utility.yul\":5958:5975   */\n      add\n        /* \"#utility.yul\":5949:5955   */\n      dup10\n        /* \"#utility.yul\":5905:5976   */\n      tag_213\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5986:6058   */\n      tag_319\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6043:6052   */\n      dup4\n        /* \"#utility.yul\":6039:6057   */\n      add\n        /* \"#utility.yul\":6030:6036   */\n      dup9\n        /* \"#utility.yul\":5986:6058   */\n      tag_215\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6068:6140   */\n      tag_320\n        /* \"#utility.yul\":6136:6138   */\n      0x40\n        /* \"#utility.yul\":6125:6134   */\n      dup4\n        /* \"#utility.yul\":6121:6139   */\n      add\n        /* \"#utility.yul\":6112:6118   */\n      dup8\n        /* \"#utility.yul\":6068:6140   */\n      tag_215\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6150:6216   */\n      tag_321\n        /* \"#utility.yul\":6212:6214   */\n      0x60\n        /* \"#utility.yul\":6201:6210   */\n      dup4\n        /* \"#utility.yul\":6197:6215   */\n      add\n        /* \"#utility.yul\":6188:6194   */\n      dup7\n        /* \"#utility.yul\":6150:6216   */\n      tag_233\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6226:6293   */\n      tag_322\n        /* \"#utility.yul\":6288:6291   */\n      0x80\n        /* \"#utility.yul\":6277:6286   */\n      dup4\n        /* \"#utility.yul\":6273:6292   */\n      add\n        /* \"#utility.yul\":6264:6270   */\n      dup6\n        /* \"#utility.yul\":6226:6293   */\n      tag_233\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6303:6376   */\n      tag_323\n        /* \"#utility.yul\":6371:6374   */\n      0xa0\n        /* \"#utility.yul\":6360:6369   */\n      dup4\n        /* \"#utility.yul\":6356:6375   */\n      add\n        /* \"#utility.yul\":6347:6353   */\n      dup5\n        /* \"#utility.yul\":6303:6376   */\n      tag_215\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5632:6383   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6389:6718   */\n    tag_79:\n        /* \"#utility.yul\":6448:6454   */\n      0x00\n        /* \"#utility.yul\":6497:6499   */\n      0x20\n        /* \"#utility.yul\":6485:6494   */\n      dup3\n        /* \"#utility.yul\":6476:6483   */\n      dup5\n        /* \"#utility.yul\":6472:6495   */\n      sub\n        /* \"#utility.yul\":6468:6500   */\n      slt\n        /* \"#utility.yul\":6465:6584   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6503:6582   */\n      tag_326\n      tag_217\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6465:6584   */\n    tag_325:\n        /* \"#utility.yul\":6623:6624   */\n      0x00\n        /* \"#utility.yul\":6648:6701   */\n      tag_327\n        /* \"#utility.yul\":6693:6700   */\n      dup5\n        /* \"#utility.yul\":6684:6690   */\n      dup3\n        /* \"#utility.yul\":6673:6682   */\n      dup6\n        /* \"#utility.yul\":6669:6691   */\n      add\n        /* \"#utility.yul\":6648:6701   */\n      tag_229\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6638:6701   */\n      swap2\n      pop\n        /* \"#utility.yul\":6594:6711   */\n      pop\n        /* \"#utility.yul\":6389:6718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6724:6893   */\n    tag_234:\n        /* \"#utility.yul\":6808:6819   */\n      0x00\n        /* \"#utility.yul\":6842:6848   */\n      dup3\n        /* \"#utility.yul\":6837:6840   */\n      dup3\n        /* \"#utility.yul\":6830:6849   */\n      mstore\n        /* \"#utility.yul\":6882:6886   */\n      0x20\n        /* \"#utility.yul\":6877:6880   */\n      dup3\n        /* \"#utility.yul\":6873:6887   */\n      add\n        /* \"#utility.yul\":6858:6887   */\n      swap1\n      pop\n        /* \"#utility.yul\":6724:6893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6899:7070   */\n    tag_235:\n        /* \"#utility.yul\":7039:7062   */\n      0x4c697374696e67206973206e6f74206163746976650000000000000000000000\n        /* \"#utility.yul\":7035:7036   */\n      0x00\n        /* \"#utility.yul\":7027:7033   */\n      dup3\n        /* \"#utility.yul\":7023:7037   */\n      add\n        /* \"#utility.yul\":7016:7063   */\n      mstore\n        /* \"#utility.yul\":6899:7070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7076:7442   */\n    tag_236:\n        /* \"#utility.yul\":7218:7221   */\n      0x00\n        /* \"#utility.yul\":7239:7306   */\n      tag_331\n        /* \"#utility.yul\":7303:7305   */\n      0x15\n        /* \"#utility.yul\":7298:7301   */\n      dup4\n        /* \"#utility.yul\":7239:7306   */\n      tag_234\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7232:7306   */\n      swap2\n      pop\n        /* \"#utility.yul\":7315:7408   */\n      tag_332\n        /* \"#utility.yul\":7404:7407   */\n      dup3\n        /* \"#utility.yul\":7315:7408   */\n      tag_235\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7433:7435   */\n      0x20\n        /* \"#utility.yul\":7428:7431   */\n      dup3\n        /* \"#utility.yul\":7424:7436   */\n      add\n        /* \"#utility.yul\":7417:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7076:7442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7448:7867   */\n    tag_84:\n        /* \"#utility.yul\":7614:7618   */\n      0x00\n        /* \"#utility.yul\":7652:7654   */\n      0x20\n        /* \"#utility.yul\":7641:7650   */\n      dup3\n        /* \"#utility.yul\":7637:7655   */\n      add\n        /* \"#utility.yul\":7629:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7701:7710   */\n      dup2\n        /* \"#utility.yul\":7695:7699   */\n      dup2\n        /* \"#utility.yul\":7691:7711   */\n      sub\n        /* \"#utility.yul\":7687:7688   */\n      0x00\n        /* \"#utility.yul\":7676:7685   */\n      dup4\n        /* \"#utility.yul\":7672:7689   */\n      add\n        /* \"#utility.yul\":7665:7712   */\n      mstore\n        /* \"#utility.yul\":7729:7860   */\n      tag_334\n        /* \"#utility.yul\":7855:7859   */\n      dup2\n        /* \"#utility.yul\":7729:7860   */\n      tag_236\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7721:7860   */\n      swap1\n      pop\n        /* \"#utility.yul\":7448:7867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7873:8016   */\n    tag_237:\n        /* \"#utility.yul\":7930:7935   */\n      0x00\n        /* \"#utility.yul\":7961:7967   */\n      dup2\n        /* \"#utility.yul\":7955:7968   */\n      mload\n        /* \"#utility.yul\":7946:7968   */\n      swap1\n      pop\n        /* \"#utility.yul\":7977:8010   */\n      tag_336\n        /* \"#utility.yul\":8004:8009   */\n      dup2\n        /* \"#utility.yul\":7977:8010   */\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7873:8016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8022:8373   */\n    tag_89:\n        /* \"#utility.yul\":8092:8098   */\n      0x00\n        /* \"#utility.yul\":8141:8143   */\n      0x20\n        /* \"#utility.yul\":8129:8138   */\n      dup3\n        /* \"#utility.yul\":8120:8127   */\n      dup5\n        /* \"#utility.yul\":8116:8139   */\n      sub\n        /* \"#utility.yul\":8112:8144   */\n      slt\n        /* \"#utility.yul\":8109:8228   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":8147:8226   */\n      tag_339\n      tag_217\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8109:8228   */\n    tag_338:\n        /* \"#utility.yul\":8267:8268   */\n      0x00\n        /* \"#utility.yul\":8292:8356   */\n      tag_340\n        /* \"#utility.yul\":8348:8355   */\n      dup5\n        /* \"#utility.yul\":8339:8345   */\n      dup3\n        /* \"#utility.yul\":8328:8337   */\n      dup6\n        /* \"#utility.yul\":8324:8346   */\n      add\n        /* \"#utility.yul\":8292:8356   */\n      tag_237\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8282:8356   */\n      swap2\n      pop\n        /* \"#utility.yul\":8238:8366   */\n      pop\n        /* \"#utility.yul\":8022:8373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8379:8606   */\n    tag_238:\n        /* \"#utility.yul\":8519:8553   */\n      0x4f6e6c792074686520636f6e74726163742063616e2063616e63656c20746865\n        /* \"#utility.yul\":8515:8516   */\n      0x00\n        /* \"#utility.yul\":8507:8513   */\n      dup3\n        /* \"#utility.yul\":8503:8517   */\n      add\n        /* \"#utility.yul\":8496:8554   */\n      mstore\n        /* \"#utility.yul\":8588:8598   */\n      0x206c697374696e67000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8583:8585   */\n      0x20\n        /* \"#utility.yul\":8575:8581   */\n      dup3\n        /* \"#utility.yul\":8571:8586   */\n      add\n        /* \"#utility.yul\":8564:8599   */\n      mstore\n        /* \"#utility.yul\":8379:8606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8612:8978   */\n    tag_239:\n        /* \"#utility.yul\":8754:8757   */\n      0x00\n        /* \"#utility.yul\":8775:8842   */\n      tag_343\n        /* \"#utility.yul\":8839:8841   */\n      0x28\n        /* \"#utility.yul\":8834:8837   */\n      dup4\n        /* \"#utility.yul\":8775:8842   */\n      tag_234\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8768:8842   */\n      swap2\n      pop\n        /* \"#utility.yul\":8851:8944   */\n      tag_344\n        /* \"#utility.yul\":8940:8943   */\n      dup3\n        /* \"#utility.yul\":8851:8944   */\n      tag_238\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8969:8971   */\n      0x40\n        /* \"#utility.yul\":8964:8967   */\n      dup3\n        /* \"#utility.yul\":8960:8972   */\n      add\n        /* \"#utility.yul\":8953:8972   */\n      swap1\n      pop\n        /* \"#utility.yul\":8612:8978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8984:9403   */\n    tag_92:\n        /* \"#utility.yul\":9150:9154   */\n      0x00\n        /* \"#utility.yul\":9188:9190   */\n      0x20\n        /* \"#utility.yul\":9177:9186   */\n      dup3\n        /* \"#utility.yul\":9173:9191   */\n      add\n        /* \"#utility.yul\":9165:9191   */\n      swap1\n      pop\n        /* \"#utility.yul\":9237:9246   */\n      dup2\n        /* \"#utility.yul\":9231:9235   */\n      dup2\n        /* \"#utility.yul\":9227:9247   */\n      sub\n        /* \"#utility.yul\":9223:9224   */\n      0x00\n        /* \"#utility.yul\":9212:9221   */\n      dup4\n        /* \"#utility.yul\":9208:9225   */\n      add\n        /* \"#utility.yul\":9201:9248   */\n      mstore\n        /* \"#utility.yul\":9265:9396   */\n      tag_346\n        /* \"#utility.yul\":9391:9395   */\n      dup2\n        /* \"#utility.yul\":9265:9396   */\n      tag_239\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9257:9396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8984:9403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9409:9851   */\n    tag_94:\n        /* \"#utility.yul\":9558:9562   */\n      0x00\n        /* \"#utility.yul\":9596:9598   */\n      0x60\n        /* \"#utility.yul\":9585:9594   */\n      dup3\n        /* \"#utility.yul\":9581:9599   */\n      add\n        /* \"#utility.yul\":9573:9599   */\n      swap1\n      pop\n        /* \"#utility.yul\":9609:9680   */\n      tag_348\n        /* \"#utility.yul\":9677:9678   */\n      0x00\n        /* \"#utility.yul\":9666:9675   */\n      dup4\n        /* \"#utility.yul\":9662:9679   */\n      add\n        /* \"#utility.yul\":9653:9659   */\n      dup7\n        /* \"#utility.yul\":9609:9680   */\n      tag_213\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9690:9762   */\n      tag_349\n        /* \"#utility.yul\":9758:9760   */\n      0x20\n        /* \"#utility.yul\":9747:9756   */\n      dup4\n        /* \"#utility.yul\":9743:9761   */\n      add\n        /* \"#utility.yul\":9734:9740   */\n      dup6\n        /* \"#utility.yul\":9690:9762   */\n      tag_213\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9772:9844   */\n      tag_350\n        /* \"#utility.yul\":9840:9842   */\n      0x40\n        /* \"#utility.yul\":9829:9838   */\n      dup4\n        /* \"#utility.yul\":9825:9843   */\n      add\n        /* \"#utility.yul\":9816:9822   */\n      dup5\n        /* \"#utility.yul\":9772:9844   */\n      tag_215\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9409:9851   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9857:10031   */\n    tag_240:\n        /* \"#utility.yul\":9997:10023   */\n      0x496e636f7272656374207061796d656e7420616d6f756e740000000000000000\n        /* \"#utility.yul\":9993:9994   */\n      0x00\n        /* \"#utility.yul\":9985:9991   */\n      dup3\n        /* \"#utility.yul\":9981:9995   */\n      add\n        /* \"#utility.yul\":9974:10024   */\n      mstore\n        /* \"#utility.yul\":9857:10031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10037:10403   */\n    tag_241:\n        /* \"#utility.yul\":10179:10182   */\n      0x00\n        /* \"#utility.yul\":10200:10267   */\n      tag_353\n        /* \"#utility.yul\":10264:10266   */\n      0x18\n        /* \"#utility.yul\":10259:10262   */\n      dup4\n        /* \"#utility.yul\":10200:10267   */\n      tag_234\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10193:10267   */\n      swap2\n      pop\n        /* \"#utility.yul\":10276:10369   */\n      tag_354\n        /* \"#utility.yul\":10365:10368   */\n      dup3\n        /* \"#utility.yul\":10276:10369   */\n      tag_240\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10394:10396   */\n      0x20\n        /* \"#utility.yul\":10389:10392   */\n      dup3\n        /* \"#utility.yul\":10385:10397   */\n      add\n        /* \"#utility.yul\":10378:10397   */\n      swap1\n      pop\n        /* \"#utility.yul\":10037:10403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10409:10828   */\n    tag_104:\n        /* \"#utility.yul\":10575:10579   */\n      0x00\n        /* \"#utility.yul\":10613:10615   */\n      0x20\n        /* \"#utility.yul\":10602:10611   */\n      dup3\n        /* \"#utility.yul\":10598:10616   */\n      add\n        /* \"#utility.yul\":10590:10616   */\n      swap1\n      pop\n        /* \"#utility.yul\":10662:10671   */\n      dup2\n        /* \"#utility.yul\":10656:10660   */\n      dup2\n        /* \"#utility.yul\":10652:10672   */\n      sub\n        /* \"#utility.yul\":10648:10649   */\n      0x00\n        /* \"#utility.yul\":10637:10646   */\n      dup4\n        /* \"#utility.yul\":10633:10650   */\n      add\n        /* \"#utility.yul\":10626:10673   */\n      mstore\n        /* \"#utility.yul\":10690:10821   */\n      tag_356\n        /* \"#utility.yul\":10816:10820   */\n      dup2\n        /* \"#utility.yul\":10690:10821   */\n      tag_241\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":10682:10821   */\n      swap1\n      pop\n        /* \"#utility.yul\":10409:10828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10834:11014   */\n    tag_242:\n        /* \"#utility.yul\":10882:10959   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10879:10880   */\n      0x00\n        /* \"#utility.yul\":10872:10960   */\n      mstore\n        /* \"#utility.yul\":10979:10983   */\n      0x11\n        /* \"#utility.yul\":10976:10977   */\n      0x04\n        /* \"#utility.yul\":10969:10984   */\n      mstore\n        /* \"#utility.yul\":11003:11007   */\n      0x24\n        /* \"#utility.yul\":11000:11001   */\n      0x00\n        /* \"#utility.yul\":10993:11008   */\n      revert\n        /* \"#utility.yul\":11020:11430   */\n    tag_114:\n        /* \"#utility.yul\":11060:11067   */\n      0x00\n        /* \"#utility.yul\":11083:11103   */\n      tag_359\n        /* \"#utility.yul\":11101:11102   */\n      dup3\n        /* \"#utility.yul\":11083:11103   */\n      tag_214\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11078:11103   */\n      swap2\n      pop\n        /* \"#utility.yul\":11117:11137   */\n      tag_360\n        /* \"#utility.yul\":11135:11136   */\n      dup4\n        /* \"#utility.yul\":11117:11137   */\n      tag_214\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11112:11137   */\n      swap3\n      pop\n        /* \"#utility.yul\":11172:11173   */\n      dup3\n        /* \"#utility.yul\":11169:11170   */\n      dup3\n        /* \"#utility.yul\":11165:11174   */\n      mul\n        /* \"#utility.yul\":11194:11224   */\n      tag_361\n        /* \"#utility.yul\":11212:11223   */\n      dup2\n        /* \"#utility.yul\":11194:11224   */\n      tag_214\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11183:11224   */\n      swap2\n      pop\n        /* \"#utility.yul\":11373:11374   */\n      dup3\n        /* \"#utility.yul\":11364:11371   */\n      dup3\n        /* \"#utility.yul\":11360:11375   */\n      div\n        /* \"#utility.yul\":11357:11358   */\n      dup5\n        /* \"#utility.yul\":11354:11376   */\n      eq\n        /* \"#utility.yul\":11334:11335   */\n      dup4\n        /* \"#utility.yul\":11327:11336   */\n      iszero\n        /* \"#utility.yul\":11307:11390   */\n      or\n        /* \"#utility.yul\":11284:11423   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":11403:11421   */\n      tag_363\n      tag_242\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11284:11423   */\n    tag_362:\n        /* \"#utility.yul\":11068:11430   */\n      pop\n        /* \"#utility.yul\":11020:11430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11436:11616   */\n    tag_243:\n        /* \"#utility.yul\":11484:11561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11481:11482   */\n      0x00\n        /* \"#utility.yul\":11474:11562   */\n      mstore\n        /* \"#utility.yul\":11581:11585   */\n      0x12\n        /* \"#utility.yul\":11578:11579   */\n      0x04\n        /* \"#utility.yul\":11571:11586   */\n      mstore\n        /* \"#utility.yul\":11605:11609   */\n      0x24\n        /* \"#utility.yul\":11602:11603   */\n      0x00\n        /* \"#utility.yul\":11595:11610   */\n      revert\n        /* \"#utility.yul\":11622:11807   */\n    tag_116:\n        /* \"#utility.yul\":11662:11663   */\n      0x00\n        /* \"#utility.yul\":11679:11699   */\n      tag_366\n        /* \"#utility.yul\":11697:11698   */\n      dup3\n        /* \"#utility.yul\":11679:11699   */\n      tag_214\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":11674:11699   */\n      swap2\n      pop\n        /* \"#utility.yul\":11713:11733   */\n      tag_367\n        /* \"#utility.yul\":11731:11732   */\n      dup4\n        /* \"#utility.yul\":11713:11733   */\n      tag_214\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11708:11733   */\n      swap3\n      pop\n        /* \"#utility.yul\":11752:11753   */\n      dup3\n        /* \"#utility.yul\":11742:11777   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":11757:11775   */\n      tag_369\n      tag_243\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11742:11777   */\n    tag_368:\n        /* \"#utility.yul\":11799:11800   */\n      dup3\n        /* \"#utility.yul\":11796:11797   */\n      dup3\n        /* \"#utility.yul\":11792:11801   */\n      div\n        /* \"#utility.yul\":11787:11801   */\n      swap1\n      pop\n        /* \"#utility.yul\":11622:11807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11813:12007   */\n    tag_120:\n        /* \"#utility.yul\":11853:11857   */\n      0x00\n        /* \"#utility.yul\":11873:11893   */\n      tag_371\n        /* \"#utility.yul\":11891:11892   */\n      dup3\n        /* \"#utility.yul\":11873:11893   */\n      tag_214\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11868:11893   */\n      swap2\n      pop\n        /* \"#utility.yul\":11907:11927   */\n      tag_372\n        /* \"#utility.yul\":11925:11926   */\n      dup4\n        /* \"#utility.yul\":11907:11927   */\n      tag_214\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11902:11927   */\n      swap3\n      pop\n        /* \"#utility.yul\":11951:11952   */\n      dup3\n        /* \"#utility.yul\":11948:11949   */\n      dup3\n        /* \"#utility.yul\":11944:11953   */\n      sub\n        /* \"#utility.yul\":11936:11953   */\n      swap1\n      pop\n        /* \"#utility.yul\":11975:11976   */\n      dup2\n        /* \"#utility.yul\":11969:11973   */\n      dup2\n        /* \"#utility.yul\":11966:11977   */\n      gt\n        /* \"#utility.yul\":11963:12000   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":11980:11998   */\n      tag_374\n      tag_242\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11963:12000   */\n    tag_373:\n        /* \"#utility.yul\":11813:12007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12013:12345   */\n    tag_129:\n        /* \"#utility.yul\":12134:12138   */\n      0x00\n        /* \"#utility.yul\":12172:12174   */\n      0x40\n        /* \"#utility.yul\":12161:12170   */\n      dup3\n        /* \"#utility.yul\":12157:12175   */\n      add\n        /* \"#utility.yul\":12149:12175   */\n      swap1\n      pop\n        /* \"#utility.yul\":12185:12256   */\n      tag_376\n        /* \"#utility.yul\":12253:12254   */\n      0x00\n        /* \"#utility.yul\":12242:12251   */\n      dup4\n        /* \"#utility.yul\":12238:12255   */\n      add\n        /* \"#utility.yul\":12229:12235   */\n      dup6\n        /* \"#utility.yul\":12185:12256   */\n      tag_215\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12266:12338   */\n      tag_377\n        /* \"#utility.yul\":12334:12336   */\n      0x20\n        /* \"#utility.yul\":12323:12332   */\n      dup4\n        /* \"#utility.yul\":12319:12337   */\n      add\n        /* \"#utility.yul\":12310:12316   */\n      dup5\n        /* \"#utility.yul\":12266:12338   */\n      tag_215\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12013:12345   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12351:12574   */\n    tag_244:\n        /* \"#utility.yul\":12491:12525   */\n      0x50657263656e74616765206d757374206265206265747765656e203020616e64\n        /* \"#utility.yul\":12487:12488   */\n      0x00\n        /* \"#utility.yul\":12479:12485   */\n      dup3\n        /* \"#utility.yul\":12475:12489   */\n      add\n        /* \"#utility.yul\":12468:12526   */\n      mstore\n        /* \"#utility.yul\":12560:12566   */\n      0x2031303000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12555:12557   */\n      0x20\n        /* \"#utility.yul\":12547:12553   */\n      dup3\n        /* \"#utility.yul\":12543:12558   */\n      add\n        /* \"#utility.yul\":12536:12567   */\n      mstore\n        /* \"#utility.yul\":12351:12574   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12580:12946   */\n    tag_245:\n        /* \"#utility.yul\":12722:12725   */\n      0x00\n        /* \"#utility.yul\":12743:12810   */\n      tag_380\n        /* \"#utility.yul\":12807:12809   */\n      0x24\n        /* \"#utility.yul\":12802:12805   */\n      dup4\n        /* \"#utility.yul\":12743:12810   */\n      tag_234\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12736:12810   */\n      swap2\n      pop\n        /* \"#utility.yul\":12819:12912   */\n      tag_381\n        /* \"#utility.yul\":12908:12911   */\n      dup3\n        /* \"#utility.yul\":12819:12912   */\n      tag_244\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12937:12939   */\n      0x40\n        /* \"#utility.yul\":12932:12935   */\n      dup3\n        /* \"#utility.yul\":12928:12940   */\n      add\n        /* \"#utility.yul\":12921:12940   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:12946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12952:13371   */\n    tag_141:\n        /* \"#utility.yul\":13118:13122   */\n      0x00\n        /* \"#utility.yul\":13156:13158   */\n      0x20\n        /* \"#utility.yul\":13145:13154   */\n      dup3\n        /* \"#utility.yul\":13141:13159   */\n      add\n        /* \"#utility.yul\":13133:13159   */\n      swap1\n      pop\n        /* \"#utility.yul\":13205:13214   */\n      dup2\n        /* \"#utility.yul\":13199:13203   */\n      dup2\n        /* \"#utility.yul\":13195:13215   */\n      sub\n        /* \"#utility.yul\":13191:13192   */\n      0x00\n        /* \"#utility.yul\":13180:13189   */\n      dup4\n        /* \"#utility.yul\":13176:13193   */\n      add\n        /* \"#utility.yul\":13169:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13364   */\n      tag_383\n        /* \"#utility.yul\":13359:13363   */\n      dup2\n        /* \"#utility.yul\":13233:13364   */\n      tag_245\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13225:13364   */\n      swap1\n      pop\n        /* \"#utility.yul\":12952:13371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13377:13557   */\n    tag_146:\n        /* \"#utility.yul\":13425:13502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13422:13423   */\n      0x00\n        /* \"#utility.yul\":13415:13503   */\n      mstore\n        /* \"#utility.yul\":13522:13526   */\n      0x41\n        /* \"#utility.yul\":13519:13520   */\n      0x04\n        /* \"#utility.yul\":13512:13527   */\n      mstore\n        /* \"#utility.yul\":13546:13550   */\n      0x24\n        /* \"#utility.yul\":13543:13544   */\n      0x00\n        /* \"#utility.yul\":13536:13551   */\n      revert\n        /* \"#utility.yul\":13563:13743   */\n    tag_154:\n        /* \"#utility.yul\":13611:13688   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13608:13609   */\n      0x00\n        /* \"#utility.yul\":13601:13689   */\n      mstore\n        /* \"#utility.yul\":13708:13712   */\n      0x32\n        /* \"#utility.yul\":13705:13706   */\n      0x04\n        /* \"#utility.yul\":13698:13713   */\n      mstore\n        /* \"#utility.yul\":13732:13736   */\n      0x24\n        /* \"#utility.yul\":13729:13730   */\n      0x00\n        /* \"#utility.yul\":13722:13737   */\n      revert\n        /* \"#utility.yul\":13749:13982   */\n    tag_156:\n        /* \"#utility.yul\":13788:13791   */\n      0x00\n        /* \"#utility.yul\":13811:13835   */\n      tag_387\n        /* \"#utility.yul\":13829:13834   */\n      dup3\n        /* \"#utility.yul\":13811:13835   */\n      tag_214\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13802:13835   */\n      swap2\n      pop\n        /* \"#utility.yul\":13857:13923   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13850:13855   */\n      dup3\n        /* \"#utility.yul\":13847:13924   */\n      sub\n        /* \"#utility.yul\":13844:13947   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":13927:13945   */\n      tag_389\n      tag_242\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13844:13947   */\n    tag_388:\n        /* \"#utility.yul\":13974:13975   */\n      0x01\n        /* \"#utility.yul\":13967:13972   */\n      dup3\n        /* \"#utility.yul\":13963:13976   */\n      add\n        /* \"#utility.yul\":13956:13976   */\n      swap1\n      pop\n        /* \"#utility.yul\":13749:13982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13988:14169   */\n    tag_246:\n        /* \"#utility.yul\":14128:14161   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":14124:14125   */\n      0x00\n        /* \"#utility.yul\":14116:14122   */\n      dup3\n        /* \"#utility.yul\":14112:14126   */\n      add\n        /* \"#utility.yul\":14105:14162   */\n      mstore\n        /* \"#utility.yul\":13988:14169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14175:14541   */\n    tag_247:\n        /* \"#utility.yul\":14317:14320   */\n      0x00\n        /* \"#utility.yul\":14338:14405   */\n      tag_392\n        /* \"#utility.yul\":14402:14404   */\n      0x1f\n        /* \"#utility.yul\":14397:14400   */\n      dup4\n        /* \"#utility.yul\":14338:14405   */\n      tag_234\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14331:14405   */\n      swap2\n      pop\n        /* \"#utility.yul\":14414:14507   */\n      tag_393\n        /* \"#utility.yul\":14503:14506   */\n      dup3\n        /* \"#utility.yul\":14414:14507   */\n      tag_246\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14532:14534   */\n      0x20\n        /* \"#utility.yul\":14527:14530   */\n      dup3\n        /* \"#utility.yul\":14523:14535   */\n      add\n        /* \"#utility.yul\":14516:14535   */\n      swap1\n      pop\n        /* \"#utility.yul\":14175:14541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14547:14966   */\n    tag_173:\n        /* \"#utility.yul\":14713:14717   */\n      0x00\n        /* \"#utility.yul\":14751:14753   */\n      0x20\n        /* \"#utility.yul\":14740:14749   */\n      dup3\n        /* \"#utility.yul\":14736:14754   */\n      add\n        /* \"#utility.yul\":14728:14754   */\n      swap1\n      pop\n        /* \"#utility.yul\":14800:14809   */\n      dup2\n        /* \"#utility.yul\":14794:14798   */\n      dup2\n        /* \"#utility.yul\":14790:14810   */\n      sub\n        /* \"#utility.yul\":14786:14787   */\n      0x00\n        /* \"#utility.yul\":14775:14784   */\n      dup4\n        /* \"#utility.yul\":14771:14788   */\n      add\n        /* \"#utility.yul\":14764:14811   */\n      mstore\n        /* \"#utility.yul\":14828:14959   */\n      tag_395\n        /* \"#utility.yul\":14954:14958   */\n      dup2\n        /* \"#utility.yul\":14828:14959   */\n      tag_247\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":14820:14959   */\n      swap1\n      pop\n        /* \"#utility.yul\":14547:14966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14972:15194   */\n    tag_248:\n        /* \"#utility.yul\":15112:15146   */\n      0x4f6e6c79204e4654206f776e65722063616e206372656174652061206c697374\n        /* \"#utility.yul\":15108:15109   */\n      0x00\n        /* \"#utility.yul\":15100:15106   */\n      dup3\n        /* \"#utility.yul\":15096:15110   */\n      add\n        /* \"#utility.yul\":15089:15147   */\n      mstore\n        /* \"#utility.yul\":15181:15186   */\n      0x696e670000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15176:15178   */\n      0x20\n        /* \"#utility.yul\":15168:15174   */\n      dup3\n        /* \"#utility.yul\":15164:15179   */\n      add\n        /* \"#utility.yul\":15157:15187   */\n      mstore\n        /* \"#utility.yul\":14972:15194   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15200:15566   */\n    tag_249:\n        /* \"#utility.yul\":15342:15345   */\n      0x00\n        /* \"#utility.yul\":15363:15430   */\n      tag_398\n        /* \"#utility.yul\":15427:15429   */\n      0x23\n        /* \"#utility.yul\":15422:15425   */\n      dup4\n        /* \"#utility.yul\":15363:15430   */\n      tag_234\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":15356:15430   */\n      swap2\n      pop\n        /* \"#utility.yul\":15439:15532   */\n      tag_399\n        /* \"#utility.yul\":15528:15531   */\n      dup3\n        /* \"#utility.yul\":15439:15532   */\n      tag_248\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":15557:15559   */\n      0x40\n        /* \"#utility.yul\":15552:15555   */\n      dup3\n        /* \"#utility.yul\":15548:15560   */\n      add\n        /* \"#utility.yul\":15541:15560   */\n      swap1\n      pop\n        /* \"#utility.yul\":15200:15566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15572:15991   */\n    tag_180:\n        /* \"#utility.yul\":15738:15742   */\n      0x00\n        /* \"#utility.yul\":15776:15778   */\n      0x20\n        /* \"#utility.yul\":15765:15774   */\n      dup3\n        /* \"#utility.yul\":15761:15779   */\n      add\n        /* \"#utility.yul\":15753:15779   */\n      swap1\n      pop\n        /* \"#utility.yul\":15825:15834   */\n      dup2\n        /* \"#utility.yul\":15819:15823   */\n      dup2\n        /* \"#utility.yul\":15815:15835   */\n      sub\n        /* \"#utility.yul\":15811:15812   */\n      0x00\n        /* \"#utility.yul\":15800:15809   */\n      dup4\n        /* \"#utility.yul\":15796:15813   */\n      add\n        /* \"#utility.yul\":15789:15836   */\n      mstore\n        /* \"#utility.yul\":15853:15984   */\n      tag_401\n        /* \"#utility.yul\":15979:15983   */\n      dup2\n        /* \"#utility.yul\":15853:15984   */\n      tag_249\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":15845:15984   */\n      swap1\n      pop\n        /* \"#utility.yul\":15572:15991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15997:16226   */\n    tag_250:\n        /* \"#utility.yul\":16137:16171   */\n      0x41756374696f6e206475726174696f6e206d7573742062652067726561746572\n        /* \"#utility.yul\":16133:16134   */\n      0x00\n        /* \"#utility.yul\":16125:16131   */\n      dup3\n        /* \"#utility.yul\":16121:16135   */\n      add\n        /* \"#utility.yul\":16114:16172   */\n      mstore\n        /* \"#utility.yul\":16206:16218   */\n      0x207468616e207a65726f00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16201:16203   */\n      0x20\n        /* \"#utility.yul\":16193:16199   */\n      dup3\n        /* \"#utility.yul\":16189:16204   */\n      add\n        /* \"#utility.yul\":16182:16219   */\n      mstore\n        /* \"#utility.yul\":15997:16226   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16232:16598   */\n    tag_251:\n        /* \"#utility.yul\":16374:16377   */\n      0x00\n        /* \"#utility.yul\":16395:16462   */\n      tag_404\n        /* \"#utility.yul\":16459:16461   */\n      0x2a\n        /* \"#utility.yul\":16454:16457   */\n      dup4\n        /* \"#utility.yul\":16395:16462   */\n      tag_234\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":16388:16462   */\n      swap2\n      pop\n        /* \"#utility.yul\":16471:16564   */\n      tag_405\n        /* \"#utility.yul\":16560:16563   */\n      dup3\n        /* \"#utility.yul\":16471:16564   */\n      tag_250\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16589:16591   */\n      0x40\n        /* \"#utility.yul\":16584:16587   */\n      dup3\n        /* \"#utility.yul\":16580:16592   */\n      add\n        /* \"#utility.yul\":16573:16592   */\n      swap1\n      pop\n        /* \"#utility.yul\":16232:16598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16604:17023   */\n    tag_184:\n        /* \"#utility.yul\":16770:16774   */\n      0x00\n        /* \"#utility.yul\":16808:16810   */\n      0x20\n        /* \"#utility.yul\":16797:16806   */\n      dup3\n        /* \"#utility.yul\":16793:16811   */\n      add\n        /* \"#utility.yul\":16785:16811   */\n      swap1\n      pop\n        /* \"#utility.yul\":16857:16866   */\n      dup2\n        /* \"#utility.yul\":16851:16855   */\n      dup2\n        /* \"#utility.yul\":16847:16867   */\n      sub\n        /* \"#utility.yul\":16843:16844   */\n      0x00\n        /* \"#utility.yul\":16832:16841   */\n      dup4\n        /* \"#utility.yul\":16828:16845   */\n      add\n        /* \"#utility.yul\":16821:16868   */\n      mstore\n        /* \"#utility.yul\":16885:17016   */\n      tag_407\n        /* \"#utility.yul\":17011:17015   */\n      dup2\n        /* \"#utility.yul\":16885:17016   */\n      tag_251\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16877:17016   */\n      swap1\n      pop\n        /* \"#utility.yul\":16604:17023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17029:17220   */\n    tag_191:\n        /* \"#utility.yul\":17069:17072   */\n      0x00\n        /* \"#utility.yul\":17088:17108   */\n      tag_409\n        /* \"#utility.yul\":17106:17107   */\n      dup3\n        /* \"#utility.yul\":17088:17108   */\n      tag_214\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":17083:17108   */\n      swap2\n      pop\n        /* \"#utility.yul\":17122:17142   */\n      tag_410\n        /* \"#utility.yul\":17140:17141   */\n      dup4\n        /* \"#utility.yul\":17122:17142   */\n      tag_214\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":17117:17142   */\n      swap3\n      pop\n        /* \"#utility.yul\":17165:17166   */\n      dup3\n        /* \"#utility.yul\":17162:17163   */\n      dup3\n        /* \"#utility.yul\":17158:17167   */\n      add\n        /* \"#utility.yul\":17151:17167   */\n      swap1\n      pop\n        /* \"#utility.yul\":17186:17189   */\n      dup1\n        /* \"#utility.yul\":17183:17184   */\n      dup3\n        /* \"#utility.yul\":17180:17190   */\n      gt\n        /* \"#utility.yul\":17177:17213   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":17193:17211   */\n      tag_412\n      tag_242\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":17177:17213   */\n    tag_411:\n        /* \"#utility.yul\":17029:17220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17226:17767   */\n    tag_194:\n        /* \"#utility.yul\":17397:17401   */\n      0x00\n        /* \"#utility.yul\":17435:17438   */\n      0x80\n        /* \"#utility.yul\":17424:17433   */\n      dup3\n        /* \"#utility.yul\":17420:17439   */\n      add\n        /* \"#utility.yul\":17412:17439   */\n      swap1\n      pop\n        /* \"#utility.yul\":17449:17520   */\n      tag_414\n        /* \"#utility.yul\":17517:17518   */\n      0x00\n        /* \"#utility.yul\":17506:17515   */\n      dup4\n        /* \"#utility.yul\":17502:17519   */\n      add\n        /* \"#utility.yul\":17493:17499   */\n      dup8\n        /* \"#utility.yul\":17449:17520   */\n      tag_215\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":17530:17602   */\n      tag_415\n        /* \"#utility.yul\":17598:17600   */\n      0x20\n        /* \"#utility.yul\":17587:17596   */\n      dup4\n        /* \"#utility.yul\":17583:17601   */\n      add\n        /* \"#utility.yul\":17574:17580   */\n      dup7\n        /* \"#utility.yul\":17530:17602   */\n      tag_215\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":17612:17678   */\n      tag_416\n        /* \"#utility.yul\":17674:17676   */\n      0x40\n        /* \"#utility.yul\":17663:17672   */\n      dup4\n        /* \"#utility.yul\":17659:17677   */\n      add\n        /* \"#utility.yul\":17650:17656   */\n      dup6\n        /* \"#utility.yul\":17612:17678   */\n      tag_233\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":17688:17760   */\n      tag_417\n        /* \"#utility.yul\":17756:17758   */\n      0x60\n        /* \"#utility.yul\":17745:17754   */\n      dup4\n        /* \"#utility.yul\":17741:17759   */\n      add\n        /* \"#utility.yul\":17732:17738   */\n      dup5\n        /* \"#utility.yul\":17688:17760   */\n      tag_215\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":17226:17767   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205751f742c6eaa00e7ea313be277db23fc5929cdc8fde5c29cb18936e35ce67de64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3452": {
									"entryPoint": null,
									"id": 3452,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 334,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:15",
										"nodeType": "YulBlock",
										"src": "0:1707:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "939:413:15",
													"nodeType": "YulBlock",
													"src": "939:413:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:15",
																"nodeType": "YulBlock",
																"src": "985:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:15"
																			},
																			"nativeSrc": "987:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:15"
																		},
																		"nativeSrc": "987:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:15"
																		},
																		"nativeSrc": "956:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:15",
																		"nodeType": "YulLiteral",
																		"src": "981:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:15"
																},
																"nativeSrc": "952:32:15",
																"nodeType": "YulFunctionCall",
																"src": "952:32:15"
															},
															"nativeSrc": "949:119:15",
															"nodeType": "YulIf",
															"src": "949:119:15"
														},
														{
															"nativeSrc": "1078:128:15",
															"nodeType": "YulBlock",
															"src": "1078:128:15",
															"statements": [
																{
																	"nativeSrc": "1093:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:15"
																				},
																				"nativeSrc": "1164:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:15"
																		},
																		"nativeSrc": "1132:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:15",
															"nodeType": "YulBlock",
															"src": "1216:129:15",
															"statements": [
																{
																	"nativeSrc": "1231:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:15"
																				},
																				"nativeSrc": "1303:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:15"
																		},
																		"nativeSrc": "1271:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:15",
														"nodeType": "YulTypedName",
														"src": "901:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:15",
														"nodeType": "YulTypedName",
														"src": "912:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:15",
														"nodeType": "YulTypedName",
														"src": "924:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:15",
														"nodeType": "YulTypedName",
														"src": "932:6:15",
														"type": ""
													}
												],
												"src": "845:507:15"
											},
											{
												"body": {
													"nativeSrc": "1423:53:15",
													"nodeType": "YulBlock",
													"src": "1423:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:15"
																		},
																		"nativeSrc": "1445:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:15"
																},
																"nativeSrc": "1433:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:15"
															},
															"nativeSrc": "1433:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:15",
														"nodeType": "YulTypedName",
														"src": "1411:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:15",
														"nodeType": "YulTypedName",
														"src": "1418:3:15",
														"type": ""
													}
												],
												"src": "1358:118:15"
											},
											{
												"body": {
													"nativeSrc": "1580:124:15",
													"nodeType": "YulBlock",
													"src": "1580:124:15",
													"statements": [
														{
															"nativeSrc": "1590:26:15",
															"nodeType": "YulAssignment",
															"src": "1590:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:15"
																},
																"nativeSrc": "1598:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:15"
																		},
																		"nativeSrc": "1679:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:15"
																},
																"nativeSrc": "1626:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:15"
															},
															"nativeSrc": "1626:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:15",
														"nodeType": "YulTypedName",
														"src": "1552:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:15",
														"nodeType": "YulTypedName",
														"src": "1564:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:15",
														"nodeType": "YulTypedName",
														"src": "1575:4:15",
														"type": ""
													}
												],
												"src": "1482:222:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600560035560056004553480156200001a575f80fd5b5060405162001df938038062001df9833981810160405281019062000040919062000274565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ab9190620002ca565b60405180910390fd5b620000c5816200014e60201b60201c565b508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002e5565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200023e8262000213565b9050919050565b620002508162000232565b81146200025b575f80fd5b50565b5f815190506200026e8162000245565b92915050565b5f80604083850312156200028d576200028c6200020f565b5b5f6200029c858286016200025e565b9250506020620002af858286016200025e565b9150509250929050565b620002c48162000232565b82525050565b5f602082019050620002df5f830184620002b9565b92915050565b611b0680620002f35f395ff3fe6080604052600436106100dc575f3560e01c80638da5cb5b1161007e578063d9194bb211610058578063d9194bb21461025e578063de74e57b14610286578063e20fc118146102c7578063f2fde38b146102f1576100dc565b80638da5cb5b146101e0578063aaccf1ec1461020a578063cdd78cfc14610234576100dc565b80634884f459116100ba5780634884f4591461015c578063715018a6146101785780638333903e1461018e57806387c35bc0146101b6576100dc565b80630d08a3a0146100e05780631a5d63db1461010a578063305a67a814610134575b5f80fd5b3480156100eb575f80fd5b506100f4610319565b60405161010191906111b7565b60405180910390f35b348015610115575f80fd5b5061011e61033e565b60405161012b91906111e8565b60405180910390f35b34801561013f575f80fd5b5061015a6004803603810190610155919061122f565b610344565b005b6101766004803603810190610171919061122f565b61059b565b005b348015610183575f80fd5b5061018c61095d565b005b348015610199575f80fd5b506101b460048036038101906101af919061122f565b610970565b005b3480156101c1575f80fd5b506101ca6109fd565b6040516101d79190611311565b60405180910390f35b3480156101eb575f80fd5b506101f4610b71565b60405161020191906111b7565b60405180910390f35b348015610215575f80fd5b5061021e610b98565b60405161022b91906111e8565b60405180910390f35b34801561023f575f80fd5b50610248610b9e565b60405161025591906111e8565b60405180910390f35b348015610269575f80fd5b50610284600480360381019061027f9190611390565b610ba4565b005b348015610291575f80fd5b506102ac60048036038101906102a7919061122f565b610f10565b6040516102be96959493929190611416565b60405180910390f35b3480156102d2575f80fd5b506102db610f80565b6040516102e891906111b7565b60405180910390f35b3480156102fc575f80fd5b5061031760048036038101906103129190611475565b610fa5565b005b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b5f60015f8381526020019081526020015f2090508060030160019054906101000a900460ff166103a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a0906114fa565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e83600101546040518263ffffffff1660e01b815260040161041f91906111e8565b602060405180830381865afa15801561043a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045e919061152c565b73ffffffffffffffffffffffffffffffffffffffff16146104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab906115c7565b60405180910390fd5b805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b8152600401610517939291906115e5565b5f604051808303815f87803b15801561052e575f80fd5b505af1158015610540573d5f803e3d5ffd5b505050505f8160030160016101000a81548160ff0219169083151502179055507f411aee90354c51b1b04cd563fcab2617142a9d50da19232d888547c8a1b7fd8a8260405161058f91906111e8565b60405180910390a15050565b5f60015f8381526020019081526020015f2090508060030160019054906101000a900460ff16610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906114fa565b60405180910390fd5b34816002015414610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90611664565b60405180910390fd5b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e83600101546040518263ffffffff1660e01b81526004016106a691906111e8565b602060405180830381865afa1580156106c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e5919061152c565b9050815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303385600101546040518463ffffffff1660e01b815260040161074a939291906115e5565b5f604051808303815f87803b158015610761575f80fd5b505af1158015610773573d5f803e3d5ffd5b505050505f6064600354846002015461078c91906116af565b610796919061171d565b90505f606460045485600201546107ad91906116af565b6107b7919061171d565b90505f818386600201546107cb919061174d565b6107d5919061174d565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8490811502906040515f60405180830381858888f1935050505015801561083b573d5f803e3d5ffd5b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f193505050501580156108a0573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108e4573d5f803e3d5ffd5b505f8560030160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a87876002015460405161094d929190611780565b60405180910390a2505050505050565b610965611029565b61096e5f6110b0565b565b610978611029565b60648111156109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b390611817565b60405180910390fd5b806003819055507fd0a5ddfa06600c6481dcd2923a572827c06e53859f23f7ddab41ff3144ee8687816040516109f291906111e8565b60405180910390a150565b60605f60025467ffffffffffffffff811115610a1c57610a1b611835565b5b604051908082528060200260200182016040528015610a4a5781602001602082028036833780820191505090505b5090505f805b600254811015610ac35760015f8281526020019081526020015f2060030160019054906101000a900460ff1615610ab05780838381518110610a9557610a94611862565b5b6020026020010181815250508180610aac9061188f565b9250505b8080610abb9061188f565b915050610a50565b505f8167ffffffffffffffff811115610adf57610ade611835565b5b604051908082528060200260200182016040528015610b0d5781602001602082028036833780820191505090505b5090505f5b82811015610b6757838181518110610b2d57610b2c611862565b5b6020026020010151828281518110610b4857610b47611862565b5b6020026020010181815250508080610b5f9061188f565b915050610b12565b5080935050505090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60035481565b5f8311610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd90611920565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610c3691906111e8565b602060405180830381865afa158015610c51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c75919061152c565b73ffffffffffffffffffffffffffffffffffffffff1614610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc2906119ae565b60405180910390fd5b8115610d18575f8111610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a90611a3c565b60405180910390fd5b610d1c565b5f90505b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610d59939291906115e5565b5f604051808303815f87803b158015610d70575f80fd5b505af1158015610d82573d5f803e3d5ffd5b505050506040518060c001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183151581526020016001151581526020018242610dd69190611a5a565b81525060015f60025481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a08201518160040155905050838573ffffffffffffffffffffffffffffffffffffffff167f8b20b21402c6ccf4b5f2e911ee605585802d96508e51890a1a317975b864dbb060025486868642610eda9190611a5a565b604051610eea9493929190611a8d565b60405180910390a360025f815480929190610f049061188f565b91905055505050505050565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16908060030160019054906101000a900460ff16908060040154905086565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fad611029565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361101d575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161101491906111b7565b60405180910390fd5b611026816110b0565b50565b611031611171565b73ffffffffffffffffffffffffffffffffffffffff1661104f610b71565b73ffffffffffffffffffffffffffffffffffffffff16146110ae57611072611171565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110a591906111b7565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111a182611178565b9050919050565b6111b181611197565b82525050565b5f6020820190506111ca5f8301846111a8565b92915050565b5f819050919050565b6111e2816111d0565b82525050565b5f6020820190506111fb5f8301846111d9565b92915050565b5f80fd5b61120e816111d0565b8114611218575f80fd5b50565b5f8135905061122981611205565b92915050565b5f6020828403121561124457611243611201565b5b5f6112518482850161121b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61128c816111d0565b82525050565b5f61129d8383611283565b60208301905092915050565b5f602082019050919050565b5f6112bf8261125a565b6112c98185611264565b93506112d483611274565b805f5b838110156113045781516112eb8882611292565b97506112f6836112a9565b9250506001810190506112d7565b5085935050505092915050565b5f6020820190508181035f83015261132981846112b5565b905092915050565b61133a81611197565b8114611344575f80fd5b50565b5f8135905061135581611331565b92915050565b5f8115159050919050565b61136f8161135b565b8114611379575f80fd5b50565b5f8135905061138a81611366565b92915050565b5f805f805f60a086880312156113a9576113a8611201565b5b5f6113b688828901611347565b95505060206113c78882890161121b565b94505060406113d88882890161121b565b93505060606113e98882890161137c565b92505060806113fa8882890161121b565b9150509295509295909350565b6114108161135b565b82525050565b5f60c0820190506114295f8301896111a8565b61143660208301886111d9565b61144360408301876111d9565b6114506060830186611407565b61145d6080830185611407565b61146a60a08301846111d9565b979650505050505050565b5f6020828403121561148a57611489611201565b5b5f61149784828501611347565b91505092915050565b5f82825260208201905092915050565b7f4c697374696e67206973206e6f742061637469766500000000000000000000005f82015250565b5f6114e46015836114a0565b91506114ef826114b0565b602082019050919050565b5f6020820190508181035f830152611511816114d8565b9050919050565b5f8151905061152681611331565b92915050565b5f6020828403121561154157611540611201565b5b5f61154e84828501611518565b91505092915050565b7f4f6e6c792074686520636f6e74726163742063616e2063616e63656c207468655f8201527f206c697374696e67000000000000000000000000000000000000000000000000602082015250565b5f6115b16028836114a0565b91506115bc82611557565b604082019050919050565b5f6020820190508181035f8301526115de816115a5565b9050919050565b5f6060820190506115f85f8301866111a8565b61160560208301856111a8565b61161260408301846111d9565b949350505050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f61164e6018836114a0565b91506116598261161a565b602082019050919050565b5f6020820190508181035f83015261167b81611642565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116b9826111d0565b91506116c4836111d0565b92508282026116d2816111d0565b915082820484148315176116e9576116e8611682565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611727826111d0565b9150611732836111d0565b925082611742576117416116f0565b5b828204905092915050565b5f611757826111d0565b9150611762836111d0565b925082820390508181111561177a57611779611682565b5b92915050565b5f6040820190506117935f8301856111d9565b6117a060208301846111d9565b9392505050565b7f50657263656e74616765206d757374206265206265747765656e203020616e645f8201527f2031303000000000000000000000000000000000000000000000000000000000602082015250565b5f6118016024836114a0565b915061180c826117a7565b604082019050919050565b5f6020820190508181035f83015261182e816117f5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611899826111d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118cb576118ca611682565b5b600182019050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f61190a601f836114a0565b9150611915826118d6565b602082019050919050565b5f6020820190508181035f830152611937816118fe565b9050919050565b7f4f6e6c79204e4654206f776e65722063616e206372656174652061206c6973745f8201527f696e670000000000000000000000000000000000000000000000000000000000602082015250565b5f6119986023836114a0565b91506119a38261193e565b604082019050919050565b5f6020820190508181035f8301526119c58161198c565b9050919050565b7f41756374696f6e206475726174696f6e206d75737420626520677265617465725f8201527f207468616e207a65726f00000000000000000000000000000000000000000000602082015250565b5f611a26602a836114a0565b9150611a31826119cc565b604082019050919050565b5f6020820190508181035f830152611a5381611a1a565b9050919050565b5f611a64826111d0565b9150611a6f836111d0565b9250828201905080821115611a8757611a86611682565b5b92915050565b5f608082019050611aa05f8301876111d9565b611aad60208301866111d9565b611aba6040830185611407565b611ac760608301846111d9565b9594505050505056fea26469706673582212205751f742c6eaa00e7ea313be277db23fc5929cdc8fde5c29cb18936e35ce67de64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x3 SSTORE PUSH1 0x5 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DF9 CODESIZE SUB DUP1 PUSH3 0x1DF9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x40 SWAP2 SWAP1 PUSH3 0x274 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAB SWAP2 SWAP1 PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC5 DUP2 PUSH3 0x14E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2E5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x23E DUP3 PUSH3 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x232 JUMP JUMPDEST DUP2 EQ PUSH3 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x26E DUP2 PUSH3 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x28D JUMPI PUSH3 0x28C PUSH3 0x20F JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x29C DUP6 DUP3 DUP7 ADD PUSH3 0x25E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2AF DUP6 DUP3 DUP7 ADD PUSH3 0x25E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C4 DUP2 PUSH3 0x232 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2DF PUSH0 DUP4 ADD DUP5 PUSH3 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B06 DUP1 PUSH3 0x2F3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xD9194BB2 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD9194BB2 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xE20FC118 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F1 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xAACCF1EC EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x234 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x4884F459 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x4884F459 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x8333903E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x87C35BC0 EQ PUSH2 0x1B6 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0xD08A3A0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x1A5D63DB EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x305A67A8 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x95D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F4 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xBA4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A0 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x517 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x411AEE90354C51B1B04CD563FCAB2617142A9D50DA19232D888547C8A1B7FD8A DUP3 PUSH1 0x40 MLOAD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP2 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x64 PUSH1 0x3 SLOAD DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x4 SLOAD DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH1 0x2 ADD SLOAD PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP6 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6329E40C0365262EBBFF5CA819385C2B9713DCAA050ED07866D72C441395699A DUP8 DUP8 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x94D SWAP3 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x965 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x96E PUSH0 PUSH2 0x10B0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x978 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B3 SWAP1 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xD0A5DDFA06600C6481DCD2923A572827C06E53859F23F7DDAB41FF3144EE8687 DUP2 PUSH1 0x40 MLOAD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA4A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x1 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAB0 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA95 JUMPI PUSH2 0xA94 PUSH2 0x1862 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0xAAC SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xABB SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA50 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB0D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB67 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB2D JUMPI PUSH2 0xB2C PUSH2 0x1862 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0x1862 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB5F SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB12 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC51 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD18 JUMPI PUSH0 DUP2 GT PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD59 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8B20B21402C6CCF4B5F2E911EE605585802D96508E51890A1A317975B864DBB0 PUSH1 0x2 SLOAD DUP7 DUP7 DUP7 TIMESTAMP PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF04 SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFAD PUSH2 0x1029 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1026 DUP2 PUSH2 0x10B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1031 PUSH2 0x1171 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104F PUSH2 0xB71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10AE JUMPI PUSH2 0x1072 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11A1 DUP3 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B1 DUP2 PUSH2 0x1197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CA PUSH0 DUP4 ADD DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E2 DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11FB PUSH0 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120E DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0x1205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1251 DUP5 DUP3 DUP6 ADD PUSH2 0x121B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128C DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x129D DUP4 DUP4 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BF DUP3 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x12C9 DUP2 DUP6 PUSH2 0x1264 JUMP JUMPDEST SWAP4 POP PUSH2 0x12D4 DUP4 PUSH2 0x1274 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1304 JUMPI DUP2 MLOAD PUSH2 0x12EB DUP9 DUP3 PUSH2 0x1292 JUMP JUMPDEST SWAP8 POP PUSH2 0x12F6 DUP4 PUSH2 0x12A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12D7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1329 DUP2 DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x1197 JUMP JUMPDEST DUP2 EQ PUSH2 0x1344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1355 DUP2 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136F DUP2 PUSH2 0x135B JUMP JUMPDEST DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138A DUP2 PUSH2 0x1366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x13A8 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B6 DUP9 DUP3 DUP10 ADD PUSH2 0x1347 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x13C7 DUP9 DUP3 DUP10 ADD PUSH2 0x121B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x13D8 DUP9 DUP3 DUP10 ADD PUSH2 0x121B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x13E9 DUP9 DUP3 DUP10 ADD PUSH2 0x137C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x13FA DUP9 DUP3 DUP10 ADD PUSH2 0x121B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x135B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1429 PUSH0 DUP4 ADD DUP10 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1436 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x146A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH2 0x1489 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1497 DUP5 DUP3 DUP6 ADD PUSH2 0x1347 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E67206973206E6F74206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E4 PUSH1 0x15 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14EF DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1511 DUP2 PUSH2 0x14D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1526 DUP2 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154E DUP5 DUP3 DUP6 ADD PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520636F6E74726163742063616E2063616E63656C20746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206C697374696E67000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15B1 PUSH1 0x28 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BC DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15DE DUP2 PUSH2 0x15A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F8 PUSH0 DUP4 ADD DUP7 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1605 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1612 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x164E PUSH1 0x18 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1659 DUP3 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167B DUP2 PUSH2 0x1642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16B9 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C4 DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16D2 DUP2 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x16E9 JUMPI PUSH2 0x16E8 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1727 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1732 DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1742 JUMPI PUSH2 0x1741 PUSH2 0x16F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1757 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1762 DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1793 PUSH0 DUP4 ADD DUP6 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x17A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50657263656E74616765206D757374206265206265747765656E203020616E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x2031303000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1801 PUSH1 0x24 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x180C DUP3 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x182E DUP2 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1899 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x18CB JUMPI PUSH2 0x18CA PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190A PUSH1 0x1F DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1915 DUP3 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79204E4654206F776E65722063616E206372656174652061206C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E670000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1998 PUSH1 0x23 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C5 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E206475726174696F6E206D7573742062652067726561746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x207468616E207A65726F00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A26 PUSH1 0x2A DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A31 DUP3 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A53 DUP2 PUSH2 0x1A1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A64 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6F DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A87 JUMPI PUSH2 0x1A86 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AA0 PUSH0 DUP4 ADD DUP8 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1AAD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1ABA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x1AC7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI MLOAD 0xF7 TIMESTAMP 0xC6 0xEA LOG0 0xE PUSH31 0xA313BE277DB23FC5929CDC8FDE5C29CB18936E35CE67DE64736F6C63430008 ISZERO STOP CALLER ",
							"sourceMap": "299:4385:14:-:0;;;641:1;602:40;;688:1;648:41;;1305:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1424:18:14::1;1404:17;;:38;;;;;;;;;;;;;;;;;;1473:19;1452:18;;:40;;;;;;;;;;;;;;;;;;1305:194:::0;;299:4385;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;299:4385:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 4137,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1884": {
									"entryPoint": 4465,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4272,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyListing_3750": {
									"entryPoint": 1435,
									"id": 3750,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelListing_3629": {
									"entryPoint": 836,
									"id": 3629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createListing_3568": {
									"entryPoint": 2980,
									"id": 3568,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@getActiveListings_3832": {
									"entryPoint": 2557,
									"id": 3832,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@listings_3369": {
									"entryPoint": 3856,
									"id": 3369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextListingId_3371": {
									"entryPoint": 2968,
									"id": 3371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2929,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@platformFeePercentage_3374": {
									"entryPoint": 2974,
									"id": 3374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@platformFeeWallet_3379": {
									"entryPoint": 3968,
									"id": 3379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2397,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltiesFeePercentage_3377": {
									"entryPoint": 830,
									"id": 3377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltiesFeeWallet_3381": {
									"entryPoint": 793,
									"id": 3381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPlatformFeePercentage_3475": {
									"entryPoint": 2416,
									"id": 3475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4005,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_boolt_uint256": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17770:15",
										"nodeType": "YulBlock",
										"src": "0:17770:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:15",
													"nodeType": "YulBlock",
													"src": "52:81:15",
													"statements": [
														{
															"nativeSrc": "62:65:15",
															"nodeType": "YulAssignment",
															"src": "62:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:15",
																		"nodeType": "YulLiteral",
																		"src": "84:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:15"
																},
																"nativeSrc": "73:54:15",
																"nodeType": "YulFunctionCall",
																"src": "73:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:15",
														"nodeType": "YulTypedName",
														"src": "34:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:15",
														"nodeType": "YulTypedName",
														"src": "44:7:15",
														"type": ""
													}
												],
												"src": "7:126:15"
											},
											{
												"body": {
													"nativeSrc": "184:51:15",
													"nodeType": "YulBlock",
													"src": "184:51:15",
													"statements": [
														{
															"nativeSrc": "194:35:15",
															"nodeType": "YulAssignment",
															"src": "194:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:15"
																},
																"nativeSrc": "205:24:15",
																"nodeType": "YulFunctionCall",
																"src": "205:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:15",
														"nodeType": "YulTypedName",
														"src": "166:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:15",
														"nodeType": "YulTypedName",
														"src": "176:7:15",
														"type": ""
													}
												],
												"src": "139:96:15"
											},
											{
												"body": {
													"nativeSrc": "306:53:15",
													"nodeType": "YulBlock",
													"src": "306:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:15"
																		},
																		"nativeSrc": "328:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:15"
																},
																"nativeSrc": "316:37:15",
																"nodeType": "YulFunctionCall",
																"src": "316:37:15"
															},
															"nativeSrc": "316:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:15",
														"nodeType": "YulTypedName",
														"src": "294:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:15",
														"nodeType": "YulTypedName",
														"src": "301:3:15",
														"type": ""
													}
												],
												"src": "241:118:15"
											},
											{
												"body": {
													"nativeSrc": "463:124:15",
													"nodeType": "YulBlock",
													"src": "463:124:15",
													"statements": [
														{
															"nativeSrc": "473:26:15",
															"nodeType": "YulAssignment",
															"src": "473:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:15",
																		"nodeType": "YulLiteral",
																		"src": "496:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:15"
																},
																"nativeSrc": "481:18:15",
																"nodeType": "YulFunctionCall",
																"src": "481:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:15",
																				"nodeType": "YulLiteral",
																				"src": "577:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:15"
																		},
																		"nativeSrc": "562:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:15"
																},
																"nativeSrc": "509:71:15",
																"nodeType": "YulFunctionCall",
																"src": "509:71:15"
															},
															"nativeSrc": "509:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:15",
														"nodeType": "YulTypedName",
														"src": "435:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:15",
														"nodeType": "YulTypedName",
														"src": "447:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:15",
														"nodeType": "YulTypedName",
														"src": "458:4:15",
														"type": ""
													}
												],
												"src": "365:222:15"
											},
											{
												"body": {
													"nativeSrc": "638:32:15",
													"nodeType": "YulBlock",
													"src": "638:32:15",
													"statements": [
														{
															"nativeSrc": "648:16:15",
															"nodeType": "YulAssignment",
															"src": "648:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:15",
																"nodeType": "YulIdentifier",
																"src": "659:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:15",
														"nodeType": "YulTypedName",
														"src": "620:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:15",
														"nodeType": "YulTypedName",
														"src": "630:7:15",
														"type": ""
													}
												],
												"src": "593:77:15"
											},
											{
												"body": {
													"nativeSrc": "741:53:15",
													"nodeType": "YulBlock",
													"src": "741:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:15"
																		},
																		"nativeSrc": "763:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:15"
																},
																"nativeSrc": "751:37:15",
																"nodeType": "YulFunctionCall",
																"src": "751:37:15"
															},
															"nativeSrc": "751:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:15",
														"nodeType": "YulTypedName",
														"src": "729:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:15",
														"nodeType": "YulTypedName",
														"src": "736:3:15",
														"type": ""
													}
												],
												"src": "676:118:15"
											},
											{
												"body": {
													"nativeSrc": "898:124:15",
													"nodeType": "YulBlock",
													"src": "898:124:15",
													"statements": [
														{
															"nativeSrc": "908:26:15",
															"nodeType": "YulAssignment",
															"src": "908:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:15",
																		"nodeType": "YulLiteral",
																		"src": "931:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:15"
																},
																"nativeSrc": "916:18:15",
																"nodeType": "YulFunctionCall",
																"src": "916:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:15"
																		},
																		"nativeSrc": "997:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:15"
																},
																"nativeSrc": "944:71:15",
																"nodeType": "YulFunctionCall",
																"src": "944:71:15"
															},
															"nativeSrc": "944:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:15",
														"nodeType": "YulTypedName",
														"src": "870:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:15",
														"nodeType": "YulTypedName",
														"src": "882:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:15",
														"nodeType": "YulTypedName",
														"src": "893:4:15",
														"type": ""
													}
												],
												"src": "800:222:15"
											},
											{
												"body": {
													"nativeSrc": "1068:35:15",
													"nodeType": "YulBlock",
													"src": "1068:35:15",
													"statements": [
														{
															"nativeSrc": "1078:19:15",
															"nodeType": "YulAssignment",
															"src": "1078:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:15"
																},
																"nativeSrc": "1088:9:15",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:15",
														"nodeType": "YulTypedName",
														"src": "1061:6:15",
														"type": ""
													}
												],
												"src": "1028:75:15"
											},
											{
												"body": {
													"nativeSrc": "1198:28:15",
													"nodeType": "YulBlock",
													"src": "1198:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:15"
																},
																"nativeSrc": "1208:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:15"
															},
															"nativeSrc": "1208:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:15"
											},
											{
												"body": {
													"nativeSrc": "1321:28:15",
													"nodeType": "YulBlock",
													"src": "1321:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:15"
																},
																"nativeSrc": "1331:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:15"
															},
															"nativeSrc": "1331:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:15"
											},
											{
												"body": {
													"nativeSrc": "1398:79:15",
													"nodeType": "YulBlock",
													"src": "1398:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:15",
																"nodeType": "YulBlock",
																"src": "1455:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:15"
																			},
																			"nativeSrc": "1457:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:15"
																		},
																		"nativeSrc": "1457:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1428:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:15"
																				},
																				"nativeSrc": "1428:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:15"
																		},
																		"nativeSrc": "1418:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:15"
																},
																"nativeSrc": "1411:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:15"
															},
															"nativeSrc": "1408:63:15",
															"nodeType": "YulIf",
															"src": "1408:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1355:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:15",
														"nodeType": "YulTypedName",
														"src": "1391:5:15",
														"type": ""
													}
												],
												"src": "1355:122:15"
											},
											{
												"body": {
													"nativeSrc": "1535:87:15",
													"nodeType": "YulBlock",
													"src": "1535:87:15",
													"statements": [
														{
															"nativeSrc": "1545:29:15",
															"nodeType": "YulAssignment",
															"src": "1545:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:15"
																},
																"nativeSrc": "1554:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1583:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:15"
																},
																"nativeSrc": "1583:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:15"
															},
															"nativeSrc": "1583:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1483:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:15",
														"nodeType": "YulTypedName",
														"src": "1513:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:15",
														"nodeType": "YulTypedName",
														"src": "1521:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:15",
														"nodeType": "YulTypedName",
														"src": "1529:5:15",
														"type": ""
													}
												],
												"src": "1483:139:15"
											},
											{
												"body": {
													"nativeSrc": "1694:263:15",
													"nodeType": "YulBlock",
													"src": "1694:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:15",
																"nodeType": "YulBlock",
																"src": "1740:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:15"
																			},
																			"nativeSrc": "1742:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:15"
																		},
																		"nativeSrc": "1742:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:15"
																		},
																		"nativeSrc": "1711:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:15"
																},
																"nativeSrc": "1707:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:15"
															},
															"nativeSrc": "1704:119:15",
															"nodeType": "YulIf",
															"src": "1704:119:15"
														},
														{
															"nativeSrc": "1833:117:15",
															"nodeType": "YulBlock",
															"src": "1833:117:15",
															"statements": [
																{
																	"nativeSrc": "1848:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:15"
																				},
																				"nativeSrc": "1908:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1887:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:15"
																		},
																		"nativeSrc": "1887:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1628:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1664:9:15",
														"nodeType": "YulTypedName",
														"src": "1664:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1675:7:15",
														"nodeType": "YulTypedName",
														"src": "1675:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1687:6:15",
														"nodeType": "YulTypedName",
														"src": "1687:6:15",
														"type": ""
													}
												],
												"src": "1628:329:15"
											},
											{
												"body": {
													"nativeSrc": "2037:40:15",
													"nodeType": "YulBlock",
													"src": "2037:40:15",
													"statements": [
														{
															"nativeSrc": "2048:22:15",
															"nodeType": "YulAssignment",
															"src": "2048:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2064:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2064:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2058:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2058:5:15"
																},
																"nativeSrc": "2058:12:15",
																"nodeType": "YulFunctionCall",
																"src": "2058:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2048:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "1963:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2020:5:15",
														"nodeType": "YulTypedName",
														"src": "2020:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2030:6:15",
														"nodeType": "YulTypedName",
														"src": "2030:6:15",
														"type": ""
													}
												],
												"src": "1963:114:15"
											},
											{
												"body": {
													"nativeSrc": "2194:73:15",
													"nodeType": "YulBlock",
													"src": "2194:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2211:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2216:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2216:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2204:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:15"
																},
																"nativeSrc": "2204:19:15",
																"nodeType": "YulFunctionCall",
																"src": "2204:19:15"
															},
															"nativeSrc": "2204:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "2204:19:15"
														},
														{
															"nativeSrc": "2232:29:15",
															"nodeType": "YulAssignment",
															"src": "2232:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2251:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2251:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2256:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2256:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2247:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:15"
																},
																"nativeSrc": "2247:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2247:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2232:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "2232:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2083:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2166:3:15",
														"nodeType": "YulTypedName",
														"src": "2166:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2171:6:15",
														"nodeType": "YulTypedName",
														"src": "2171:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2182:11:15",
														"nodeType": "YulTypedName",
														"src": "2182:11:15",
														"type": ""
													}
												],
												"src": "2083:184:15"
											},
											{
												"body": {
													"nativeSrc": "2345:60:15",
													"nodeType": "YulBlock",
													"src": "2345:60:15",
													"statements": [
														{
															"nativeSrc": "2355:11:15",
															"nodeType": "YulAssignment",
															"src": "2355:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "2363:3:15",
																"nodeType": "YulIdentifier",
																"src": "2363:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2355:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2355:4:15"
																}
															]
														},
														{
															"nativeSrc": "2376:22:15",
															"nodeType": "YulAssignment",
															"src": "2376:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2388:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2393:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2393:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2384:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:15"
																},
																"nativeSrc": "2384:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2384:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2376:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2376:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "2273:132:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2332:3:15",
														"nodeType": "YulTypedName",
														"src": "2332:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2340:4:15",
														"nodeType": "YulTypedName",
														"src": "2340:4:15",
														"type": ""
													}
												],
												"src": "2273:132:15"
											},
											{
												"body": {
													"nativeSrc": "2466:53:15",
													"nodeType": "YulBlock",
													"src": "2466:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2483:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2483:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2506:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2506:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2488:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "2488:17:15"
																		},
																		"nativeSrc": "2488:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2488:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2476:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:15"
																},
																"nativeSrc": "2476:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2476:37:15"
															},
															"nativeSrc": "2476:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "2476:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2411:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2454:5:15",
														"nodeType": "YulTypedName",
														"src": "2454:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2461:3:15",
														"nodeType": "YulTypedName",
														"src": "2461:3:15",
														"type": ""
													}
												],
												"src": "2411:108:15"
											},
											{
												"body": {
													"nativeSrc": "2605:99:15",
													"nodeType": "YulBlock",
													"src": "2605:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2649:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2649:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2657:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2657:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "2615:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "2615:33:15"
																},
																"nativeSrc": "2615:46:15",
																"nodeType": "YulFunctionCall",
																"src": "2615:46:15"
															},
															"nativeSrc": "2615:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "2615:46:15"
														},
														{
															"nativeSrc": "2670:28:15",
															"nodeType": "YulAssignment",
															"src": "2670:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2688:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2688:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2693:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2693:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2684:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2684:3:15"
																},
																"nativeSrc": "2684:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2684:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "2670:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "2670:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "2525:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2578:6:15",
														"nodeType": "YulTypedName",
														"src": "2578:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2586:3:15",
														"nodeType": "YulTypedName",
														"src": "2586:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2594:10:15",
														"nodeType": "YulTypedName",
														"src": "2594:10:15",
														"type": ""
													}
												],
												"src": "2525:179:15"
											},
											{
												"body": {
													"nativeSrc": "2785:38:15",
													"nodeType": "YulBlock",
													"src": "2785:38:15",
													"statements": [
														{
															"nativeSrc": "2795:22:15",
															"nodeType": "YulAssignment",
															"src": "2795:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2807:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2812:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2812:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2803:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2803:3:15"
																},
																"nativeSrc": "2803:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2803:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "2795:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2795:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "2710:113:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2772:3:15",
														"nodeType": "YulTypedName",
														"src": "2772:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "2780:4:15",
														"nodeType": "YulTypedName",
														"src": "2780:4:15",
														"type": ""
													}
												],
												"src": "2710:113:15"
											},
											{
												"body": {
													"nativeSrc": "2983:608:15",
													"nodeType": "YulBlock",
													"src": "2983:608:15",
													"statements": [
														{
															"nativeSrc": "2993:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3055:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3055:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "3007:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "3007:47:15"
																},
																"nativeSrc": "3007:54:15",
																"nodeType": "YulFunctionCall",
																"src": "3007:54:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2997:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2997:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3070:93:15",
															"nodeType": "YulAssignment",
															"src": "3070:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3151:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3156:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3077:73:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:73:15"
																},
																"nativeSrc": "3077:86:15",
																"nodeType": "YulFunctionCall",
																"src": "3077:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3070:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:15"
																}
															]
														},
														{
															"nativeSrc": "3172:71:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3172:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3237:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3237:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "3187:49:15",
																	"nodeType": "YulIdentifier",
																	"src": "3187:49:15"
																},
																"nativeSrc": "3187:56:15",
																"nodeType": "YulFunctionCall",
																"src": "3187:56:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3176:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3176:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3252:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3252:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3266:7:15",
																"nodeType": "YulIdentifier",
																"src": "3266:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3256:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3256:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3342:224:15",
																"nodeType": "YulBlock",
																"src": "3342:224:15",
																"statements": [
																	{
																		"nativeSrc": "3356:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3356:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3383:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3383:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3377:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3377:5:15"
																			},
																			"nativeSrc": "3377:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3377:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "3360:13:15",
																				"nodeType": "YulTypedName",
																				"src": "3360:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3403:70:15",
																		"nodeType": "YulAssignment",
																		"src": "3403:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "3454:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "3454:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "3469:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3469:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "3410:43:15",
																				"nodeType": "YulIdentifier",
																				"src": "3410:43:15"
																			},
																			"nativeSrc": "3410:63:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3410:63:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3403:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3486:70:15",
																		"nodeType": "YulAssignment",
																		"src": "3486:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3549:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3549:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "3496:52:15",
																				"nodeType": "YulIdentifier",
																				"src": "3496:52:15"
																			},
																			"nativeSrc": "3496:60:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3496:60:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3486:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3486:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3304:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "3304:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3307:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3307:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3301:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3301:2:15"
																},
																"nativeSrc": "3301:13:15",
																"nodeType": "YulFunctionCall",
																"src": "3301:13:15"
															},
															"nativeSrc": "3282:284:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3315:18:15",
																"nodeType": "YulBlock",
																"src": "3315:18:15",
																"statements": [
																	{
																		"nativeSrc": "3317:14:15",
																		"nodeType": "YulAssignment",
																		"src": "3317:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3326:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "3326:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3329:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3329:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3322:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3322:3:15"
																			},
																			"nativeSrc": "3322:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3322:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3317:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "3317:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3286:14:15",
																"nodeType": "YulBlock",
																"src": "3286:14:15",
																"statements": [
																	{
																		"nativeSrc": "3288:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3288:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3297:1:15",
																			"nodeType": "YulLiteral",
																			"src": "3297:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3292:1:15",
																				"nodeType": "YulTypedName",
																				"src": "3292:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3282:284:15"
														},
														{
															"nativeSrc": "3575:10:15",
															"nodeType": "YulAssignment",
															"src": "3575:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "3582:3:15",
																"nodeType": "YulIdentifier",
																"src": "3582:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3575:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3575:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2859:732:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2962:5:15",
														"nodeType": "YulTypedName",
														"src": "2962:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2969:3:15",
														"nodeType": "YulTypedName",
														"src": "2969:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2978:3:15",
														"nodeType": "YulTypedName",
														"src": "2978:3:15",
														"type": ""
													}
												],
												"src": "2859:732:15"
											},
											{
												"body": {
													"nativeSrc": "3745:225:15",
													"nodeType": "YulBlock",
													"src": "3745:225:15",
													"statements": [
														{
															"nativeSrc": "3755:26:15",
															"nodeType": "YulAssignment",
															"src": "3755:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3767:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3767:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3778:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3778:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3763:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:15"
																},
																"nativeSrc": "3763:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3763:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3755:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3755:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3802:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3802:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3813:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3813:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3798:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:15"
																		},
																		"nativeSrc": "3798:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3821:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3821:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3827:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3817:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:15"
																		},
																		"nativeSrc": "3817:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3817:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3791:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3791:6:15"
																},
																"nativeSrc": "3791:47:15",
																"nodeType": "YulFunctionCall",
																"src": "3791:47:15"
															},
															"nativeSrc": "3791:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "3791:47:15"
														},
														{
															"nativeSrc": "3847:116:15",
															"nodeType": "YulAssignment",
															"src": "3847:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3949:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3949:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3958:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3958:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3855:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "3855:93:15"
																},
																"nativeSrc": "3855:108:15",
																"nodeType": "YulFunctionCall",
																"src": "3855:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3847:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3847:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3597:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3717:9:15",
														"nodeType": "YulTypedName",
														"src": "3717:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3729:6:15",
														"nodeType": "YulTypedName",
														"src": "3729:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3740:4:15",
														"nodeType": "YulTypedName",
														"src": "3740:4:15",
														"type": ""
													}
												],
												"src": "3597:373:15"
											},
											{
												"body": {
													"nativeSrc": "4019:79:15",
													"nodeType": "YulBlock",
													"src": "4019:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4076:16:15",
																"nodeType": "YulBlock",
																"src": "4076:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4085:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4085:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4088:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4088:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4078:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4078:6:15"
																			},
																			"nativeSrc": "4078:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4078:12:15"
																		},
																		"nativeSrc": "4078:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4078:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4042:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4042:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4067:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4067:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4049:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "4049:17:15"
																				},
																				"nativeSrc": "4049:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4049:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4039:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4039:2:15"
																		},
																		"nativeSrc": "4039:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4032:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:15"
																},
																"nativeSrc": "4032:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4032:43:15"
															},
															"nativeSrc": "4029:63:15",
															"nodeType": "YulIf",
															"src": "4029:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3976:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4012:5:15",
														"nodeType": "YulTypedName",
														"src": "4012:5:15",
														"type": ""
													}
												],
												"src": "3976:122:15"
											},
											{
												"body": {
													"nativeSrc": "4156:87:15",
													"nodeType": "YulBlock",
													"src": "4156:87:15",
													"statements": [
														{
															"nativeSrc": "4166:29:15",
															"nodeType": "YulAssignment",
															"src": "4166:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4188:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4188:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4175:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4175:12:15"
																},
																"nativeSrc": "4175:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4175:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4166:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4166:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4231:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4231:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4204:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "4204:26:15"
																},
																"nativeSrc": "4204:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4204:33:15"
															},
															"nativeSrc": "4204:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4204:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4104:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4134:6:15",
														"nodeType": "YulTypedName",
														"src": "4134:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4142:3:15",
														"nodeType": "YulTypedName",
														"src": "4142:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4150:5:15",
														"nodeType": "YulTypedName",
														"src": "4150:5:15",
														"type": ""
													}
												],
												"src": "4104:139:15"
											},
											{
												"body": {
													"nativeSrc": "4291:48:15",
													"nodeType": "YulBlock",
													"src": "4291:48:15",
													"statements": [
														{
															"nativeSrc": "4301:32:15",
															"nodeType": "YulAssignment",
															"src": "4301:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4326:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4326:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4319:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4319:6:15"
																		},
																		"nativeSrc": "4319:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4312:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4312:6:15"
																},
																"nativeSrc": "4312:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4312:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4301:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4301:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4249:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4273:5:15",
														"nodeType": "YulTypedName",
														"src": "4273:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4283:7:15",
														"nodeType": "YulTypedName",
														"src": "4283:7:15",
														"type": ""
													}
												],
												"src": "4249:90:15"
											},
											{
												"body": {
													"nativeSrc": "4385:76:15",
													"nodeType": "YulBlock",
													"src": "4385:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4439:16:15",
																"nodeType": "YulBlock",
																"src": "4439:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4448:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4448:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4451:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4451:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4441:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4441:6:15"
																			},
																			"nativeSrc": "4441:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4441:12:15"
																		},
																		"nativeSrc": "4441:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4441:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4408:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4408:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4430:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4430:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4415:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "4415:14:15"
																				},
																				"nativeSrc": "4415:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4415:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4405:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4405:2:15"
																		},
																		"nativeSrc": "4405:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4405:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4398:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:15"
																},
																"nativeSrc": "4398:40:15",
																"nodeType": "YulFunctionCall",
																"src": "4398:40:15"
															},
															"nativeSrc": "4395:60:15",
															"nodeType": "YulIf",
															"src": "4395:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4345:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4378:5:15",
														"nodeType": "YulTypedName",
														"src": "4378:5:15",
														"type": ""
													}
												],
												"src": "4345:116:15"
											},
											{
												"body": {
													"nativeSrc": "4516:84:15",
													"nodeType": "YulBlock",
													"src": "4516:84:15",
													"statements": [
														{
															"nativeSrc": "4526:29:15",
															"nodeType": "YulAssignment",
															"src": "4526:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4548:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4548:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4535:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4535:12:15"
																},
																"nativeSrc": "4535:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4535:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4526:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4526:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4588:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4588:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4564:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "4564:23:15"
																},
																"nativeSrc": "4564:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:15"
															},
															"nativeSrc": "4564:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4467:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4494:6:15",
														"nodeType": "YulTypedName",
														"src": "4494:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4502:3:15",
														"nodeType": "YulTypedName",
														"src": "4502:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4510:5:15",
														"nodeType": "YulTypedName",
														"src": "4510:5:15",
														"type": ""
													}
												],
												"src": "4467:133:15"
											},
											{
												"body": {
													"nativeSrc": "4737:774:15",
													"nodeType": "YulBlock",
													"src": "4737:774:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4784:83:15",
																"nodeType": "YulBlock",
																"src": "4784:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4786:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4786:77:15"
																			},
																			"nativeSrc": "4786:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4786:79:15"
																		},
																		"nativeSrc": "4786:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4786:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4758:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4758:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4767:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4754:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4754:3:15"
																		},
																		"nativeSrc": "4754:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4754:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4779:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4779:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4750:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4750:3:15"
																},
																"nativeSrc": "4750:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4750:33:15"
															},
															"nativeSrc": "4747:120:15",
															"nodeType": "YulIf",
															"src": "4747:120:15"
														},
														{
															"nativeSrc": "4877:117:15",
															"nodeType": "YulBlock",
															"src": "4877:117:15",
															"statements": [
																{
																	"nativeSrc": "4892:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4892:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4906:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4906:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4896:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4896:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4921:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4921:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4956:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4956:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4967:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4967:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4952:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4952:3:15"
																				},
																				"nativeSrc": "4952:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4952:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4976:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4976:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4931:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4931:20:15"
																		},
																		"nativeSrc": "4931:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4921:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4921:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5004:118:15",
															"nodeType": "YulBlock",
															"src": "5004:118:15",
															"statements": [
																{
																	"nativeSrc": "5019:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5019:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5033:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5033:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5023:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5023:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5049:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5049:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5084:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5084:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5095:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5095:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5080:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5080:3:15"
																				},
																				"nativeSrc": "5080:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5080:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5104:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5104:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5059:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5059:20:15"
																		},
																		"nativeSrc": "5059:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5049:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5049:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5132:118:15",
															"nodeType": "YulBlock",
															"src": "5132:118:15",
															"statements": [
																{
																	"nativeSrc": "5147:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5147:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5161:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5151:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5151:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5177:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5177:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5212:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5212:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5223:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5223:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5208:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5208:3:15"
																				},
																				"nativeSrc": "5208:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5208:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5232:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5232:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5187:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5187:20:15"
																		},
																		"nativeSrc": "5187:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5177:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5177:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5260:115:15",
															"nodeType": "YulBlock",
															"src": "5260:115:15",
															"statements": [
																{
																	"nativeSrc": "5275:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5275:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5289:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5279:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5279:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5305:60:15",
																	"nodeType": "YulAssignment",
																	"src": "5305:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5337:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5337:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5348:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5348:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5333:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5333:3:15"
																				},
																				"nativeSrc": "5333:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5333:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5357:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5357:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5315:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5315:17:15"
																		},
																		"nativeSrc": "5315:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5315:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5305:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5305:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5385:119:15",
															"nodeType": "YulBlock",
															"src": "5385:119:15",
															"statements": [
																{
																	"nativeSrc": "5400:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5400:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5414:3:15",
																		"nodeType": "YulLiteral",
																		"src": "5414:3:15",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5404:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5404:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5431:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5431:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5466:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5466:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5477:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5477:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5462:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5462:3:15"
																				},
																				"nativeSrc": "5462:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5462:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5486:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5486:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5441:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5441:20:15"
																		},
																		"nativeSrc": "5441:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5431:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5431:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_boolt_uint256",
												"nativeSrc": "4606:905:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4675:9:15",
														"nodeType": "YulTypedName",
														"src": "4675:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4686:7:15",
														"nodeType": "YulTypedName",
														"src": "4686:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4698:6:15",
														"nodeType": "YulTypedName",
														"src": "4698:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4706:6:15",
														"nodeType": "YulTypedName",
														"src": "4706:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4714:6:15",
														"nodeType": "YulTypedName",
														"src": "4714:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4722:6:15",
														"nodeType": "YulTypedName",
														"src": "4722:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4730:6:15",
														"nodeType": "YulTypedName",
														"src": "4730:6:15",
														"type": ""
													}
												],
												"src": "4606:905:15"
											},
											{
												"body": {
													"nativeSrc": "5576:50:15",
													"nodeType": "YulBlock",
													"src": "5576:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5593:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5593:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5613:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5613:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5598:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "5598:14:15"
																		},
																		"nativeSrc": "5598:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5586:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:15"
																},
																"nativeSrc": "5586:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5586:34:15"
															},
															"nativeSrc": "5586:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5586:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5517:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5564:5:15",
														"nodeType": "YulTypedName",
														"src": "5564:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5571:3:15",
														"nodeType": "YulTypedName",
														"src": "5571:3:15",
														"type": ""
													}
												],
												"src": "5517:109:15"
											},
											{
												"body": {
													"nativeSrc": "5858:525:15",
													"nodeType": "YulBlock",
													"src": "5858:525:15",
													"statements": [
														{
															"nativeSrc": "5868:27:15",
															"nodeType": "YulAssignment",
															"src": "5868:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5880:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5880:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5891:3:15",
																		"nodeType": "YulLiteral",
																		"src": "5891:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5876:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5876:3:15"
																},
																"nativeSrc": "5876:19:15",
																"nodeType": "YulFunctionCall",
																"src": "5876:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5868:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5868:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5949:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5949:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5962:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5973:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5973:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5958:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:15"
																		},
																		"nativeSrc": "5958:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5905:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5905:43:15"
																},
																"nativeSrc": "5905:71:15",
																"nodeType": "YulFunctionCall",
																"src": "5905:71:15"
															},
															"nativeSrc": "5905:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "5905:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6030:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6030:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6043:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6054:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6054:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6039:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:15"
																		},
																		"nativeSrc": "6039:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5986:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5986:43:15"
																},
																"nativeSrc": "5986:72:15",
																"nodeType": "YulFunctionCall",
																"src": "5986:72:15"
															},
															"nativeSrc": "5986:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "5986:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6112:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6112:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6125:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6125:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6136:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6136:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6121:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6121:3:15"
																		},
																		"nativeSrc": "6121:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6121:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6068:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6068:43:15"
																},
																"nativeSrc": "6068:72:15",
																"nodeType": "YulFunctionCall",
																"src": "6068:72:15"
															},
															"nativeSrc": "6068:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "6068:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6188:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6188:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6201:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6201:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6212:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6212:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6197:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:15"
																		},
																		"nativeSrc": "6197:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6197:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6150:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "6150:37:15"
																},
																"nativeSrc": "6150:66:15",
																"nodeType": "YulFunctionCall",
																"src": "6150:66:15"
															},
															"nativeSrc": "6150:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "6150:66:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6264:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6264:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6277:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6277:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6288:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6288:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6273:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6273:3:15"
																		},
																		"nativeSrc": "6273:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6273:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6226:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "6226:37:15"
																},
																"nativeSrc": "6226:67:15",
																"nodeType": "YulFunctionCall",
																"src": "6226:67:15"
															},
															"nativeSrc": "6226:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "6226:67:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6347:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6347:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6360:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6360:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6371:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6371:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6356:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6356:3:15"
																		},
																		"nativeSrc": "6356:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6356:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6303:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6303:43:15"
																},
																"nativeSrc": "6303:73:15",
																"nodeType": "YulFunctionCall",
																"src": "6303:73:15"
															},
															"nativeSrc": "6303:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "6303:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "5632:751:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5790:9:15",
														"nodeType": "YulTypedName",
														"src": "5790:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5802:6:15",
														"nodeType": "YulTypedName",
														"src": "5802:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5810:6:15",
														"nodeType": "YulTypedName",
														"src": "5810:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5818:6:15",
														"nodeType": "YulTypedName",
														"src": "5818:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5826:6:15",
														"nodeType": "YulTypedName",
														"src": "5826:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5834:6:15",
														"nodeType": "YulTypedName",
														"src": "5834:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5842:6:15",
														"nodeType": "YulTypedName",
														"src": "5842:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5853:4:15",
														"nodeType": "YulTypedName",
														"src": "5853:4:15",
														"type": ""
													}
												],
												"src": "5632:751:15"
											},
											{
												"body": {
													"nativeSrc": "6455:263:15",
													"nodeType": "YulBlock",
													"src": "6455:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6501:83:15",
																"nodeType": "YulBlock",
																"src": "6501:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6503:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6503:77:15"
																			},
																			"nativeSrc": "6503:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6503:79:15"
																		},
																		"nativeSrc": "6503:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6503:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6476:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6476:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6485:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6472:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:15"
																		},
																		"nativeSrc": "6472:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6472:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6497:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6497:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6468:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6468:3:15"
																},
																"nativeSrc": "6468:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6468:32:15"
															},
															"nativeSrc": "6465:119:15",
															"nodeType": "YulIf",
															"src": "6465:119:15"
														},
														{
															"nativeSrc": "6594:117:15",
															"nodeType": "YulBlock",
															"src": "6594:117:15",
															"statements": [
																{
																	"nativeSrc": "6609:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6609:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6623:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6623:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6613:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6613:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6638:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6638:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6673:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6673:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6684:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6684:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6669:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6669:3:15"
																				},
																				"nativeSrc": "6669:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6669:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6693:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6693:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6648:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6648:20:15"
																		},
																		"nativeSrc": "6648:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6648:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6638:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6638:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6389:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6425:9:15",
														"nodeType": "YulTypedName",
														"src": "6425:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6436:7:15",
														"nodeType": "YulTypedName",
														"src": "6436:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6448:6:15",
														"nodeType": "YulTypedName",
														"src": "6448:6:15",
														"type": ""
													}
												],
												"src": "6389:329:15"
											},
											{
												"body": {
													"nativeSrc": "6820:73:15",
													"nodeType": "YulBlock",
													"src": "6820:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6837:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6837:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6842:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6842:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6830:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6830:6:15"
																},
																"nativeSrc": "6830:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6830:19:15"
															},
															"nativeSrc": "6830:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "6830:19:15"
														},
														{
															"nativeSrc": "6858:29:15",
															"nodeType": "YulAssignment",
															"src": "6858:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6877:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6877:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6882:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6882:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6873:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:15"
																},
																"nativeSrc": "6873:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6873:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6858:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "6858:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6724:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6792:3:15",
														"nodeType": "YulTypedName",
														"src": "6792:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6797:6:15",
														"nodeType": "YulTypedName",
														"src": "6797:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6808:11:15",
														"nodeType": "YulTypedName",
														"src": "6808:11:15",
														"type": ""
													}
												],
												"src": "6724:169:15"
											},
											{
												"body": {
													"nativeSrc": "7005:65:15",
													"nodeType": "YulBlock",
													"src": "7005:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7027:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7027:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7035:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7035:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7023:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7023:3:15"
																		},
																		"nativeSrc": "7023:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7023:14:15"
																	},
																	{
																		"hexValue": "4c697374696e67206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "7039:23:15",
																		"nodeType": "YulLiteral",
																		"src": "7039:23:15",
																		"type": "",
																		"value": "Listing is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7016:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7016:6:15"
																},
																"nativeSrc": "7016:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7016:47:15"
															},
															"nativeSrc": "7016:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7016:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
												"nativeSrc": "6899:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6997:6:15",
														"nodeType": "YulTypedName",
														"src": "6997:6:15",
														"type": ""
													}
												],
												"src": "6899:171:15"
											},
											{
												"body": {
													"nativeSrc": "7222:220:15",
													"nodeType": "YulBlock",
													"src": "7222:220:15",
													"statements": [
														{
															"nativeSrc": "7232:74:15",
															"nodeType": "YulAssignment",
															"src": "7232:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7298:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7298:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7303:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7303:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7239:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "7239:58:15"
																},
																"nativeSrc": "7239:67:15",
																"nodeType": "YulFunctionCall",
																"src": "7239:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7232:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7232:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7404:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7404:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
																	"nativeSrc": "7315:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "7315:88:15"
																},
																"nativeSrc": "7315:93:15",
																"nodeType": "YulFunctionCall",
																"src": "7315:93:15"
															},
															"nativeSrc": "7315:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "7315:93:15"
														},
														{
															"nativeSrc": "7417:19:15",
															"nodeType": "YulAssignment",
															"src": "7417:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7428:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7428:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7433:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7433:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7424:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7424:3:15"
																},
																"nativeSrc": "7424:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7424:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7417:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7417:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7076:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7210:3:15",
														"nodeType": "YulTypedName",
														"src": "7210:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7218:3:15",
														"nodeType": "YulTypedName",
														"src": "7218:3:15",
														"type": ""
													}
												],
												"src": "7076:366:15"
											},
											{
												"body": {
													"nativeSrc": "7619:248:15",
													"nodeType": "YulBlock",
													"src": "7619:248:15",
													"statements": [
														{
															"nativeSrc": "7629:26:15",
															"nodeType": "YulAssignment",
															"src": "7629:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7641:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7641:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7652:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7652:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7637:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7637:3:15"
																},
																"nativeSrc": "7637:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7637:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7629:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7629:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7676:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7676:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7687:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7687:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7672:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7672:3:15"
																		},
																		"nativeSrc": "7672:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7672:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7695:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7695:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7701:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7691:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:15"
																		},
																		"nativeSrc": "7691:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:15"
																},
																"nativeSrc": "7665:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7665:47:15"
															},
															"nativeSrc": "7665:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7665:47:15"
														},
														{
															"nativeSrc": "7721:139:15",
															"nodeType": "YulAssignment",
															"src": "7721:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7855:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7855:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7729:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "7729:124:15"
																},
																"nativeSrc": "7729:131:15",
																"nodeType": "YulFunctionCall",
																"src": "7729:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7721:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7721:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7448:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7599:9:15",
														"nodeType": "YulTypedName",
														"src": "7599:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7614:4:15",
														"nodeType": "YulTypedName",
														"src": "7614:4:15",
														"type": ""
													}
												],
												"src": "7448:419:15"
											},
											{
												"body": {
													"nativeSrc": "7936:80:15",
													"nodeType": "YulBlock",
													"src": "7936:80:15",
													"statements": [
														{
															"nativeSrc": "7946:22:15",
															"nodeType": "YulAssignment",
															"src": "7946:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7961:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7961:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7955:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7955:5:15"
																},
																"nativeSrc": "7955:13:15",
																"nodeType": "YulFunctionCall",
																"src": "7955:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7946:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7946:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8004:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8004:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7977:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "7977:26:15"
																},
																"nativeSrc": "7977:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7977:33:15"
															},
															"nativeSrc": "7977:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7977:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7873:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7914:6:15",
														"nodeType": "YulTypedName",
														"src": "7914:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7922:3:15",
														"nodeType": "YulTypedName",
														"src": "7922:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7930:5:15",
														"nodeType": "YulTypedName",
														"src": "7930:5:15",
														"type": ""
													}
												],
												"src": "7873:143:15"
											},
											{
												"body": {
													"nativeSrc": "8099:274:15",
													"nodeType": "YulBlock",
													"src": "8099:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8145:83:15",
																"nodeType": "YulBlock",
																"src": "8145:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8147:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8147:77:15"
																			},
																			"nativeSrc": "8147:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8147:79:15"
																		},
																		"nativeSrc": "8147:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8147:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8120:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8120:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8129:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8129:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8116:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:15"
																		},
																		"nativeSrc": "8116:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8116:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8141:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8141:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8112:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8112:3:15"
																},
																"nativeSrc": "8112:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8112:32:15"
															},
															"nativeSrc": "8109:119:15",
															"nodeType": "YulIf",
															"src": "8109:119:15"
														},
														{
															"nativeSrc": "8238:128:15",
															"nodeType": "YulBlock",
															"src": "8238:128:15",
															"statements": [
																{
																	"nativeSrc": "8253:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8253:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8267:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8267:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8257:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8257:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8282:74:15",
																	"nodeType": "YulAssignment",
																	"src": "8282:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8328:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8328:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8339:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8339:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8324:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8324:3:15"
																				},
																				"nativeSrc": "8324:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8324:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8348:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8348:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "8292:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "8292:31:15"
																		},
																		"nativeSrc": "8292:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8292:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8282:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8282:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8022:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8069:9:15",
														"nodeType": "YulTypedName",
														"src": "8069:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8080:7:15",
														"nodeType": "YulTypedName",
														"src": "8080:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8092:6:15",
														"nodeType": "YulTypedName",
														"src": "8092:6:15",
														"type": ""
													}
												],
												"src": "8022:351:15"
											},
											{
												"body": {
													"nativeSrc": "8485:121:15",
													"nodeType": "YulBlock",
													"src": "8485:121:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8507:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8507:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8515:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8515:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8503:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:15"
																		},
																		"nativeSrc": "8503:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:14:15"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e74726163742063616e2063616e63656c20746865",
																		"kind": "string",
																		"nativeSrc": "8519:34:15",
																		"nodeType": "YulLiteral",
																		"src": "8519:34:15",
																		"type": "",
																		"value": "Only the contract can cancel the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:15"
																},
																"nativeSrc": "8496:58:15",
																"nodeType": "YulFunctionCall",
																"src": "8496:58:15"
															},
															"nativeSrc": "8496:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "8496:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8575:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8575:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8583:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8583:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8571:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8571:3:15"
																		},
																		"nativeSrc": "8571:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8571:15:15"
																	},
																	{
																		"hexValue": "206c697374696e67",
																		"kind": "string",
																		"nativeSrc": "8588:10:15",
																		"nodeType": "YulLiteral",
																		"src": "8588:10:15",
																		"type": "",
																		"value": " listing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8564:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:15"
																},
																"nativeSrc": "8564:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8564:35:15"
															},
															"nativeSrc": "8564:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "8564:35:15"
														}
													]
												},
												"name": "store_literal_in_memory_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130",
												"nativeSrc": "8379:227:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8477:6:15",
														"nodeType": "YulTypedName",
														"src": "8477:6:15",
														"type": ""
													}
												],
												"src": "8379:227:15"
											},
											{
												"body": {
													"nativeSrc": "8758:220:15",
													"nodeType": "YulBlock",
													"src": "8758:220:15",
													"statements": [
														{
															"nativeSrc": "8768:74:15",
															"nodeType": "YulAssignment",
															"src": "8768:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8834:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8834:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8839:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8839:2:15",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8775:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "8775:58:15"
																},
																"nativeSrc": "8775:67:15",
																"nodeType": "YulFunctionCall",
																"src": "8775:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8768:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8768:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8940:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8940:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130",
																	"nativeSrc": "8851:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "8851:88:15"
																},
																"nativeSrc": "8851:93:15",
																"nodeType": "YulFunctionCall",
																"src": "8851:93:15"
															},
															"nativeSrc": "8851:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "8851:93:15"
														},
														{
															"nativeSrc": "8953:19:15",
															"nodeType": "YulAssignment",
															"src": "8953:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8964:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8964:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8969:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8969:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8960:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:15"
																},
																"nativeSrc": "8960:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8960:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8953:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8953:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8612:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8746:3:15",
														"nodeType": "YulTypedName",
														"src": "8746:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8754:3:15",
														"nodeType": "YulTypedName",
														"src": "8754:3:15",
														"type": ""
													}
												],
												"src": "8612:366:15"
											},
											{
												"body": {
													"nativeSrc": "9155:248:15",
													"nodeType": "YulBlock",
													"src": "9155:248:15",
													"statements": [
														{
															"nativeSrc": "9165:26:15",
															"nodeType": "YulAssignment",
															"src": "9165:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9177:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9177:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9188:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9173:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9173:3:15"
																},
																"nativeSrc": "9173:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9173:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9165:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9165:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9212:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9212:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9223:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9223:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9208:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9208:3:15"
																		},
																		"nativeSrc": "9208:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9208:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9231:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9231:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9237:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9237:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9227:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9227:3:15"
																		},
																		"nativeSrc": "9227:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9201:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:15"
																},
																"nativeSrc": "9201:47:15",
																"nodeType": "YulFunctionCall",
																"src": "9201:47:15"
															},
															"nativeSrc": "9201:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "9201:47:15"
														},
														{
															"nativeSrc": "9257:139:15",
															"nodeType": "YulAssignment",
															"src": "9257:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9391:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9391:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9265:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "9265:124:15"
																},
																"nativeSrc": "9265:131:15",
																"nodeType": "YulFunctionCall",
																"src": "9265:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9257:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9257:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8984:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9135:9:15",
														"nodeType": "YulTypedName",
														"src": "9135:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9150:4:15",
														"nodeType": "YulTypedName",
														"src": "9150:4:15",
														"type": ""
													}
												],
												"src": "8984:419:15"
											},
											{
												"body": {
													"nativeSrc": "9563:288:15",
													"nodeType": "YulBlock",
													"src": "9563:288:15",
													"statements": [
														{
															"nativeSrc": "9573:26:15",
															"nodeType": "YulAssignment",
															"src": "9573:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9585:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9585:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9596:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9596:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9581:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9581:3:15"
																},
																"nativeSrc": "9581:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9581:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9573:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9573:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9653:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9653:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9666:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9666:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9677:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9677:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9662:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9662:3:15"
																		},
																		"nativeSrc": "9662:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9662:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9609:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9609:43:15"
																},
																"nativeSrc": "9609:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9609:71:15"
															},
															"nativeSrc": "9609:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9609:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9734:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9734:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9747:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9747:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9758:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9758:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9743:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9743:3:15"
																		},
																		"nativeSrc": "9743:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9743:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9690:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9690:43:15"
																},
																"nativeSrc": "9690:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9690:72:15"
															},
															"nativeSrc": "9690:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9690:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9816:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9816:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9829:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9829:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9840:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9840:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9825:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:15"
																		},
																		"nativeSrc": "9825:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9772:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9772:43:15"
																},
																"nativeSrc": "9772:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9772:72:15"
															},
															"nativeSrc": "9772:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9772:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9409:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9519:9:15",
														"nodeType": "YulTypedName",
														"src": "9519:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9531:6:15",
														"nodeType": "YulTypedName",
														"src": "9531:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9539:6:15",
														"nodeType": "YulTypedName",
														"src": "9539:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9547:6:15",
														"nodeType": "YulTypedName",
														"src": "9547:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9558:4:15",
														"nodeType": "YulTypedName",
														"src": "9558:4:15",
														"type": ""
													}
												],
												"src": "9409:442:15"
											},
											{
												"body": {
													"nativeSrc": "9963:68:15",
													"nodeType": "YulBlock",
													"src": "9963:68:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9985:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9985:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9993:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9993:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9981:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9981:3:15"
																		},
																		"nativeSrc": "9981:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9981:14:15"
																	},
																	{
																		"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "9997:26:15",
																		"nodeType": "YulLiteral",
																		"src": "9997:26:15",
																		"type": "",
																		"value": "Incorrect payment amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9974:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9974:6:15"
																},
																"nativeSrc": "9974:50:15",
																"nodeType": "YulFunctionCall",
																"src": "9974:50:15"
															},
															"nativeSrc": "9974:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "9974:50:15"
														}
													]
												},
												"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
												"nativeSrc": "9857:174:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9955:6:15",
														"nodeType": "YulTypedName",
														"src": "9955:6:15",
														"type": ""
													}
												],
												"src": "9857:174:15"
											},
											{
												"body": {
													"nativeSrc": "10183:220:15",
													"nodeType": "YulBlock",
													"src": "10183:220:15",
													"statements": [
														{
															"nativeSrc": "10193:74:15",
															"nodeType": "YulAssignment",
															"src": "10193:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10259:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10259:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10264:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10200:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "10200:58:15"
																},
																"nativeSrc": "10200:67:15",
																"nodeType": "YulFunctionCall",
																"src": "10200:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10193:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10193:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10365:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10365:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																	"nativeSrc": "10276:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "10276:88:15"
																},
																"nativeSrc": "10276:93:15",
																"nodeType": "YulFunctionCall",
																"src": "10276:93:15"
															},
															"nativeSrc": "10276:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "10276:93:15"
														},
														{
															"nativeSrc": "10378:19:15",
															"nodeType": "YulAssignment",
															"src": "10378:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10389:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10389:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10394:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10394:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10385:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10385:3:15"
																},
																"nativeSrc": "10385:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10385:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10378:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10378:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10037:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10171:3:15",
														"nodeType": "YulTypedName",
														"src": "10171:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10179:3:15",
														"nodeType": "YulTypedName",
														"src": "10179:3:15",
														"type": ""
													}
												],
												"src": "10037:366:15"
											},
											{
												"body": {
													"nativeSrc": "10580:248:15",
													"nodeType": "YulBlock",
													"src": "10580:248:15",
													"statements": [
														{
															"nativeSrc": "10590:26:15",
															"nodeType": "YulAssignment",
															"src": "10590:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10602:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10602:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10613:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10613:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10598:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10598:3:15"
																},
																"nativeSrc": "10598:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10598:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10590:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10590:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10637:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10637:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10648:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10648:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10633:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10633:3:15"
																		},
																		"nativeSrc": "10633:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10633:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10656:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10656:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10662:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10662:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:15"
																		},
																		"nativeSrc": "10652:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10652:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10626:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10626:6:15"
																},
																"nativeSrc": "10626:47:15",
																"nodeType": "YulFunctionCall",
																"src": "10626:47:15"
															},
															"nativeSrc": "10626:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "10626:47:15"
														},
														{
															"nativeSrc": "10682:139:15",
															"nodeType": "YulAssignment",
															"src": "10682:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10816:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10816:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10690:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "10690:124:15"
																},
																"nativeSrc": "10690:131:15",
																"nodeType": "YulFunctionCall",
																"src": "10690:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10682:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10682:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10409:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10560:9:15",
														"nodeType": "YulTypedName",
														"src": "10560:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10575:4:15",
														"nodeType": "YulTypedName",
														"src": "10575:4:15",
														"type": ""
													}
												],
												"src": "10409:419:15"
											},
											{
												"body": {
													"nativeSrc": "10862:152:15",
													"nodeType": "YulBlock",
													"src": "10862:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10879:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10879:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10882:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10882:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10872:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10872:6:15"
																},
																"nativeSrc": "10872:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10872:88:15"
															},
															"nativeSrc": "10872:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10872:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10976:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10976:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10979:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10979:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10969:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10969:6:15"
																},
																"nativeSrc": "10969:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10969:15:15"
															},
															"nativeSrc": "10969:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10969:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11000:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11000:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11003:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11003:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10993:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10993:6:15"
																},
																"nativeSrc": "10993:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10993:15:15"
															},
															"nativeSrc": "10993:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10993:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10834:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10834:180:15"
											},
											{
												"body": {
													"nativeSrc": "11068:362:15",
													"nodeType": "YulBlock",
													"src": "11068:362:15",
													"statements": [
														{
															"nativeSrc": "11078:25:15",
															"nodeType": "YulAssignment",
															"src": "11078:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11101:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11101:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11083:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11083:17:15"
																},
																"nativeSrc": "11083:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11083:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11078:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11078:1:15"
																}
															]
														},
														{
															"nativeSrc": "11112:25:15",
															"nodeType": "YulAssignment",
															"src": "11112:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11135:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11135:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11117:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11117:17:15"
																},
																"nativeSrc": "11117:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11117:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11112:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11112:1:15"
																}
															]
														},
														{
															"nativeSrc": "11146:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11146:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11169:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11169:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11172:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11172:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11165:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11165:3:15"
																},
																"nativeSrc": "11165:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11165:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11150:11:15",
																	"nodeType": "YulTypedName",
																	"src": "11150:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11183:41:15",
															"nodeType": "YulAssignment",
															"src": "11183:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11212:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "11212:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11194:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11194:17:15"
																},
																"nativeSrc": "11194:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11194:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11183:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "11183:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11401:22:15",
																"nodeType": "YulBlock",
																"src": "11401:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11403:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11403:16:15"
																			},
																			"nativeSrc": "11403:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11403:18:15"
																		},
																		"nativeSrc": "11403:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11403:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11334:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11334:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11327:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "11327:6:15"
																				},
																				"nativeSrc": "11327:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11327:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11357:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11357:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11364:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "11364:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11373:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "11373:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11360:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "11360:3:15"
																						},
																						"nativeSrc": "11360:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "11360:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11354:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "11354:2:15"
																				},
																				"nativeSrc": "11354:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11354:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11307:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11307:2:15"
																		},
																		"nativeSrc": "11307:83:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11307:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11287:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11287:6:15"
																},
																"nativeSrc": "11287:113:15",
																"nodeType": "YulFunctionCall",
																"src": "11287:113:15"
															},
															"nativeSrc": "11284:139:15",
															"nodeType": "YulIf",
															"src": "11284:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11020:410:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11051:1:15",
														"nodeType": "YulTypedName",
														"src": "11051:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11054:1:15",
														"nodeType": "YulTypedName",
														"src": "11054:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11060:7:15",
														"nodeType": "YulTypedName",
														"src": "11060:7:15",
														"type": ""
													}
												],
												"src": "11020:410:15"
											},
											{
												"body": {
													"nativeSrc": "11464:152:15",
													"nodeType": "YulBlock",
													"src": "11464:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11481:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11481:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11484:77:15",
																		"nodeType": "YulLiteral",
																		"src": "11484:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11474:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:15"
																},
																"nativeSrc": "11474:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11474:88:15"
															},
															"nativeSrc": "11474:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11474:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11578:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11578:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11581:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11581:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11571:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11571:6:15"
																},
																"nativeSrc": "11571:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11571:15:15"
															},
															"nativeSrc": "11571:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11571:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11602:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11602:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11605:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11605:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11595:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11595:6:15"
																},
																"nativeSrc": "11595:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11595:15:15"
															},
															"nativeSrc": "11595:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11595:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11436:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11436:180:15"
											},
											{
												"body": {
													"nativeSrc": "11664:143:15",
													"nodeType": "YulBlock",
													"src": "11664:143:15",
													"statements": [
														{
															"nativeSrc": "11674:25:15",
															"nodeType": "YulAssignment",
															"src": "11674:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11697:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11697:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11679:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11679:17:15"
																},
																"nativeSrc": "11679:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11679:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11674:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11674:1:15"
																}
															]
														},
														{
															"nativeSrc": "11708:25:15",
															"nodeType": "YulAssignment",
															"src": "11708:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11731:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11731:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11713:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11713:17:15"
																},
																"nativeSrc": "11713:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11713:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11708:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11708:1:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11755:22:15",
																"nodeType": "YulBlock",
																"src": "11755:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11757:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11757:16:15"
																			},
																			"nativeSrc": "11757:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11757:18:15"
																		},
																		"nativeSrc": "11757:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11757:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11752:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11752:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11745:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11745:6:15"
																},
																"nativeSrc": "11745:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11745:9:15"
															},
															"nativeSrc": "11742:35:15",
															"nodeType": "YulIf",
															"src": "11742:35:15"
														},
														{
															"nativeSrc": "11787:14:15",
															"nodeType": "YulAssignment",
															"src": "11787:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11796:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11796:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11799:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11799:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11792:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11792:3:15"
																},
																"nativeSrc": "11792:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11792:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11787:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11787:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11622:185:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11653:1:15",
														"nodeType": "YulTypedName",
														"src": "11653:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11656:1:15",
														"nodeType": "YulTypedName",
														"src": "11656:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11662:1:15",
														"nodeType": "YulTypedName",
														"src": "11662:1:15",
														"type": ""
													}
												],
												"src": "11622:185:15"
											},
											{
												"body": {
													"nativeSrc": "11858:149:15",
													"nodeType": "YulBlock",
													"src": "11858:149:15",
													"statements": [
														{
															"nativeSrc": "11868:25:15",
															"nodeType": "YulAssignment",
															"src": "11868:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11891:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11891:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11873:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11873:17:15"
																},
																"nativeSrc": "11873:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11873:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11868:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11868:1:15"
																}
															]
														},
														{
															"nativeSrc": "11902:25:15",
															"nodeType": "YulAssignment",
															"src": "11902:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11925:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11925:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11907:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11907:17:15"
																},
																"nativeSrc": "11907:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11907:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11902:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11902:1:15"
																}
															]
														},
														{
															"nativeSrc": "11936:17:15",
															"nodeType": "YulAssignment",
															"src": "11936:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11948:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11948:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11951:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11951:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11944:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11944:3:15"
																},
																"nativeSrc": "11944:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11944:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11936:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11936:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11978:22:15",
																"nodeType": "YulBlock",
																"src": "11978:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11980:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11980:16:15"
																			},
																			"nativeSrc": "11980:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11980:18:15"
																		},
																		"nativeSrc": "11980:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11980:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11969:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11969:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11975:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11975:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11966:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11966:2:15"
																},
																"nativeSrc": "11966:11:15",
																"nodeType": "YulFunctionCall",
																"src": "11966:11:15"
															},
															"nativeSrc": "11963:37:15",
															"nodeType": "YulIf",
															"src": "11963:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11813:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11844:1:15",
														"nodeType": "YulTypedName",
														"src": "11844:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11847:1:15",
														"nodeType": "YulTypedName",
														"src": "11847:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11853:4:15",
														"nodeType": "YulTypedName",
														"src": "11853:4:15",
														"type": ""
													}
												],
												"src": "11813:194:15"
											},
											{
												"body": {
													"nativeSrc": "12139:206:15",
													"nodeType": "YulBlock",
													"src": "12139:206:15",
													"statements": [
														{
															"nativeSrc": "12149:26:15",
															"nodeType": "YulAssignment",
															"src": "12149:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12161:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12161:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12172:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12172:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12157:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12157:3:15"
																},
																"nativeSrc": "12157:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12157:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12149:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12149:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12229:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12229:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12242:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12253:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12253:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12238:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12238:3:15"
																		},
																		"nativeSrc": "12238:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12238:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12185:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "12185:43:15"
																},
																"nativeSrc": "12185:71:15",
																"nodeType": "YulFunctionCall",
																"src": "12185:71:15"
															},
															"nativeSrc": "12185:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "12185:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12310:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12310:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12323:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12323:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12334:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12334:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12319:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12319:3:15"
																		},
																		"nativeSrc": "12319:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12319:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12266:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "12266:43:15"
																},
																"nativeSrc": "12266:72:15",
																"nodeType": "YulFunctionCall",
																"src": "12266:72:15"
															},
															"nativeSrc": "12266:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "12266:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12013:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12103:9:15",
														"nodeType": "YulTypedName",
														"src": "12103:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12115:6:15",
														"nodeType": "YulTypedName",
														"src": "12115:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12123:6:15",
														"nodeType": "YulTypedName",
														"src": "12123:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12134:4:15",
														"nodeType": "YulTypedName",
														"src": "12134:4:15",
														"type": ""
													}
												],
												"src": "12013:332:15"
											},
											{
												"body": {
													"nativeSrc": "12457:117:15",
													"nodeType": "YulBlock",
													"src": "12457:117:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12479:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12479:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12487:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12487:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12475:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12475:3:15"
																		},
																		"nativeSrc": "12475:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12475:14:15"
																	},
																	{
																		"hexValue": "50657263656e74616765206d757374206265206265747765656e203020616e64",
																		"kind": "string",
																		"nativeSrc": "12491:34:15",
																		"nodeType": "YulLiteral",
																		"src": "12491:34:15",
																		"type": "",
																		"value": "Percentage must be between 0 and"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12468:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12468:6:15"
																},
																"nativeSrc": "12468:58:15",
																"nodeType": "YulFunctionCall",
																"src": "12468:58:15"
															},
															"nativeSrc": "12468:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "12468:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12547:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12547:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12555:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12555:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12543:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12543:3:15"
																		},
																		"nativeSrc": "12543:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12543:15:15"
																	},
																	{
																		"hexValue": "20313030",
																		"kind": "string",
																		"nativeSrc": "12560:6:15",
																		"nodeType": "YulLiteral",
																		"src": "12560:6:15",
																		"type": "",
																		"value": " 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12536:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12536:6:15"
																},
																"nativeSrc": "12536:31:15",
																"nodeType": "YulFunctionCall",
																"src": "12536:31:15"
															},
															"nativeSrc": "12536:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "12536:31:15"
														}
													]
												},
												"name": "store_literal_in_memory_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5",
												"nativeSrc": "12351:223:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12449:6:15",
														"nodeType": "YulTypedName",
														"src": "12449:6:15",
														"type": ""
													}
												],
												"src": "12351:223:15"
											},
											{
												"body": {
													"nativeSrc": "12726:220:15",
													"nodeType": "YulBlock",
													"src": "12726:220:15",
													"statements": [
														{
															"nativeSrc": "12736:74:15",
															"nodeType": "YulAssignment",
															"src": "12736:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12802:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12802:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12807:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12807:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12743:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "12743:58:15"
																},
																"nativeSrc": "12743:67:15",
																"nodeType": "YulFunctionCall",
																"src": "12743:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12736:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12736:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12908:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12908:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5",
																	"nativeSrc": "12819:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "12819:88:15"
																},
																"nativeSrc": "12819:93:15",
																"nodeType": "YulFunctionCall",
																"src": "12819:93:15"
															},
															"nativeSrc": "12819:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "12819:93:15"
														},
														{
															"nativeSrc": "12921:19:15",
															"nodeType": "YulAssignment",
															"src": "12921:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12932:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12932:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12937:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12937:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12928:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12928:3:15"
																},
																"nativeSrc": "12928:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12928:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12921:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12921:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12580:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12714:3:15",
														"nodeType": "YulTypedName",
														"src": "12714:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12722:3:15",
														"nodeType": "YulTypedName",
														"src": "12722:3:15",
														"type": ""
													}
												],
												"src": "12580:366:15"
											},
											{
												"body": {
													"nativeSrc": "13123:248:15",
													"nodeType": "YulBlock",
													"src": "13123:248:15",
													"statements": [
														{
															"nativeSrc": "13133:26:15",
															"nodeType": "YulAssignment",
															"src": "13133:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13145:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13145:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13156:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13156:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13141:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13141:3:15"
																},
																"nativeSrc": "13141:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13141:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13133:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13133:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13180:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13180:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13191:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13191:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13176:3:15"
																		},
																		"nativeSrc": "13176:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13176:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13199:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "13199:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13205:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13205:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13195:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13195:3:15"
																		},
																		"nativeSrc": "13195:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13195:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13169:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13169:6:15"
																},
																"nativeSrc": "13169:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13169:47:15"
															},
															"nativeSrc": "13169:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13169:47:15"
														},
														{
															"nativeSrc": "13225:139:15",
															"nodeType": "YulAssignment",
															"src": "13225:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13359:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13359:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13233:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "13233:124:15"
																},
																"nativeSrc": "13233:131:15",
																"nodeType": "YulFunctionCall",
																"src": "13233:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13225:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13225:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12952:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13103:9:15",
														"nodeType": "YulTypedName",
														"src": "13103:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13118:4:15",
														"nodeType": "YulTypedName",
														"src": "13118:4:15",
														"type": ""
													}
												],
												"src": "12952:419:15"
											},
											{
												"body": {
													"nativeSrc": "13405:152:15",
													"nodeType": "YulBlock",
													"src": "13405:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13422:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13422:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13425:77:15",
																		"nodeType": "YulLiteral",
																		"src": "13425:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13415:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13415:6:15"
																},
																"nativeSrc": "13415:88:15",
																"nodeType": "YulFunctionCall",
																"src": "13415:88:15"
															},
															"nativeSrc": "13415:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "13415:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13519:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13519:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13522:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13522:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13512:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13512:6:15"
																},
																"nativeSrc": "13512:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13512:15:15"
															},
															"nativeSrc": "13512:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13512:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13543:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13543:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13546:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13546:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13536:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13536:6:15"
																},
																"nativeSrc": "13536:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13536:15:15"
															},
															"nativeSrc": "13536:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13536:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "13377:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "13377:180:15"
											},
											{
												"body": {
													"nativeSrc": "13591:152:15",
													"nodeType": "YulBlock",
													"src": "13591:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13608:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13608:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13611:77:15",
																		"nodeType": "YulLiteral",
																		"src": "13611:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13601:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13601:6:15"
																},
																"nativeSrc": "13601:88:15",
																"nodeType": "YulFunctionCall",
																"src": "13601:88:15"
															},
															"nativeSrc": "13601:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "13601:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13705:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13705:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13708:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13708:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13698:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13698:6:15"
																},
																"nativeSrc": "13698:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13698:15:15"
															},
															"nativeSrc": "13698:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13698:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13729:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13729:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13732:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13732:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13722:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13722:6:15"
																},
																"nativeSrc": "13722:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13722:15:15"
															},
															"nativeSrc": "13722:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13722:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "13563:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "13563:180:15"
											},
											{
												"body": {
													"nativeSrc": "13792:190:15",
													"nodeType": "YulBlock",
													"src": "13792:190:15",
													"statements": [
														{
															"nativeSrc": "13802:33:15",
															"nodeType": "YulAssignment",
															"src": "13802:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13829:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13829:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13811:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "13811:17:15"
																},
																"nativeSrc": "13811:24:15",
																"nodeType": "YulFunctionCall",
																"src": "13811:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13802:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13802:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13925:22:15",
																"nodeType": "YulBlock",
																"src": "13925:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13927:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13927:16:15"
																			},
																			"nativeSrc": "13927:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13927:18:15"
																		},
																		"nativeSrc": "13927:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13927:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13850:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13850:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13857:66:15",
																		"nodeType": "YulLiteral",
																		"src": "13857:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13847:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13847:2:15"
																},
																"nativeSrc": "13847:77:15",
																"nodeType": "YulFunctionCall",
																"src": "13847:77:15"
															},
															"nativeSrc": "13844:103:15",
															"nodeType": "YulIf",
															"src": "13844:103:15"
														},
														{
															"nativeSrc": "13956:20:15",
															"nodeType": "YulAssignment",
															"src": "13956:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13967:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13967:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13974:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13974:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13963:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13963:3:15"
																},
																"nativeSrc": "13963:13:15",
																"nodeType": "YulFunctionCall",
																"src": "13963:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13956:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13956:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13749:233:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13778:5:15",
														"nodeType": "YulTypedName",
														"src": "13778:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13788:3:15",
														"nodeType": "YulTypedName",
														"src": "13788:3:15",
														"type": ""
													}
												],
												"src": "13749:233:15"
											},
											{
												"body": {
													"nativeSrc": "14094:75:15",
													"nodeType": "YulBlock",
													"src": "14094:75:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14116:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14116:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14124:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14124:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14112:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14112:3:15"
																		},
																		"nativeSrc": "14112:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14112:14:15"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "14128:33:15",
																		"nodeType": "YulLiteral",
																		"src": "14128:33:15",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14105:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14105:6:15"
																},
																"nativeSrc": "14105:57:15",
																"nodeType": "YulFunctionCall",
																"src": "14105:57:15"
															},
															"nativeSrc": "14105:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "14105:57:15"
														}
													]
												},
												"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
												"nativeSrc": "13988:181:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14086:6:15",
														"nodeType": "YulTypedName",
														"src": "14086:6:15",
														"type": ""
													}
												],
												"src": "13988:181:15"
											},
											{
												"body": {
													"nativeSrc": "14321:220:15",
													"nodeType": "YulBlock",
													"src": "14321:220:15",
													"statements": [
														{
															"nativeSrc": "14331:74:15",
															"nodeType": "YulAssignment",
															"src": "14331:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14397:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14397:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14402:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14402:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14338:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "14338:58:15"
																},
																"nativeSrc": "14338:67:15",
																"nodeType": "YulFunctionCall",
																"src": "14338:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14331:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14331:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14503:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14503:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																	"nativeSrc": "14414:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "14414:88:15"
																},
																"nativeSrc": "14414:93:15",
																"nodeType": "YulFunctionCall",
																"src": "14414:93:15"
															},
															"nativeSrc": "14414:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "14414:93:15"
														},
														{
															"nativeSrc": "14516:19:15",
															"nodeType": "YulAssignment",
															"src": "14516:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14527:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14527:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14532:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14532:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14523:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14523:3:15"
																},
																"nativeSrc": "14523:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14523:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14516:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14516:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14175:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14309:3:15",
														"nodeType": "YulTypedName",
														"src": "14309:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14317:3:15",
														"nodeType": "YulTypedName",
														"src": "14317:3:15",
														"type": ""
													}
												],
												"src": "14175:366:15"
											},
											{
												"body": {
													"nativeSrc": "14718:248:15",
													"nodeType": "YulBlock",
													"src": "14718:248:15",
													"statements": [
														{
															"nativeSrc": "14728:26:15",
															"nodeType": "YulAssignment",
															"src": "14728:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14740:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14740:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14751:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14751:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14736:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14736:3:15"
																},
																"nativeSrc": "14736:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14736:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14728:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14775:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14775:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14786:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14786:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14771:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14771:3:15"
																		},
																		"nativeSrc": "14771:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14771:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14794:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14794:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14800:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14800:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14790:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14790:3:15"
																		},
																		"nativeSrc": "14790:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14790:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14764:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14764:6:15"
																},
																"nativeSrc": "14764:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14764:47:15"
															},
															"nativeSrc": "14764:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14764:47:15"
														},
														{
															"nativeSrc": "14820:139:15",
															"nodeType": "YulAssignment",
															"src": "14820:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14954:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14954:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14828:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14828:124:15"
																},
																"nativeSrc": "14828:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14828:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14820:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14820:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14547:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14698:9:15",
														"nodeType": "YulTypedName",
														"src": "14698:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14713:4:15",
														"nodeType": "YulTypedName",
														"src": "14713:4:15",
														"type": ""
													}
												],
												"src": "14547:419:15"
											},
											{
												"body": {
													"nativeSrc": "15078:116:15",
													"nodeType": "YulBlock",
													"src": "15078:116:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15100:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15100:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15108:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15108:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15096:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15096:3:15"
																		},
																		"nativeSrc": "15096:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15096:14:15"
																	},
																	{
																		"hexValue": "4f6e6c79204e4654206f776e65722063616e206372656174652061206c697374",
																		"kind": "string",
																		"nativeSrc": "15112:34:15",
																		"nodeType": "YulLiteral",
																		"src": "15112:34:15",
																		"type": "",
																		"value": "Only NFT owner can create a list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15089:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15089:6:15"
																},
																"nativeSrc": "15089:58:15",
																"nodeType": "YulFunctionCall",
																"src": "15089:58:15"
															},
															"nativeSrc": "15089:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "15089:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15168:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15168:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15176:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15176:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15164:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15164:3:15"
																		},
																		"nativeSrc": "15164:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15164:15:15"
																	},
																	{
																		"hexValue": "696e67",
																		"kind": "string",
																		"nativeSrc": "15181:5:15",
																		"nodeType": "YulLiteral",
																		"src": "15181:5:15",
																		"type": "",
																		"value": "ing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15157:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15157:6:15"
																},
																"nativeSrc": "15157:30:15",
																"nodeType": "YulFunctionCall",
																"src": "15157:30:15"
															},
															"nativeSrc": "15157:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "15157:30:15"
														}
													]
												},
												"name": "store_literal_in_memory_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482",
												"nativeSrc": "14972:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15070:6:15",
														"nodeType": "YulTypedName",
														"src": "15070:6:15",
														"type": ""
													}
												],
												"src": "14972:222:15"
											},
											{
												"body": {
													"nativeSrc": "15346:220:15",
													"nodeType": "YulBlock",
													"src": "15346:220:15",
													"statements": [
														{
															"nativeSrc": "15356:74:15",
															"nodeType": "YulAssignment",
															"src": "15356:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15422:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15422:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15427:2:15",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15363:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "15363:58:15"
																},
																"nativeSrc": "15363:67:15",
																"nodeType": "YulFunctionCall",
																"src": "15363:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15356:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15356:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15528:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15528:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482",
																	"nativeSrc": "15439:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15439:88:15"
																},
																"nativeSrc": "15439:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15439:93:15"
															},
															"nativeSrc": "15439:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15439:93:15"
														},
														{
															"nativeSrc": "15541:19:15",
															"nodeType": "YulAssignment",
															"src": "15541:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15552:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15552:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15557:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15557:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15548:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15548:3:15"
																},
																"nativeSrc": "15548:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15548:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15541:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15541:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15200:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15334:3:15",
														"nodeType": "YulTypedName",
														"src": "15334:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15342:3:15",
														"nodeType": "YulTypedName",
														"src": "15342:3:15",
														"type": ""
													}
												],
												"src": "15200:366:15"
											},
											{
												"body": {
													"nativeSrc": "15743:248:15",
													"nodeType": "YulBlock",
													"src": "15743:248:15",
													"statements": [
														{
															"nativeSrc": "15753:26:15",
															"nodeType": "YulAssignment",
															"src": "15753:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15765:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15765:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15776:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15776:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15761:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15761:3:15"
																},
																"nativeSrc": "15761:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15761:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15753:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15753:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15800:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15800:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15811:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15811:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15796:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15796:3:15"
																		},
																		"nativeSrc": "15796:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15796:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15819:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15819:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15825:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15825:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15815:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15815:3:15"
																		},
																		"nativeSrc": "15815:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15815:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15789:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15789:6:15"
																},
																"nativeSrc": "15789:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15789:47:15"
															},
															"nativeSrc": "15789:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15789:47:15"
														},
														{
															"nativeSrc": "15845:139:15",
															"nodeType": "YulAssignment",
															"src": "15845:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15979:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15979:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15853:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "15853:124:15"
																},
																"nativeSrc": "15853:131:15",
																"nodeType": "YulFunctionCall",
																"src": "15853:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15845:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15845:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15572:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15723:9:15",
														"nodeType": "YulTypedName",
														"src": "15723:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15738:4:15",
														"nodeType": "YulTypedName",
														"src": "15738:4:15",
														"type": ""
													}
												],
												"src": "15572:419:15"
											},
											{
												"body": {
													"nativeSrc": "16103:123:15",
													"nodeType": "YulBlock",
													"src": "16103:123:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16125:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16125:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16133:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16133:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16121:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16121:3:15"
																		},
																		"nativeSrc": "16121:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16121:14:15"
																	},
																	{
																		"hexValue": "41756374696f6e206475726174696f6e206d7573742062652067726561746572",
																		"kind": "string",
																		"nativeSrc": "16137:34:15",
																		"nodeType": "YulLiteral",
																		"src": "16137:34:15",
																		"type": "",
																		"value": "Auction duration must be greater"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16114:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16114:6:15"
																},
																"nativeSrc": "16114:58:15",
																"nodeType": "YulFunctionCall",
																"src": "16114:58:15"
															},
															"nativeSrc": "16114:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "16114:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16193:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16193:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16201:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16201:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16189:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16189:3:15"
																		},
																		"nativeSrc": "16189:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16189:15:15"
																	},
																	{
																		"hexValue": "207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "16206:12:15",
																		"nodeType": "YulLiteral",
																		"src": "16206:12:15",
																		"type": "",
																		"value": " than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16182:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16182:6:15"
																},
																"nativeSrc": "16182:37:15",
																"nodeType": "YulFunctionCall",
																"src": "16182:37:15"
															},
															"nativeSrc": "16182:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "16182:37:15"
														}
													]
												},
												"name": "store_literal_in_memory_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277",
												"nativeSrc": "15997:229:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16095:6:15",
														"nodeType": "YulTypedName",
														"src": "16095:6:15",
														"type": ""
													}
												],
												"src": "15997:229:15"
											},
											{
												"body": {
													"nativeSrc": "16378:220:15",
													"nodeType": "YulBlock",
													"src": "16378:220:15",
													"statements": [
														{
															"nativeSrc": "16388:74:15",
															"nodeType": "YulAssignment",
															"src": "16388:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16454:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16454:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16459:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16459:2:15",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16395:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "16395:58:15"
																},
																"nativeSrc": "16395:67:15",
																"nodeType": "YulFunctionCall",
																"src": "16395:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16388:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16388:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16560:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16560:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277",
																	"nativeSrc": "16471:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "16471:88:15"
																},
																"nativeSrc": "16471:93:15",
																"nodeType": "YulFunctionCall",
																"src": "16471:93:15"
															},
															"nativeSrc": "16471:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "16471:93:15"
														},
														{
															"nativeSrc": "16573:19:15",
															"nodeType": "YulAssignment",
															"src": "16573:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16584:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16584:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16589:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16589:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16580:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16580:3:15"
																},
																"nativeSrc": "16580:12:15",
																"nodeType": "YulFunctionCall",
																"src": "16580:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16573:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16573:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16232:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16366:3:15",
														"nodeType": "YulTypedName",
														"src": "16366:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16374:3:15",
														"nodeType": "YulTypedName",
														"src": "16374:3:15",
														"type": ""
													}
												],
												"src": "16232:366:15"
											},
											{
												"body": {
													"nativeSrc": "16775:248:15",
													"nodeType": "YulBlock",
													"src": "16775:248:15",
													"statements": [
														{
															"nativeSrc": "16785:26:15",
															"nodeType": "YulAssignment",
															"src": "16785:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16797:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16797:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16808:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16808:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16793:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16793:3:15"
																},
																"nativeSrc": "16793:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16793:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16785:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16785:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16832:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16832:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16843:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16843:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16828:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16828:3:15"
																		},
																		"nativeSrc": "16828:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16828:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16851:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "16851:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16857:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16857:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16847:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16847:3:15"
																		},
																		"nativeSrc": "16847:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16847:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16821:6:15"
																},
																"nativeSrc": "16821:47:15",
																"nodeType": "YulFunctionCall",
																"src": "16821:47:15"
															},
															"nativeSrc": "16821:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "16821:47:15"
														},
														{
															"nativeSrc": "16877:139:15",
															"nodeType": "YulAssignment",
															"src": "16877:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17011:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "17011:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16885:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "16885:124:15"
																},
																"nativeSrc": "16885:131:15",
																"nodeType": "YulFunctionCall",
																"src": "16885:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16877:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16877:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16604:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16755:9:15",
														"nodeType": "YulTypedName",
														"src": "16755:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16770:4:15",
														"nodeType": "YulTypedName",
														"src": "16770:4:15",
														"type": ""
													}
												],
												"src": "16604:419:15"
											},
											{
												"body": {
													"nativeSrc": "17073:147:15",
													"nodeType": "YulBlock",
													"src": "17073:147:15",
													"statements": [
														{
															"nativeSrc": "17083:25:15",
															"nodeType": "YulAssignment",
															"src": "17083:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17106:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17106:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17088:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "17088:17:15"
																},
																"nativeSrc": "17088:20:15",
																"nodeType": "YulFunctionCall",
																"src": "17088:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17083:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "17083:1:15"
																}
															]
														},
														{
															"nativeSrc": "17117:25:15",
															"nodeType": "YulAssignment",
															"src": "17117:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17140:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17140:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17122:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "17122:17:15"
																},
																"nativeSrc": "17122:20:15",
																"nodeType": "YulFunctionCall",
																"src": "17122:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17117:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "17117:1:15"
																}
															]
														},
														{
															"nativeSrc": "17151:16:15",
															"nodeType": "YulAssignment",
															"src": "17151:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17162:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17162:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17165:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17165:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17158:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17158:3:15"
																},
																"nativeSrc": "17158:9:15",
																"nodeType": "YulFunctionCall",
																"src": "17158:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17151:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17151:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17191:22:15",
																"nodeType": "YulBlock",
																"src": "17191:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17193:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "17193:16:15"
																			},
																			"nativeSrc": "17193:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17193:18:15"
																		},
																		"nativeSrc": "17193:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17193:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17183:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17183:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17186:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17186:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17180:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "17180:2:15"
																},
																"nativeSrc": "17180:10:15",
																"nodeType": "YulFunctionCall",
																"src": "17180:10:15"
															},
															"nativeSrc": "17177:36:15",
															"nodeType": "YulIf",
															"src": "17177:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17029:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17060:1:15",
														"nodeType": "YulTypedName",
														"src": "17060:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17063:1:15",
														"nodeType": "YulTypedName",
														"src": "17063:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17069:3:15",
														"nodeType": "YulTypedName",
														"src": "17069:3:15",
														"type": ""
													}
												],
												"src": "17029:191:15"
											},
											{
												"body": {
													"nativeSrc": "17402:365:15",
													"nodeType": "YulBlock",
													"src": "17402:365:15",
													"statements": [
														{
															"nativeSrc": "17412:27:15",
															"nodeType": "YulAssignment",
															"src": "17412:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17424:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17424:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17435:3:15",
																		"nodeType": "YulLiteral",
																		"src": "17435:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17420:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17420:3:15"
																},
																"nativeSrc": "17420:19:15",
																"nodeType": "YulFunctionCall",
																"src": "17420:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17412:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17412:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17493:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17493:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17506:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17506:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17517:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17517:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17502:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17502:3:15"
																		},
																		"nativeSrc": "17502:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17502:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17449:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17449:43:15"
																},
																"nativeSrc": "17449:71:15",
																"nodeType": "YulFunctionCall",
																"src": "17449:71:15"
															},
															"nativeSrc": "17449:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "17449:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17574:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17574:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17587:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17587:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17598:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17598:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17583:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17583:3:15"
																		},
																		"nativeSrc": "17583:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17583:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17530:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17530:43:15"
																},
																"nativeSrc": "17530:72:15",
																"nodeType": "YulFunctionCall",
																"src": "17530:72:15"
															},
															"nativeSrc": "17530:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "17530:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17650:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17650:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17663:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17663:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17674:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17674:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17659:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17659:3:15"
																		},
																		"nativeSrc": "17659:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17659:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "17612:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "17612:37:15"
																},
																"nativeSrc": "17612:66:15",
																"nodeType": "YulFunctionCall",
																"src": "17612:66:15"
															},
															"nativeSrc": "17612:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "17612:66:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17732:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17732:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17745:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17745:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17756:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17756:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17741:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17741:3:15"
																		},
																		"nativeSrc": "17741:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17741:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17688:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17688:43:15"
																},
																"nativeSrc": "17688:72:15",
																"nodeType": "YulFunctionCall",
																"src": "17688:72:15"
															},
															"nativeSrc": "17688:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "17688:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "17226:541:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17350:9:15",
														"nodeType": "YulTypedName",
														"src": "17350:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17362:6:15",
														"nodeType": "YulTypedName",
														"src": "17362:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17370:6:15",
														"nodeType": "YulTypedName",
														"src": "17370:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17378:6:15",
														"nodeType": "YulTypedName",
														"src": "17378:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17386:6:15",
														"nodeType": "YulTypedName",
														"src": "17386:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17397:4:15",
														"nodeType": "YulTypedName",
														"src": "17397:4:15",
														"type": ""
													}
												],
												"src": "17226:541:15"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the contract can cancel the\")\n\n        mstore(add(memPtr, 32), \" listing\")\n\n    }\n\n    function abi_encode_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Percentage must be between 0 and\")\n\n        mstore(add(memPtr, 32), \" 100\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only NFT owner can create a list\")\n\n        mstore(add(memPtr, 32), \"ing\")\n\n    }\n\n    function abi_encode_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction duration must be greater\")\n\n        mstore(add(memPtr, 32), \" than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c80638da5cb5b1161007e578063d9194bb211610058578063d9194bb21461025e578063de74e57b14610286578063e20fc118146102c7578063f2fde38b146102f1576100dc565b80638da5cb5b146101e0578063aaccf1ec1461020a578063cdd78cfc14610234576100dc565b80634884f459116100ba5780634884f4591461015c578063715018a6146101785780638333903e1461018e57806387c35bc0146101b6576100dc565b80630d08a3a0146100e05780631a5d63db1461010a578063305a67a814610134575b5f80fd5b3480156100eb575f80fd5b506100f4610319565b60405161010191906111b7565b60405180910390f35b348015610115575f80fd5b5061011e61033e565b60405161012b91906111e8565b60405180910390f35b34801561013f575f80fd5b5061015a6004803603810190610155919061122f565b610344565b005b6101766004803603810190610171919061122f565b61059b565b005b348015610183575f80fd5b5061018c61095d565b005b348015610199575f80fd5b506101b460048036038101906101af919061122f565b610970565b005b3480156101c1575f80fd5b506101ca6109fd565b6040516101d79190611311565b60405180910390f35b3480156101eb575f80fd5b506101f4610b71565b60405161020191906111b7565b60405180910390f35b348015610215575f80fd5b5061021e610b98565b60405161022b91906111e8565b60405180910390f35b34801561023f575f80fd5b50610248610b9e565b60405161025591906111e8565b60405180910390f35b348015610269575f80fd5b50610284600480360381019061027f9190611390565b610ba4565b005b348015610291575f80fd5b506102ac60048036038101906102a7919061122f565b610f10565b6040516102be96959493929190611416565b60405180910390f35b3480156102d2575f80fd5b506102db610f80565b6040516102e891906111b7565b60405180910390f35b3480156102fc575f80fd5b5061031760048036038101906103129190611475565b610fa5565b005b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b5f60015f8381526020019081526020015f2090508060030160019054906101000a900460ff166103a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a0906114fa565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e83600101546040518263ffffffff1660e01b815260040161041f91906111e8565b602060405180830381865afa15801561043a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045e919061152c565b73ffffffffffffffffffffffffffffffffffffffff16146104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab906115c7565b60405180910390fd5b805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b8152600401610517939291906115e5565b5f604051808303815f87803b15801561052e575f80fd5b505af1158015610540573d5f803e3d5ffd5b505050505f8160030160016101000a81548160ff0219169083151502179055507f411aee90354c51b1b04cd563fcab2617142a9d50da19232d888547c8a1b7fd8a8260405161058f91906111e8565b60405180910390a15050565b5f60015f8381526020019081526020015f2090508060030160019054906101000a900460ff16610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906114fa565b60405180910390fd5b34816002015414610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90611664565b60405180910390fd5b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e83600101546040518263ffffffff1660e01b81526004016106a691906111e8565b602060405180830381865afa1580156106c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e5919061152c565b9050815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303385600101546040518463ffffffff1660e01b815260040161074a939291906115e5565b5f604051808303815f87803b158015610761575f80fd5b505af1158015610773573d5f803e3d5ffd5b505050505f6064600354846002015461078c91906116af565b610796919061171d565b90505f606460045485600201546107ad91906116af565b6107b7919061171d565b90505f818386600201546107cb919061174d565b6107d5919061174d565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8490811502906040515f60405180830381858888f1935050505015801561083b573d5f803e3d5ffd5b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f193505050501580156108a0573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108e4573d5f803e3d5ffd5b505f8560030160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a87876002015460405161094d929190611780565b60405180910390a2505050505050565b610965611029565b61096e5f6110b0565b565b610978611029565b60648111156109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b390611817565b60405180910390fd5b806003819055507fd0a5ddfa06600c6481dcd2923a572827c06e53859f23f7ddab41ff3144ee8687816040516109f291906111e8565b60405180910390a150565b60605f60025467ffffffffffffffff811115610a1c57610a1b611835565b5b604051908082528060200260200182016040528015610a4a5781602001602082028036833780820191505090505b5090505f805b600254811015610ac35760015f8281526020019081526020015f2060030160019054906101000a900460ff1615610ab05780838381518110610a9557610a94611862565b5b6020026020010181815250508180610aac9061188f565b9250505b8080610abb9061188f565b915050610a50565b505f8167ffffffffffffffff811115610adf57610ade611835565b5b604051908082528060200260200182016040528015610b0d5781602001602082028036833780820191505090505b5090505f5b82811015610b6757838181518110610b2d57610b2c611862565b5b6020026020010151828281518110610b4857610b47611862565b5b6020026020010181815250508080610b5f9061188f565b915050610b12565b5080935050505090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60035481565b5f8311610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd90611920565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610c3691906111e8565b602060405180830381865afa158015610c51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c75919061152c565b73ffffffffffffffffffffffffffffffffffffffff1614610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc2906119ae565b60405180910390fd5b8115610d18575f8111610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a90611a3c565b60405180910390fd5b610d1c565b5f90505b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610d59939291906115e5565b5f604051808303815f87803b158015610d70575f80fd5b505af1158015610d82573d5f803e3d5ffd5b505050506040518060c001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183151581526020016001151581526020018242610dd69190611a5a565b81525060015f60025481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a08201518160040155905050838573ffffffffffffffffffffffffffffffffffffffff167f8b20b21402c6ccf4b5f2e911ee605585802d96508e51890a1a317975b864dbb060025486868642610eda9190611a5a565b604051610eea9493929190611a8d565b60405180910390a360025f815480929190610f049061188f565b91905055505050505050565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16908060030160019054906101000a900460ff16908060040154905086565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fad611029565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361101d575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161101491906111b7565b60405180910390fd5b611026816110b0565b50565b611031611171565b73ffffffffffffffffffffffffffffffffffffffff1661104f610b71565b73ffffffffffffffffffffffffffffffffffffffff16146110ae57611072611171565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110a591906111b7565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111a182611178565b9050919050565b6111b181611197565b82525050565b5f6020820190506111ca5f8301846111a8565b92915050565b5f819050919050565b6111e2816111d0565b82525050565b5f6020820190506111fb5f8301846111d9565b92915050565b5f80fd5b61120e816111d0565b8114611218575f80fd5b50565b5f8135905061122981611205565b92915050565b5f6020828403121561124457611243611201565b5b5f6112518482850161121b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61128c816111d0565b82525050565b5f61129d8383611283565b60208301905092915050565b5f602082019050919050565b5f6112bf8261125a565b6112c98185611264565b93506112d483611274565b805f5b838110156113045781516112eb8882611292565b97506112f6836112a9565b9250506001810190506112d7565b5085935050505092915050565b5f6020820190508181035f83015261132981846112b5565b905092915050565b61133a81611197565b8114611344575f80fd5b50565b5f8135905061135581611331565b92915050565b5f8115159050919050565b61136f8161135b565b8114611379575f80fd5b50565b5f8135905061138a81611366565b92915050565b5f805f805f60a086880312156113a9576113a8611201565b5b5f6113b688828901611347565b95505060206113c78882890161121b565b94505060406113d88882890161121b565b93505060606113e98882890161137c565b92505060806113fa8882890161121b565b9150509295509295909350565b6114108161135b565b82525050565b5f60c0820190506114295f8301896111a8565b61143660208301886111d9565b61144360408301876111d9565b6114506060830186611407565b61145d6080830185611407565b61146a60a08301846111d9565b979650505050505050565b5f6020828403121561148a57611489611201565b5b5f61149784828501611347565b91505092915050565b5f82825260208201905092915050565b7f4c697374696e67206973206e6f742061637469766500000000000000000000005f82015250565b5f6114e46015836114a0565b91506114ef826114b0565b602082019050919050565b5f6020820190508181035f830152611511816114d8565b9050919050565b5f8151905061152681611331565b92915050565b5f6020828403121561154157611540611201565b5b5f61154e84828501611518565b91505092915050565b7f4f6e6c792074686520636f6e74726163742063616e2063616e63656c207468655f8201527f206c697374696e67000000000000000000000000000000000000000000000000602082015250565b5f6115b16028836114a0565b91506115bc82611557565b604082019050919050565b5f6020820190508181035f8301526115de816115a5565b9050919050565b5f6060820190506115f85f8301866111a8565b61160560208301856111a8565b61161260408301846111d9565b949350505050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f61164e6018836114a0565b91506116598261161a565b602082019050919050565b5f6020820190508181035f83015261167b81611642565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116b9826111d0565b91506116c4836111d0565b92508282026116d2816111d0565b915082820484148315176116e9576116e8611682565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611727826111d0565b9150611732836111d0565b925082611742576117416116f0565b5b828204905092915050565b5f611757826111d0565b9150611762836111d0565b925082820390508181111561177a57611779611682565b5b92915050565b5f6040820190506117935f8301856111d9565b6117a060208301846111d9565b9392505050565b7f50657263656e74616765206d757374206265206265747765656e203020616e645f8201527f2031303000000000000000000000000000000000000000000000000000000000602082015250565b5f6118016024836114a0565b915061180c826117a7565b604082019050919050565b5f6020820190508181035f83015261182e816117f5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611899826111d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118cb576118ca611682565b5b600182019050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f61190a601f836114a0565b9150611915826118d6565b602082019050919050565b5f6020820190508181035f830152611937816118fe565b9050919050565b7f4f6e6c79204e4654206f776e65722063616e206372656174652061206c6973745f8201527f696e670000000000000000000000000000000000000000000000000000000000602082015250565b5f6119986023836114a0565b91506119a38261193e565b604082019050919050565b5f6020820190508181035f8301526119c58161198c565b9050919050565b7f41756374696f6e206475726174696f6e206d75737420626520677265617465725f8201527f207468616e207a65726f00000000000000000000000000000000000000000000602082015250565b5f611a26602a836114a0565b9150611a31826119cc565b604082019050919050565b5f6020820190508181035f830152611a5381611a1a565b9050919050565b5f611a64826111d0565b9150611a6f836111d0565b9250828201905080821115611a8757611a86611682565b5b92915050565b5f608082019050611aa05f8301876111d9565b611aad60208301866111d9565b611aba6040830185611407565b611ac760608301846111d9565b9594505050505056fea26469706673582212205751f742c6eaa00e7ea313be277db23fc5929cdc8fde5c29cb18936e35ce67de64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xD9194BB2 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD9194BB2 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xE20FC118 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F1 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xAACCF1EC EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x234 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x4884F459 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x4884F459 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x8333903E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x87C35BC0 EQ PUSH2 0x1B6 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0xD08A3A0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x1A5D63DB EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x305A67A8 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x95D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F4 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xBA4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A0 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x517 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x411AEE90354C51B1B04CD563FCAB2617142A9D50DA19232D888547C8A1B7FD8A DUP3 PUSH1 0x40 MLOAD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP2 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x64 PUSH1 0x3 SLOAD DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x4 SLOAD DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH1 0x2 ADD SLOAD PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP6 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6329E40C0365262EBBFF5CA819385C2B9713DCAA050ED07866D72C441395699A DUP8 DUP8 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x94D SWAP3 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x965 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x96E PUSH0 PUSH2 0x10B0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x978 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B3 SWAP1 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xD0A5DDFA06600C6481DCD2923A572827C06E53859F23F7DDAB41FF3144EE8687 DUP2 PUSH1 0x40 MLOAD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA4A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x1 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAB0 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA95 JUMPI PUSH2 0xA94 PUSH2 0x1862 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0xAAC SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xABB SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA50 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB0D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB67 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB2D JUMPI PUSH2 0xB2C PUSH2 0x1862 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0x1862 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB5F SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB12 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC51 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD18 JUMPI PUSH0 DUP2 GT PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD59 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8B20B21402C6CCF4B5F2E911EE605585802D96508E51890A1A317975B864DBB0 PUSH1 0x2 SLOAD DUP7 DUP7 DUP7 TIMESTAMP PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF04 SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFAD PUSH2 0x1029 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1026 DUP2 PUSH2 0x10B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1031 PUSH2 0x1171 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104F PUSH2 0xB71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10AE JUMPI PUSH2 0x1072 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11A1 DUP3 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B1 DUP2 PUSH2 0x1197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CA PUSH0 DUP4 ADD DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E2 DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11FB PUSH0 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120E DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0x1205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1251 DUP5 DUP3 DUP6 ADD PUSH2 0x121B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128C DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x129D DUP4 DUP4 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BF DUP3 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x12C9 DUP2 DUP6 PUSH2 0x1264 JUMP JUMPDEST SWAP4 POP PUSH2 0x12D4 DUP4 PUSH2 0x1274 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1304 JUMPI DUP2 MLOAD PUSH2 0x12EB DUP9 DUP3 PUSH2 0x1292 JUMP JUMPDEST SWAP8 POP PUSH2 0x12F6 DUP4 PUSH2 0x12A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12D7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1329 DUP2 DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x1197 JUMP JUMPDEST DUP2 EQ PUSH2 0x1344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1355 DUP2 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136F DUP2 PUSH2 0x135B JUMP JUMPDEST DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138A DUP2 PUSH2 0x1366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x13A8 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B6 DUP9 DUP3 DUP10 ADD PUSH2 0x1347 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x13C7 DUP9 DUP3 DUP10 ADD PUSH2 0x121B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x13D8 DUP9 DUP3 DUP10 ADD PUSH2 0x121B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x13E9 DUP9 DUP3 DUP10 ADD PUSH2 0x137C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x13FA DUP9 DUP3 DUP10 ADD PUSH2 0x121B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x135B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1429 PUSH0 DUP4 ADD DUP10 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1436 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1443 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x146A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH2 0x1489 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1497 DUP5 DUP3 DUP6 ADD PUSH2 0x1347 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E67206973206E6F74206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E4 PUSH1 0x15 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14EF DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1511 DUP2 PUSH2 0x14D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1526 DUP2 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x1201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154E DUP5 DUP3 DUP6 ADD PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520636F6E74726163742063616E2063616E63656C20746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206C697374696E67000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15B1 PUSH1 0x28 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BC DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15DE DUP2 PUSH2 0x15A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F8 PUSH0 DUP4 ADD DUP7 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1605 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1612 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x164E PUSH1 0x18 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1659 DUP3 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167B DUP2 PUSH2 0x1642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16B9 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C4 DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16D2 DUP2 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x16E9 JUMPI PUSH2 0x16E8 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1727 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1732 DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1742 JUMPI PUSH2 0x1741 PUSH2 0x16F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1757 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1762 DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1793 PUSH0 DUP4 ADD DUP6 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x17A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50657263656E74616765206D757374206265206265747765656E203020616E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x2031303000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1801 PUSH1 0x24 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x180C DUP3 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x182E DUP2 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1899 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x18CB JUMPI PUSH2 0x18CA PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190A PUSH1 0x1F DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1915 DUP3 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79204E4654206F776E65722063616E206372656174652061206C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E670000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1998 PUSH1 0x23 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C5 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E206475726174696F6E206D7573742062652067726561746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x207468616E207A65726F00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A26 PUSH1 0x2A DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A31 DUP3 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A53 DUP2 PUSH2 0x1A1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A64 DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6F DUP4 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A87 JUMPI PUSH2 0x1A86 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AA0 PUSH0 DUP4 ADD DUP8 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1AAD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x1ABA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x1AC7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11D9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI MLOAD 0xF7 TIMESTAMP 0xC6 0xEA LOG0 0xE PUSH31 0xA313BE277DB23FC5929CDC8FDE5C29CB18936E35CE67DE64736F6C63430008 ISZERO STOP CALLER ",
							"sourceMap": "299:4385:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;648:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2724:480;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3210:923;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1505:267:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4139:543;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;568:28:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1778:940;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;519:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;695:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;733:33:14;;;;;;;;;;;;;:::o;648:41::-;;;;:::o;2724:480::-;2785:23;2811:8;:19;2820:9;2811:19;;;;;;;;;;;2785:45;;2848:7;:16;;;;;;;;;;;;2840:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2973:4;2908:70;;2916:7;:19;;;;;;;;;;;;2908:36;;;2945:7;:15;;;2908:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;2900:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;3042:7;:19;;;;;;;;;;;;3034:41;;;3084:4;3091:10;3103:7;:15;;;3034:85;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3149:5;3130:7;:16;;;:24;;;;;;;;;;;;;;;;;;3170:27;3187:9;3170:27;;;;;;:::i;:::-;;;;;;;;2775:429;2724:480;:::o;3210:923::-;3276:23;3302:8;:19;3311:9;3302:19;;;;;;;;;;;3276:45;;3339:7;:16;;;;;;;;;;;;3331:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3416:9;3399:7;:13;;;:26;3391:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3465:14;3490:7;:19;;;;;;;;;;;;3482:36;;;3519:7;:15;;;3482:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3465:70;;3554:7;:19;;;;;;;;;;;;3546:41;;;3596:4;3603:10;3615:7;:15;;;3546:85;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3642:19;3706:3;3681:21;;3665:7;:13;;;:37;;;;:::i;:::-;3664:45;;;;:::i;:::-;3642:67;;3719:20;3785:3;3759:22;;3743:7;:13;;;:38;;;;:::i;:::-;3742:46;;;;:::i;:::-;3719:69;;3798:20;3851:12;3837:11;3821:7;:13;;;:27;;;;:::i;:::-;:42;;;;:::i;:::-;3798:65;;3882:17;;;;;;;;;;;3874:35;;:48;3910:11;3874:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3940:18;;;;;;;;;;;3932:36;;:50;3969:12;3932:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4000:6;3992:24;;:38;4017:12;3992:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:5;4041:7;:16;;;:24;;;;;;;;;;;;;;;;;;4100:10;4081:45;;;4089:9;4112:7;:13;;;4081:45;;;;;;;:::i;:::-;;;;;;;;3266:867;;;;;3210:923;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1505:267:14:-;1531:13:0;:11;:13::i;:::-;1616:3:14::1;1599:13;:20;;1591:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1694:13;1670:21;:37;;;;1722:43;1751:13;1722:43;;;;;;:::i;:::-;;;;;;;;1505:267:::0;:::o;4139:543::-;4191:16;4219:31;4267:13;;4253:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4219:62;;4291:13;4324:9;4319:177;4343:13;;4339:1;:17;4319:177;;;4381:8;:11;4390:1;4381:11;;;;;;;;;;;:20;;;;;;;;;;;;4377:109;;;4445:1;4421:14;4436:5;4421:21;;;;;;;;:::i;:::-;;;;;;;:25;;;;;4464:7;;;;;:::i;:::-;;;;4377:109;4358:3;;;;;:::i;:::-;;;;4319:177;;;;4506:23;4546:5;4532:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4506:46;;4567:9;4562:90;4586:5;4582:1;:9;4562:90;;;4624:14;4639:1;4624:17;;;;;;;;:::i;:::-;;;;;;;;4612:6;4619:1;4612:9;;;;;;;;:::i;:::-;;;;;;;:29;;;;;4593:3;;;;;:::i;:::-;;;;4562:90;;;;4669:6;4662:13;;;;;4139:543;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;568:28:14:-;;;;:::o;602:40::-;;;;:::o;1778:940::-;1923:1;1915:5;:9;1907:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:10;1978:51;;1986:11;1978:28;;;2007:7;1978:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;;1970:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;2084:9;2080:150;;;2128:1;2117:8;:12;2109:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2080:150;;;2218:1;2207:12;;2080:150;2248:11;2240:33;;;2274:10;2294:4;2301:7;2240:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:226;;;;;;;;2381:11;2346:226;;;;;;2415:7;2346:226;;;;2443:5;2346:226;;;;2473:9;2346:226;;;;;;2506:4;2346:226;;;;;;2553:8;2535:15;:26;;;;:::i;:::-;2346:226;;;2320:8;:23;2329:13;;2320:23;;;;;;;;;;;:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:7;2618:11;2588:97;;;2603:13;;2640:5;2647:9;2676:8;2658:15;:26;;;;:::i;:::-;2588:97;;;;;;;;;:::i;:::-;;;;;;;;2696:13;;:15;;;;;;;;;:::i;:::-;;;;;;1778:940;;;;;:::o;519:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;695:32::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:126:15:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:114::-;2030:6;2064:5;2058:12;2048:22;;1963:114;;;:::o;2083:184::-;2182:11;2216:6;2211:3;2204:19;2256:4;2251:3;2247:14;2232:29;;2083:184;;;;:::o;2273:132::-;2340:4;2363:3;2355:11;;2393:4;2388:3;2384:14;2376:22;;2273:132;;;:::o;2411:108::-;2488:24;2506:5;2488:24;:::i;:::-;2483:3;2476:37;2411:108;;:::o;2525:179::-;2594:10;2615:46;2657:3;2649:6;2615:46;:::i;:::-;2693:4;2688:3;2684:14;2670:28;;2525:179;;;;:::o;2710:113::-;2780:4;2812;2807:3;2803:14;2795:22;;2710:113;;;:::o;2859:732::-;2978:3;3007:54;3055:5;3007:54;:::i;:::-;3077:86;3156:6;3151:3;3077:86;:::i;:::-;3070:93;;3187:56;3237:5;3187:56;:::i;:::-;3266:7;3297:1;3282:284;3307:6;3304:1;3301:13;3282:284;;;3383:6;3377:13;3410:63;3469:3;3454:13;3410:63;:::i;:::-;3403:70;;3496:60;3549:6;3496:60;:::i;:::-;3486:70;;3342:224;3329:1;3326;3322:9;3317:14;;3282:284;;;3286:14;3582:3;3575:10;;2983:608;;;2859:732;;;;:::o;3597:373::-;3740:4;3778:2;3767:9;3763:18;3755:26;;3827:9;3821:4;3817:20;3813:1;3802:9;3798:17;3791:47;3855:108;3958:4;3949:6;3855:108;:::i;:::-;3847:116;;3597:373;;;;:::o;3976:122::-;4049:24;4067:5;4049:24;:::i;:::-;4042:5;4039:35;4029:63;;4088:1;4085;4078:12;4029:63;3976:122;:::o;4104:139::-;4150:5;4188:6;4175:20;4166:29;;4204:33;4231:5;4204:33;:::i;:::-;4104:139;;;;:::o;4249:90::-;4283:7;4326:5;4319:13;4312:21;4301:32;;4249:90;;;:::o;4345:116::-;4415:21;4430:5;4415:21;:::i;:::-;4408:5;4405:32;4395:60;;4451:1;4448;4441:12;4395:60;4345:116;:::o;4467:133::-;4510:5;4548:6;4535:20;4526:29;;4564:30;4588:5;4564:30;:::i;:::-;4467:133;;;;:::o;4606:905::-;4698:6;4706;4714;4722;4730;4779:3;4767:9;4758:7;4754:23;4750:33;4747:120;;;4786:79;;:::i;:::-;4747:120;4906:1;4931:53;4976:7;4967:6;4956:9;4952:22;4931:53;:::i;:::-;4921:63;;4877:117;5033:2;5059:53;5104:7;5095:6;5084:9;5080:22;5059:53;:::i;:::-;5049:63;;5004:118;5161:2;5187:53;5232:7;5223:6;5212:9;5208:22;5187:53;:::i;:::-;5177:63;;5132:118;5289:2;5315:50;5357:7;5348:6;5337:9;5333:22;5315:50;:::i;:::-;5305:60;;5260:115;5414:3;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5385:119;4606:905;;;;;;;;:::o;5517:109::-;5598:21;5613:5;5598:21;:::i;:::-;5593:3;5586:34;5517:109;;:::o;5632:751::-;5853:4;5891:3;5880:9;5876:19;5868:27;;5905:71;5973:1;5962:9;5958:17;5949:6;5905:71;:::i;:::-;5986:72;6054:2;6043:9;6039:18;6030:6;5986:72;:::i;:::-;6068;6136:2;6125:9;6121:18;6112:6;6068:72;:::i;:::-;6150:66;6212:2;6201:9;6197:18;6188:6;6150:66;:::i;:::-;6226:67;6288:3;6277:9;6273:19;6264:6;6226:67;:::i;:::-;6303:73;6371:3;6360:9;6356:19;6347:6;6303:73;:::i;:::-;5632:751;;;;;;;;;:::o;6389:329::-;6448:6;6497:2;6485:9;6476:7;6472:23;6468:32;6465:119;;;6503:79;;:::i;:::-;6465:119;6623:1;6648:53;6693:7;6684:6;6673:9;6669:22;6648:53;:::i;:::-;6638:63;;6594:117;6389:329;;;;:::o;6724:169::-;6808:11;6842:6;6837:3;6830:19;6882:4;6877:3;6873:14;6858:29;;6724:169;;;;:::o;6899:171::-;7039:23;7035:1;7027:6;7023:14;7016:47;6899:171;:::o;7076:366::-;7218:3;7239:67;7303:2;7298:3;7239:67;:::i;:::-;7232:74;;7315:93;7404:3;7315:93;:::i;:::-;7433:2;7428:3;7424:12;7417:19;;7076:366;;;:::o;7448:419::-;7614:4;7652:2;7641:9;7637:18;7629:26;;7701:9;7695:4;7691:20;7687:1;7676:9;7672:17;7665:47;7729:131;7855:4;7729:131;:::i;:::-;7721:139;;7448:419;;;:::o;7873:143::-;7930:5;7961:6;7955:13;7946:22;;7977:33;8004:5;7977:33;:::i;:::-;7873:143;;;;:::o;8022:351::-;8092:6;8141:2;8129:9;8120:7;8116:23;8112:32;8109:119;;;8147:79;;:::i;:::-;8109:119;8267:1;8292:64;8348:7;8339:6;8328:9;8324:22;8292:64;:::i;:::-;8282:74;;8238:128;8022:351;;;;:::o;8379:227::-;8519:34;8515:1;8507:6;8503:14;8496:58;8588:10;8583:2;8575:6;8571:15;8564:35;8379:227;:::o;8612:366::-;8754:3;8775:67;8839:2;8834:3;8775:67;:::i;:::-;8768:74;;8851:93;8940:3;8851:93;:::i;:::-;8969:2;8964:3;8960:12;8953:19;;8612:366;;;:::o;8984:419::-;9150:4;9188:2;9177:9;9173:18;9165:26;;9237:9;9231:4;9227:20;9223:1;9212:9;9208:17;9201:47;9265:131;9391:4;9265:131;:::i;:::-;9257:139;;8984:419;;;:::o;9409:442::-;9558:4;9596:2;9585:9;9581:18;9573:26;;9609:71;9677:1;9666:9;9662:17;9653:6;9609:71;:::i;:::-;9690:72;9758:2;9747:9;9743:18;9734:6;9690:72;:::i;:::-;9772;9840:2;9829:9;9825:18;9816:6;9772:72;:::i;:::-;9409:442;;;;;;:::o;9857:174::-;9997:26;9993:1;9985:6;9981:14;9974:50;9857:174;:::o;10037:366::-;10179:3;10200:67;10264:2;10259:3;10200:67;:::i;:::-;10193:74;;10276:93;10365:3;10276:93;:::i;:::-;10394:2;10389:3;10385:12;10378:19;;10037:366;;;:::o;10409:419::-;10575:4;10613:2;10602:9;10598:18;10590:26;;10662:9;10656:4;10652:20;10648:1;10637:9;10633:17;10626:47;10690:131;10816:4;10690:131;:::i;:::-;10682:139;;10409:419;;;:::o;10834:180::-;10882:77;10879:1;10872:88;10979:4;10976:1;10969:15;11003:4;11000:1;10993:15;11020:410;11060:7;11083:20;11101:1;11083:20;:::i;:::-;11078:25;;11117:20;11135:1;11117:20;:::i;:::-;11112:25;;11172:1;11169;11165:9;11194:30;11212:11;11194:30;:::i;:::-;11183:41;;11373:1;11364:7;11360:15;11357:1;11354:22;11334:1;11327:9;11307:83;11284:139;;11403:18;;:::i;:::-;11284:139;11068:362;11020:410;;;;:::o;11436:180::-;11484:77;11481:1;11474:88;11581:4;11578:1;11571:15;11605:4;11602:1;11595:15;11622:185;11662:1;11679:20;11697:1;11679:20;:::i;:::-;11674:25;;11713:20;11731:1;11713:20;:::i;:::-;11708:25;;11752:1;11742:35;;11757:18;;:::i;:::-;11742:35;11799:1;11796;11792:9;11787:14;;11622:185;;;;:::o;11813:194::-;11853:4;11873:20;11891:1;11873:20;:::i;:::-;11868:25;;11907:20;11925:1;11907:20;:::i;:::-;11902:25;;11951:1;11948;11944:9;11936:17;;11975:1;11969:4;11966:11;11963:37;;;11980:18;;:::i;:::-;11963:37;11813:194;;;;:::o;12013:332::-;12134:4;12172:2;12161:9;12157:18;12149:26;;12185:71;12253:1;12242:9;12238:17;12229:6;12185:71;:::i;:::-;12266:72;12334:2;12323:9;12319:18;12310:6;12266:72;:::i;:::-;12013:332;;;;;:::o;12351:223::-;12491:34;12487:1;12479:6;12475:14;12468:58;12560:6;12555:2;12547:6;12543:15;12536:31;12351:223;:::o;12580:366::-;12722:3;12743:67;12807:2;12802:3;12743:67;:::i;:::-;12736:74;;12819:93;12908:3;12819:93;:::i;:::-;12937:2;12932:3;12928:12;12921:19;;12580:366;;;:::o;12952:419::-;13118:4;13156:2;13145:9;13141:18;13133:26;;13205:9;13199:4;13195:20;13191:1;13180:9;13176:17;13169:47;13233:131;13359:4;13233:131;:::i;:::-;13225:139;;12952:419;;;:::o;13377:180::-;13425:77;13422:1;13415:88;13522:4;13519:1;13512:15;13546:4;13543:1;13536:15;13563:180;13611:77;13608:1;13601:88;13708:4;13705:1;13698:15;13732:4;13729:1;13722:15;13749:233;13788:3;13811:24;13829:5;13811:24;:::i;:::-;13802:33;;13857:66;13850:5;13847:77;13844:103;;13927:18;;:::i;:::-;13844:103;13974:1;13967:5;13963:13;13956:20;;13749:233;;;:::o;13988:181::-;14128:33;14124:1;14116:6;14112:14;14105:57;13988:181;:::o;14175:366::-;14317:3;14338:67;14402:2;14397:3;14338:67;:::i;:::-;14331:74;;14414:93;14503:3;14414:93;:::i;:::-;14532:2;14527:3;14523:12;14516:19;;14175:366;;;:::o;14547:419::-;14713:4;14751:2;14740:9;14736:18;14728:26;;14800:9;14794:4;14790:20;14786:1;14775:9;14771:17;14764:47;14828:131;14954:4;14828:131;:::i;:::-;14820:139;;14547:419;;;:::o;14972:222::-;15112:34;15108:1;15100:6;15096:14;15089:58;15181:5;15176:2;15168:6;15164:15;15157:30;14972:222;:::o;15200:366::-;15342:3;15363:67;15427:2;15422:3;15363:67;:::i;:::-;15356:74;;15439:93;15528:3;15439:93;:::i;:::-;15557:2;15552:3;15548:12;15541:19;;15200:366;;;:::o;15572:419::-;15738:4;15776:2;15765:9;15761:18;15753:26;;15825:9;15819:4;15815:20;15811:1;15800:9;15796:17;15789:47;15853:131;15979:4;15853:131;:::i;:::-;15845:139;;15572:419;;;:::o;15997:229::-;16137:34;16133:1;16125:6;16121:14;16114:58;16206:12;16201:2;16193:6;16189:15;16182:37;15997:229;:::o;16232:366::-;16374:3;16395:67;16459:2;16454:3;16395:67;:::i;:::-;16388:74;;16471:93;16560:3;16471:93;:::i;:::-;16589:2;16584:3;16580:12;16573:19;;16232:366;;;:::o;16604:419::-;16770:4;16808:2;16797:9;16793:18;16785:26;;16857:9;16851:4;16847:20;16843:1;16832:9;16828:17;16821:47;16885:131;17011:4;16885:131;:::i;:::-;16877:139;;16604:419;;;:::o;17029:191::-;17069:3;17088:20;17106:1;17088:20;:::i;:::-;17083:25;;17122:20;17140:1;17122:20;:::i;:::-;17117:25;;17165:1;17162;17158:9;17151:16;;17186:3;17183:1;17180:10;17177:36;;;17193:18;;:::i;:::-;17177:36;17029:191;;;;:::o;17226:541::-;17397:4;17435:3;17424:9;17420:19;17412:27;;17449:71;17517:1;17506:9;17502:17;17493:6;17449:71;:::i;:::-;17530:72;17598:2;17587:9;17583:18;17574:6;17530:72;:::i;:::-;17612:66;17674:2;17663:9;17659:18;17650:6;17612:66;:::i;:::-;17688:72;17756:2;17745:9;17741:18;17732:6;17688:72;:::i;:::-;17226:541;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1383600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyListing(uint256)": "infinite",
								"cancelListing(uint256)": "infinite",
								"createListing(address,uint256,uint256,bool,uint256)": "infinite",
								"getActiveListings()": "infinite",
								"listings(uint256)": "infinite",
								"nextListingId()": "2470",
								"owner()": "2538",
								"platformFeePercentage()": "2492",
								"platformFeeWallet()": "2574",
								"renounceOwnership()": "infinite",
								"royaltiesFeePercentage()": "2471",
								"royaltiesFeeWallet()": "2532",
								"setPlatformFeePercentage(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 641,
									"end": 642,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 602,
									"end": 642,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 602,
									"end": 642,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 688,
									"end": 689,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 648,
									"end": 689,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 648,
									"end": 689,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1305,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1382,
									"end": 1392,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 1442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1404,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1404,
									"end": 1442,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1473,
									"end": 1492,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1470,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 1452,
									"end": 1470,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1492,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1499,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 4684,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205751f742c6eaa00e7ea313be277db23fc5929cdc8fde5c29cb18936e35ce67de64736f6c63430008150033",
									".code": [
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "D9194BB2"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "D9194BB2"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "DE74E57B"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "E20FC118"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "AACCF1EC"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "CDD78CFC"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "4884F459"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "4884F459"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "8333903E"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "87C35BC0"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "D08A3A0"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "1A5D63DB"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "305A67A8"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 299,
											"end": 4684,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 733,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 733,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 648,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 648,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2724,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2724,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3210,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3210,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1505,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1505,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 4139,
											"end": 4682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 4139,
											"end": 4682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 568,
											"end": 596,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 568,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 568,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 602,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 602,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1778,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1778,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 519,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 519,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 519,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 695,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 695,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 733,
											"end": 766,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 766,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 733,
											"end": 766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 648,
											"end": 689,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 648,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2785,
											"end": 2808,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2785,
											"end": 2830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2785,
											"end": 2830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2855,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2840,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2978,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2916,
											"end": 2935,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2944,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2944,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2944,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 2908,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 2908,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 2908,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2978,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2978,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 2900,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 2900,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3075,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3075,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3075,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3091,
											"end": 3101,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3103,
											"end": 3118,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3103,
											"end": 3118,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3103,
											"end": 3118,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "PUSH",
											"source": 14,
											"value": "411AEE90354C51B1B04CD563FCAB2617142A9D50DA19232D888547C8A1B7FD8A"
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3170,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3197,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 2775,
											"end": 3204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2724,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3276,
											"end": 3299,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3276,
											"end": 3321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3276,
											"end": 3321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 3331,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3331,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3406,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3412,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3399,
											"end": 3412,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3412,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3425,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 3391,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3482,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 3482,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3482,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3587,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3546,
											"end": 3587,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3587,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3603,
											"end": 3613,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3546,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3709,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3672,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3678,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3665,
											"end": 3678,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3678,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 3665,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 3664,
											"end": 3709,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3709,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 3664,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3709,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 3664,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3788,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3756,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3743,
											"end": 3756,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3756,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 3743,
											"end": 3781,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3781,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 3743,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3781,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 3743,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 3742,
											"end": 3788,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 3742,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3788,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 3742,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3837,
											"end": 3848,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3828,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3834,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3821,
											"end": 3834,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3834,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 3821,
											"end": 3848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3848,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 3821,
											"end": 3848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3848,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 3821,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 3821,
											"end": 3863,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 3821,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3863,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 3821,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 3863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 3863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3909,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3874,
											"end": 3909,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 3910,
											"end": 3921,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 3969,
											"end": 3981,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 4017,
											"end": 4029,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4048,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4057,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4041,
											"end": 4057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4057,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "PUSH",
											"source": 14,
											"value": "6329E40C0365262EBBFF5CA819385C2B9713DCAA050ED07866D72C441395699A"
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 4081,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4126,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 3266,
											"end": 4133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3266,
											"end": 4133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3266,
											"end": 4133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3266,
											"end": 4133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3266,
											"end": 4133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1599,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1599,
											"end": 1619,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1599,
											"end": 1619,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 1591,
											"end": 1660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1591,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1694,
											"end": 1707,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1670,
											"end": 1707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1707,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "D0A5DDFA06600C6481DCD2923A572827C06E53859F23F7DDAB41FF3144EE8687"
										},
										{
											"begin": 1751,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1722,
											"end": 1765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1722,
											"end": 1765,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 1772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4219,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 4253,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4281,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4343,
											"end": 4356,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4343,
											"end": 4356,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4339,
											"end": 4340,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4339,
											"end": 4356,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4389,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4486,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4377,
											"end": 4486,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4445,
											"end": 4446,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4435,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4436,
											"end": 4441,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4421,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4446,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4446,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 4446,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4464,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4486,
											"name": "tag",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4377,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4358,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4496,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4506,
											"end": 4529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4551,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 4532,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4506,
											"end": 4552,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4506,
											"end": 4552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4567,
											"end": 4576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4638,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4624,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4641,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4619,
											"end": 4620,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4612,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4641,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4641,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4641,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4593,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4675,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4662,
											"end": 4675,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4662,
											"end": 4675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4662,
											"end": 4675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4662,
											"end": 4675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4662,
											"end": 4675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 596,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 596,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 568,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 602,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1920,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 1907,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 1907,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2029,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2029,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2029,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1986,
											"end": 1997,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2006,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2006,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2006,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 2007,
											"end": 2014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1978,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1978,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 1978,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2029,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2029,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 2029,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1970,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 1970,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2117,
											"end": 2129,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 2109,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 2109,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 2080,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2248,
											"end": 2259,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2273,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2273,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2273,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 2274,
											"end": 2284,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 2301,
											"end": 2308,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2240,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2381,
											"end": 2392,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2448,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2553,
											"end": 2561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 2535,
											"end": 2561,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2561,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 2535,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2561,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 2535,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2346,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2328,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2342,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2329,
											"end": 2342,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2631,
											"end": 2638,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2618,
											"end": 2629,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "PUSH",
											"source": 14,
											"value": "8B20B21402C6CCF4B5F2E911EE605585802D96508E51890A1A317975B864DBB0"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2676,
											"end": 2684,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 2658,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 2588,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2685,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2709,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2696,
											"end": 2709,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 2696,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 519,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 695,
											"end": 727,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2077,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 1963,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2070,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2048,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2048,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2077,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2204,
											"end": 2223,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2260,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2251,
											"end": 2254,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2261,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2261,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2405,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2273,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2340,
											"end": 2344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2366,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2366,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2366,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2397,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2384,
											"end": 2398,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2398,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2398,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2405,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2405,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2519,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 2411,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 2486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2513,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2704,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 2525,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2594,
											"end": 2604,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2615,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 2615,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2615,
											"end": 2661,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 2615,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2691,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2698,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2670,
											"end": 2698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2670,
											"end": 2698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2704,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2704,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2710,
											"end": 2823,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 2710,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2710,
											"end": 2823,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2710,
											"end": 2823,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2710,
											"end": 2823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2710,
											"end": 2823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 3591,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 2859,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3007,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 3007,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3007,
											"end": 3061,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 3007,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 3077,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3163,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 3077,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3070,
											"end": 3163,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3070,
											"end": 3163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 3187,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3297,
											"end": 3298,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3301,
											"end": 3314,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3410,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 3469,
											"end": 3472,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3410,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 3410,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3410,
											"end": 3473,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 3410,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3403,
											"end": 3473,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 3403,
											"end": 3473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3549,
											"end": 3555,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3496,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3556,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3326,
											"end": 3327,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3322,
											"end": 3331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 3282,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3300,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3582,
											"end": 3585,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3585,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2983,
											"end": 3591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2983,
											"end": 3591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2983,
											"end": 3591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 3591,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 3591,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 3591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 3591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 3591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3970,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 3597,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3780,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3781,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3781,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3817,
											"end": 3837,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 3815,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3791,
											"end": 3838,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3855,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3855,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 3855,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3855,
											"end": 3963,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3855,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3847,
											"end": 3963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3847,
											"end": 3963,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3970,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3970,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 4098,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3976,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 4067,
											"end": 4072,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 4049,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4073,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 4049,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4042,
											"end": 4047,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4029,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 4029,
											"end": 4092,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4029,
											"end": 4092,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 4029,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 4098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 4098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4243,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 4104,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4195,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4166,
											"end": 4195,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4166,
											"end": 4195,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 4231,
											"end": 4236,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 4204,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4237,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 4204,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4243,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4243,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4249,
											"end": 4339,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 4249,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4283,
											"end": 4290,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4331,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4312,
											"end": 4333,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4249,
											"end": 4339,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4249,
											"end": 4339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4249,
											"end": 4339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4249,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4345,
											"end": 4461,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 4345,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 4430,
											"end": 4435,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 4415,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4436,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 4415,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4408,
											"end": 4413,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4395,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 4395,
											"end": 4455,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4395,
											"end": 4455,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 4395,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4345,
											"end": 4461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4345,
											"end": 4461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4600,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 4467,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4554,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4555,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 4564,
											"end": 4594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4600,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4600,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4698,
											"end": 4704,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4714,
											"end": 4720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4758,
											"end": 4765,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 4786,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4952,
											"end": 4974,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 4931,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 4994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5033,
											"end": 5035,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 5059,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5049,
											"end": 5112,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5049,
											"end": 5112,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5004,
											"end": 5122,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 5232,
											"end": 5239,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5212,
											"end": 5221,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 5187,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5177,
											"end": 5240,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5177,
											"end": 5240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5250,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5315,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5333,
											"end": 5355,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 5315,
											"end": 5365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5365,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 5315,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5305,
											"end": 5365,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5305,
											"end": 5365,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5260,
											"end": 5375,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5414,
											"end": 5417,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5441,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 5486,
											"end": 5493,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5466,
											"end": 5475,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5462,
											"end": 5484,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5441,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 5441,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5441,
											"end": 5494,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 5441,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5431,
											"end": 5494,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5431,
											"end": 5494,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5385,
											"end": 5504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 5511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5626,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 5517,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5598,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 5613,
											"end": 5618,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5598,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 5598,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5598,
											"end": 5619,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 5598,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5593,
											"end": 5596,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5620,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 5880,
											"end": 5889,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5975,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 5955,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 5905,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 5986,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6068,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 6136,
											"end": 6138,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6134,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6112,
											"end": 6118,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6068,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 6068,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6068,
											"end": 6140,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 6068,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6201,
											"end": 6210,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6188,
											"end": 6194,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 6150,
											"end": 6216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6216,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6150,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 6288,
											"end": 6291,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6273,
											"end": 6292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 6226,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6293,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 6226,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6303,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 6371,
											"end": 6374,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6360,
											"end": 6369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6303,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 6303,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6303,
											"end": 6376,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 6303,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 6383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6718,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 6389,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6497,
											"end": 6499,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6485,
											"end": 6494,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6483,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6495,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6468,
											"end": 6500,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 6503,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6623,
											"end": 6624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6693,
											"end": 6700,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6684,
											"end": 6690,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 6648,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6594,
											"end": 6711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6718,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6718,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6718,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6718,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6893,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 6724,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6808,
											"end": 6819,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6842,
											"end": 6848,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6837,
											"end": 6840,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6849,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6880,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6873,
											"end": 6887,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 6887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 6887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6893,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6893,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 7070,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 6899,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7062,
											"name": "PUSH",
											"source": 15,
											"value": "4C697374696E67206973206E6F74206163746976650000000000000000000000"
										},
										{
											"begin": 7035,
											"end": 7036,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7016,
											"end": 7063,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 7070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 7070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7218,
											"end": 7221,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 7303,
											"end": 7305,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 7298,
											"end": 7301,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 7239,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7232,
											"end": 7306,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7232,
											"end": 7306,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 7404,
											"end": 7407,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7315,
											"end": 7408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7433,
											"end": 7435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7431,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7424,
											"end": 7436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7417,
											"end": 7436,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7417,
											"end": 7436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7650,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7691,
											"end": 7711,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7685,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7665,
											"end": 7712,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 7729,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7721,
											"end": 7860,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7721,
											"end": 7860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7448,
											"end": 7867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7873,
											"end": 8016,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 7873,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7930,
											"end": 7935,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7955,
											"end": 7968,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7946,
											"end": 7968,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7946,
											"end": 7968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7977,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 8004,
											"end": 8009,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7977,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 7977,
											"end": 8010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7977,
											"end": 8010,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 7977,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7873,
											"end": 8016,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7873,
											"end": 8016,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7873,
											"end": 8016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7873,
											"end": 8016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7873,
											"end": 8016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8373,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 8022,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8143,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 8138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8120,
											"end": 8127,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8112,
											"end": 8144,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 8147,
											"end": 8226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 8348,
											"end": 8355,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8339,
											"end": 8345,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8328,
											"end": 8337,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8292,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 8292,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8292,
											"end": 8356,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 8292,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8282,
											"end": 8356,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8282,
											"end": 8356,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8238,
											"end": 8366,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8373,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8373,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8373,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8373,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8379,
											"end": 8606,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 8379,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8519,
											"end": 8553,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C792074686520636F6E74726163742063616E2063616E63656C20746865"
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8503,
											"end": 8517,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8496,
											"end": 8554,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8598,
											"name": "PUSH",
											"source": 15,
											"value": "206C697374696E67000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8583,
											"end": 8585,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8575,
											"end": 8581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8571,
											"end": 8586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8564,
											"end": 8599,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8379,
											"end": 8606,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8379,
											"end": 8606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8612,
											"end": 8978,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8612,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 8839,
											"end": 8841,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 8834,
											"end": 8837,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8775,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 8775,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8775,
											"end": 8842,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 8775,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8768,
											"end": 8842,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8768,
											"end": 8842,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8851,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 8940,
											"end": 8943,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8851,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 8851,
											"end": 8944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8851,
											"end": 8944,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 8851,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8969,
											"end": 8971,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 8967,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8960,
											"end": 8972,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8953,
											"end": 8972,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8953,
											"end": 8972,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8612,
											"end": 8978,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8612,
											"end": 8978,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8612,
											"end": 8978,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8612,
											"end": 8978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8984,
											"end": 9403,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 8984,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9150,
											"end": 9154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9190,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9177,
											"end": 9186,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9165,
											"end": 9191,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9165,
											"end": 9191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9237,
											"end": 9246,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 9247,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9223,
											"end": 9224,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9221,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9208,
											"end": 9225,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9201,
											"end": 9248,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 9391,
											"end": 9395,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 9265,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 9396,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 9265,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9396,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9396,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8984,
											"end": 9403,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8984,
											"end": 9403,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8984,
											"end": 9403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8984,
											"end": 9403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9558,
											"end": 9562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9596,
											"end": 9598,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9573,
											"end": 9599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9573,
											"end": 9599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9609,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9675,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9662,
											"end": 9679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9653,
											"end": 9659,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9609,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 9609,
											"end": 9680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9609,
											"end": 9680,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 9609,
											"end": 9680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 9758,
											"end": 9760,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9743,
											"end": 9761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9734,
											"end": 9740,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 9690,
											"end": 9762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9762,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 9690,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 9840,
											"end": 9842,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9829,
											"end": 9838,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9816,
											"end": 9822,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 9772,
											"end": 9844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9844,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 9772,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9409,
											"end": 9851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9857,
											"end": 10031,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 9857,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9997,
											"end": 10023,
											"name": "PUSH",
											"source": 15,
											"value": "496E636F7272656374207061796D656E7420616D6F756E740000000000000000"
										},
										{
											"begin": 9993,
											"end": 9994,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9985,
											"end": 9991,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9981,
											"end": 9995,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10024,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9857,
											"end": 10031,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9857,
											"end": 10031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10037,
											"end": 10403,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 10037,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10179,
											"end": 10182,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 10259,
											"end": 10262,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10200,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 10200,
											"end": 10267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10200,
											"end": 10267,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 10200,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10193,
											"end": 10267,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10193,
											"end": 10267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10276,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 10365,
											"end": 10368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10276,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 10276,
											"end": 10369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10276,
											"end": 10369,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 10276,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10389,
											"end": 10392,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10385,
											"end": 10397,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10397,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10037,
											"end": 10403,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10037,
											"end": 10403,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10037,
											"end": 10403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10037,
											"end": 10403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10828,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 10409,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10579,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10615,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10602,
											"end": 10611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10598,
											"end": 10616,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10590,
											"end": 10616,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10590,
											"end": 10616,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10662,
											"end": 10671,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10656,
											"end": 10660,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10652,
											"end": 10672,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10646,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10633,
											"end": 10650,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10690,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10690,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 10690,
											"end": 10821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10690,
											"end": 10821,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 10690,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10682,
											"end": 10821,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10682,
											"end": 10821,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10828,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10828,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10834,
											"end": 11014,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 10834,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10882,
											"end": 10959,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10960,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 10976,
											"end": 10977,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10969,
											"end": 10984,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11003,
											"end": 11007,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10993,
											"end": 11008,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11430,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 11020,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11060,
											"end": 11067,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 11101,
											"end": 11102,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11083,
											"end": 11103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11078,
											"end": 11103,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11078,
											"end": 11103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 11135,
											"end": 11136,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11117,
											"end": 11137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11112,
											"end": 11137,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11112,
											"end": 11137,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11172,
											"end": 11173,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11169,
											"end": 11170,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11165,
											"end": 11174,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 11194,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 11212,
											"end": 11223,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11194,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11194,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11194,
											"end": 11224,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 11194,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11183,
											"end": 11224,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11183,
											"end": 11224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11364,
											"end": 11371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11375,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11354,
											"end": 11376,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11327,
											"end": 11336,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11307,
											"end": 11390,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 11284,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 11284,
											"end": 11423,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 11403,
											"end": 11421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11284,
											"end": 11423,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 11284,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11068,
											"end": 11430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11430,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11430,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11436,
											"end": 11616,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 11436,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11484,
											"end": 11561,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11562,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11581,
											"end": 11585,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 11578,
											"end": 11579,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11605,
											"end": 11609,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11602,
											"end": 11603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11595,
											"end": 11610,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11807,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 11622,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11662,
											"end": 11663,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 11697,
											"end": 11698,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11679,
											"end": 11699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11674,
											"end": 11699,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11674,
											"end": 11699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11713,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 11731,
											"end": 11732,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11713,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11713,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11713,
											"end": 11733,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 11713,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11708,
											"end": 11733,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11708,
											"end": 11733,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11752,
											"end": 11753,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11742,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 11742,
											"end": 11777,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 11757,
											"end": 11775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11742,
											"end": 11777,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 11742,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11799,
											"end": 11800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11796,
											"end": 11797,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11792,
											"end": 11801,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11787,
											"end": 11801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11787,
											"end": 11801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11807,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11807,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 12007,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 11813,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11873,
											"end": 11893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11868,
											"end": 11893,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11868,
											"end": 11893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 11925,
											"end": 11926,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11907,
											"end": 11927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 11927,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 11907,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11927,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11951,
											"end": 11952,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11948,
											"end": 11949,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11944,
											"end": 11953,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11936,
											"end": 11953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11936,
											"end": 11953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11969,
											"end": 11973,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11966,
											"end": 11977,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11963,
											"end": 12000,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11963,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 11963,
											"end": 12000,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 11980,
											"end": 11998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11963,
											"end": 12000,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 11963,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 12007,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 12007,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 12007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 12007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 12007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12134,
											"end": 12138,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12172,
											"end": 12174,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12161,
											"end": 12170,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12157,
											"end": 12175,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12149,
											"end": 12175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12149,
											"end": 12175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 12256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12253,
											"end": 12254,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12238,
											"end": 12255,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12229,
											"end": 12235,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 12256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 12185,
											"end": 12256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 12256,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12185,
											"end": 12256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12266,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12334,
											"end": 12336,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12323,
											"end": 12332,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12319,
											"end": 12337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12310,
											"end": 12316,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12266,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 12266,
											"end": 12338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12266,
											"end": 12338,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12266,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12013,
											"end": 12345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12574,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 12351,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12491,
											"end": 12525,
											"name": "PUSH",
											"source": 15,
											"value": "50657263656E74616765206D757374206265206265747765656E203020616E64"
										},
										{
											"begin": 12487,
											"end": 12488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12475,
											"end": 12489,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12468,
											"end": 12526,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12560,
											"end": 12566,
											"name": "PUSH",
											"source": 15,
											"value": "2031303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12555,
											"end": 12557,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12547,
											"end": 12553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12543,
											"end": 12558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12567,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12722,
											"end": 12725,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 12807,
											"end": 12809,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12802,
											"end": 12805,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 12743,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12736,
											"end": 12810,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12736,
											"end": 12810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 12908,
											"end": 12911,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 12819,
											"end": 12912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 12939,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12932,
											"end": 12935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12928,
											"end": 12940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12940,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13118,
											"end": 13122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13156,
											"end": 13158,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13145,
											"end": 13154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13141,
											"end": 13159,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13133,
											"end": 13159,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13133,
											"end": 13159,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13195,
											"end": 13215,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13191,
											"end": 13192,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13189,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13176,
											"end": 13193,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13169,
											"end": 13216,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 13359,
											"end": 13363,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 13233,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13225,
											"end": 13364,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13225,
											"end": 13364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13377,
											"end": 13557,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 13377,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13425,
											"end": 13502,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13422,
											"end": 13423,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13415,
											"end": 13503,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13522,
											"end": 13526,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 13519,
											"end": 13520,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 13512,
											"end": 13527,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13546,
											"end": 13550,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13543,
											"end": 13544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13536,
											"end": 13551,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13563,
											"end": 13743,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 13563,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13611,
											"end": 13688,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13608,
											"end": 13609,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13601,
											"end": 13689,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13708,
											"end": 13712,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 13705,
											"end": 13706,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 13698,
											"end": 13713,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13732,
											"end": 13736,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13729,
											"end": 13730,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13737,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13749,
											"end": 13982,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 13749,
											"end": 13982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13791,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13811,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 13829,
											"end": 13834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13811,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 13811,
											"end": 13835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13811,
											"end": 13835,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 13811,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13857,
											"end": 13923,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13850,
											"end": 13855,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13847,
											"end": 13924,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13844,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 13844,
											"end": 13947,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 13927,
											"end": 13945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13844,
											"end": 13947,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 13844,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13974,
											"end": 13975,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13967,
											"end": 13972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13963,
											"end": 13976,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 13976,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 13976,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13749,
											"end": 13982,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13749,
											"end": 13982,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13749,
											"end": 13982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13749,
											"end": 13982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13988,
											"end": 14169,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 13988,
											"end": 14169,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14128,
											"end": 14161,
											"name": "PUSH",
											"source": 15,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 14124,
											"end": 14125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14116,
											"end": 14122,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14105,
											"end": 14162,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13988,
											"end": 14169,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13988,
											"end": 14169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14175,
											"end": 14541,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 14175,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14317,
											"end": 14320,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14338,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 14402,
											"end": 14404,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 14397,
											"end": 14400,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14338,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 14338,
											"end": 14405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14338,
											"end": 14405,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 14338,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14331,
											"end": 14405,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14331,
											"end": 14405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14414,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 14503,
											"end": 14506,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14414,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 14414,
											"end": 14507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14414,
											"end": 14507,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 14414,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14532,
											"end": 14534,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14527,
											"end": 14530,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14516,
											"end": 14535,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14516,
											"end": 14535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14175,
											"end": 14541,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14175,
											"end": 14541,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14175,
											"end": 14541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14175,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14966,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 14547,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14713,
											"end": 14717,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14751,
											"end": 14753,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14740,
											"end": 14749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14728,
											"end": 14754,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14728,
											"end": 14754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14800,
											"end": 14809,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14794,
											"end": 14798,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14790,
											"end": 14810,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14786,
											"end": 14787,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14775,
											"end": 14784,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14771,
											"end": 14788,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14764,
											"end": 14811,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 14954,
											"end": 14958,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 14828,
											"end": 14959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14959,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 14828,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14820,
											"end": 14959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14820,
											"end": 14959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14966,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14966,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14966,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14972,
											"end": 15194,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 14972,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15112,
											"end": 15146,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C79204E4654206F776E65722063616E206372656174652061206C697374"
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15100,
											"end": 15106,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15096,
											"end": 15110,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15089,
											"end": 15147,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15181,
											"end": 15186,
											"name": "PUSH",
											"source": 15,
											"value": "696E670000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15176,
											"end": 15178,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15168,
											"end": 15174,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15164,
											"end": 15179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15157,
											"end": 15187,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14972,
											"end": 15194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14972,
											"end": 15194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15566,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 15200,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15342,
											"end": 15345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15363,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 15427,
											"end": 15429,
											"name": "PUSH",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 15422,
											"end": 15425,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15363,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 15363,
											"end": 15430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15363,
											"end": 15430,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 15363,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15356,
											"end": 15430,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15356,
											"end": 15430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15439,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 15528,
											"end": 15531,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15439,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 15439,
											"end": 15532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15439,
											"end": 15532,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 15439,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15552,
											"end": 15555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15548,
											"end": 15560,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15541,
											"end": 15560,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15541,
											"end": 15560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15566,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15566,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15200,
											"end": 15566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15991,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 15572,
											"end": 15991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15738,
											"end": 15742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15778,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15765,
											"end": 15774,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15761,
											"end": 15779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15753,
											"end": 15779,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15753,
											"end": 15779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15825,
											"end": 15834,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15819,
											"end": 15823,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15815,
											"end": 15835,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15811,
											"end": 15812,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15809,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15796,
											"end": 15813,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15789,
											"end": 15836,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15853,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 15979,
											"end": 15983,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15853,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 15853,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15853,
											"end": 15984,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 15853,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15845,
											"end": 15984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15845,
											"end": 15984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15997,
											"end": 16226,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 15997,
											"end": 16226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "PUSH",
											"source": 15,
											"value": "41756374696F6E206475726174696F6E206D7573742062652067726561746572"
										},
										{
											"begin": 16133,
											"end": 16134,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16131,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16121,
											"end": 16135,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16114,
											"end": 16172,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16206,
											"end": 16218,
											"name": "PUSH",
											"source": 15,
											"value": "207468616E207A65726F00000000000000000000000000000000000000000000"
										},
										{
											"begin": 16201,
											"end": 16203,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16193,
											"end": 16199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16189,
											"end": 16204,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16182,
											"end": 16219,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15997,
											"end": 16226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15997,
											"end": 16226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16598,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 16232,
											"end": 16598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16374,
											"end": 16377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16395,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 16459,
											"end": 16461,
											"name": "PUSH",
											"source": 15,
											"value": "2A"
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16395,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 16395,
											"end": 16462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16395,
											"end": 16462,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 16395,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16388,
											"end": 16462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16388,
											"end": 16462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16471,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 16560,
											"end": 16563,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16471,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 16471,
											"end": 16564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16471,
											"end": 16564,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 16471,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16589,
											"end": 16591,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16584,
											"end": 16587,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16580,
											"end": 16592,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16573,
											"end": 16592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16573,
											"end": 16592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16598,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16598,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16598,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 17023,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 16604,
											"end": 17023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16770,
											"end": 16774,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16808,
											"end": 16810,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16797,
											"end": 16806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16785,
											"end": 16811,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16785,
											"end": 16811,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16857,
											"end": 16866,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16851,
											"end": 16855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16847,
											"end": 16867,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16843,
											"end": 16844,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16832,
											"end": 16841,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16828,
											"end": 16845,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16821,
											"end": 16868,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16885,
											"end": 17016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 17011,
											"end": 17015,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16885,
											"end": 17016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 16885,
											"end": 17016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16885,
											"end": 17016,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 16885,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 17016,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 17016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 17023,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 17023,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 17023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 17023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17220,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 17029,
											"end": 17220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17069,
											"end": 17072,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17088,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 17106,
											"end": 17107,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17088,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 17088,
											"end": 17108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17088,
											"end": 17108,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 17088,
											"end": 17108,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17083,
											"end": 17108,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17083,
											"end": 17108,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17122,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 17140,
											"end": 17141,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17122,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 17122,
											"end": 17142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17122,
											"end": 17142,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 17122,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17117,
											"end": 17142,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17117,
											"end": 17142,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17165,
											"end": 17166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17162,
											"end": 17163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17158,
											"end": 17167,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17151,
											"end": 17167,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17151,
											"end": 17167,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17186,
											"end": 17189,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17183,
											"end": 17184,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17180,
											"end": 17190,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17177,
											"end": 17213,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17177,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 17177,
											"end": 17213,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 17193,
											"end": 17211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17177,
											"end": 17213,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 17177,
											"end": 17213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17220,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17397,
											"end": 17401,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 17424,
											"end": 17433,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17420,
											"end": 17439,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17412,
											"end": 17439,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17412,
											"end": 17439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17449,
											"end": 17520,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 17517,
											"end": 17518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17506,
											"end": 17515,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17502,
											"end": 17519,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17493,
											"end": 17499,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17449,
											"end": 17520,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 17449,
											"end": 17520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17449,
											"end": 17520,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 17449,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17530,
											"end": 17602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 17598,
											"end": 17600,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17587,
											"end": 17596,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17583,
											"end": 17601,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17574,
											"end": 17580,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17530,
											"end": 17602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 17530,
											"end": 17602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17530,
											"end": 17602,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 17530,
											"end": 17602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17612,
											"end": 17678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 17674,
											"end": 17676,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17663,
											"end": 17672,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17659,
											"end": 17677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17650,
											"end": 17656,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17612,
											"end": 17678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 17612,
											"end": 17678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17612,
											"end": 17678,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 17612,
											"end": 17678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17688,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 17756,
											"end": 17758,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 17745,
											"end": 17754,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17732,
											"end": 17738,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17688,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 17688,
											"end": 17760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17688,
											"end": 17760,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 17688,
											"end": 17760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17226,
											"end": 17767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-contracts-master/contracts/access/Ownable.sol",
								"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts-master/contracts/utils/Context.sol",
								"openzeppelin-contracts-master/contracts/utils/Strings.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts-master/contracts/utils/math/Math.sol",
								"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol",
								"openzeppelin-contracts-master/gota.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyListing(uint256)": "4884f459",
							"cancelListing(uint256)": "305a67a8",
							"createListing(address,uint256,uint256,bool,uint256)": "d9194bb2",
							"getActiveListings()": "87c35bc0",
							"listings(uint256)": "de74e57b",
							"nextListingId()": "aaccf1ec",
							"owner()": "8da5cb5b",
							"platformFeePercentage()": "cdd78cfc",
							"platformFeeWallet()": "e20fc118",
							"renounceOwnership()": "715018a6",
							"royaltiesFeePercentage()": "1a5d63db",
							"royaltiesFeeWallet()": "0d08a3a0",
							"setPlatformFeePercentage(uint256)": "8333903e",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltiesFeeWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"ListingCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAuction\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"}],\"name\":\"ListingCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPercentage\",\"type\":\"uint256\"}],\"name\":\"PlatformFeePercentageUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"buyListing\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAuction\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveListings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAuction\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextListingId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltiesFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltiesFeeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPercentage\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-master/gota.sol\":\"NFTMarketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"openzeppelin-contracts-master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"openzeppelin-contracts-master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"openzeppelin-contracts-master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"openzeppelin-contracts-master/gota.sol\":{\"keccak256\":\"0x3006505f591def8d86342db0d515a32779c1e284e7e961edfd83c49270f8615c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2cd6e2a2806b3703d834cbd2b37b4e177374c6cb48eca2254472ebf8633201\",\"dweb:/ipfs/QmWNYi4sF4ZBTc7jK9YHHDPM2PhsGLxXwpTMQG6fWjyQEi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3369,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "listings",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Listing)3364_storage)"
							},
							{
								"astId": 3371,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "nextListingId",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 3374,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "platformFeePercentage",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 3377,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "royaltiesFeePercentage",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 3379,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "platformFeeWallet",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 3381,
								"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
								"label": "royaltiesFeeWallet",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Listing)3364_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)3364_storage"
							},
							"t_struct(Listing)3364_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.Listing",
								"members": [
									{
										"astId": 3353,
										"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
										"label": "nftContract",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3355,
										"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3357,
										"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3359,
										"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
										"label": "isAuction",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 3361,
										"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
										"label": "isActive",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 3363,
										"contract": "openzeppelin-contracts-master/gota.sol:NFTMarketplace",
										"label": "expiresAt",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"openzeppelin-contracts-master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1894
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1895,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1894,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1894,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1894
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1894
						],
						"ERC165": [
							2173
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							2185
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1872
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							2149
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1873,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1872,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1895,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1894,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 2150,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2149,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 2174,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2185,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2173,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1894,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2173,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1872,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1872,
								1410,
								2173,
								2185,
								1894
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2149,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2172,
										2184
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1872_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1872_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1872",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2172,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2173,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2185,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1857
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1863
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1871
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1962,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10008:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10022:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10018:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10040:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10054:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10114:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10146:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10138:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10184:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10180:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10213:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10227:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9970:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:2"
									},
									"scope": 1293,
									"src": "9955:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10690:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10710:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10700:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10652:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:2"
									},
									"scope": 1293,
									"src": "10633:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11038:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11115:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11124:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11076:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:2"
									},
									"scope": 1293,
									"src": "10954:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11503:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11513:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11587:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11620:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11664:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11634:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:2"
									},
									"scope": 1293,
									"src": "11462:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12084:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12098:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12094:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12116:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12130:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12190:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12222:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12260:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12362:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12358:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12385:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12427:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12433:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12442:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12399:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12256:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12289:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12333:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12303:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1293,
									"src": "12013:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13481:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13491:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13443:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:2"
									},
									"scope": 1293,
									"src": "13406:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13873:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13899:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13883:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13808:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:2"
									},
									"scope": 1293,
									"src": "13771:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14488:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14498:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:2"
									},
									"scope": 1293,
									"src": "14418:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14814:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14880:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14876:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14913:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14927:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14957:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14943:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15093:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15115:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15124:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15150:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15157:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15133:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15089:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15164:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15211:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15245:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15260:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15292:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15299:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15303:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15283:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15373:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14738:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:2"
									},
									"scope": 1293,
									"src": "14720:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15684:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15694:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15722:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15765:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15736:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15794:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15813:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15820:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15832:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15877:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15855:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15850:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15634:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:2"
									},
									"scope": 1293,
									"src": "15591:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16210:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16220:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16245:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16267:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16263:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16288:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16302:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16367:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16360:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16161:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16201:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:2"
									},
									"scope": 1293,
									"src": "16138:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17020:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17030:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17054:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17168:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17190:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17200:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17200:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17186:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17243:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17294:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17153:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:2"
																	},
																	"src": "17144:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17359:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17381:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17480:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:2",
																								"nodeType": "YulBlock",
																								"src": "17566:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:2"
																													},
																													"nativeSrc": "17599:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:2"
																													},
																													"nativeSrc": "17616:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:2"
																											},
																											"nativeSrc": "17592:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:2"
																										},
																										"nativeSrc": "17592:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17377:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17401:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17452:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17338:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:2"
																	},
																	"src": "17331:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "17109:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17123:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17129:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17138:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17088:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17072:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17072:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17068:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16964:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16976:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16993:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:2"
									},
									"scope": 1293,
									"src": "16918:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16926:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17596:2"
				},
				"id": 2
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2185
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 2186,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2185,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2185,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								2185
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1293
						],
						"ERC721Enumerable": [
							1812
						],
						"IERC165": [
							2185
						],
						"IERC721Enumerable": [
							1844
						]
					},
					"id": 1813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:5"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1294,
							"src": "154:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "162:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1845,
							"src": "192:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1433,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1844,
										"src": "200:17:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 2174,
							"src": "251:64:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1435,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2185,
										"src": "259:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1438,
										"name": "ERC721",
										"nameLocations": [
											"746:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "746:6:5"
									},
									"id": 1439,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:5"
								},
								{
									"baseName": {
										"id": 1440,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1844,
										"src": "754:17:5"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:5"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1437,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:5",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1812,
							"linearizedBaseContracts": [
								1812,
								1844,
								1293,
								237,
								1872,
								1410,
								2173,
								2185,
								1894
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1447,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "778:80:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1446,
										"keyName": "owner",
										"keyNameLocation": "794:5:5",
										"keyType": {
											"id": 1442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1445,
											"keyName": "index",
											"keyNameLocation": "819:5:5",
											"keyType": {
												"id": 1443,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1444,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1451,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "864:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1450,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:5",
										"keyType": {
											"id": 1448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1449,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1454,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "932:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1452,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1453,
										"nodeType": "ArrayTypeName",
										"src": "932:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1458,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "966:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1457,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:5",
										"keyType": {
											"id": 1455,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1456,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:5",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1465,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1249:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:5"
									},
									"src": "1205:59:5"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:5",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1468,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:5"
									},
									"src": "1325:43:5"
								},
								{
									"baseFunctions": [
										385,
										2184
									],
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1543:114:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1479,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "1560:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1481,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "1580:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1844_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1844_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1480,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1844",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:5",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1487,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "1638:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1485,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1812_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 385,
															"src": "1614:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1490,
												"nodeType": "Return",
												"src": "1553:97:5"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1475,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1473,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2185,
												"src": "1511:7:5"
											},
											{
												"id": 1474,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "1520:6:5"
											}
										],
										"src": "1502:25:5"
									},
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1462:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:5"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1537:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:5"
									},
									"scope": 1812,
									"src": "1435:222:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1835
									],
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "1833:158:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1502,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "1847:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "1866:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1503,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1856:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "1843:99:5",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "1874:68:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1508,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "1918:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1509,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "1925:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1507,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "1895:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "RevertStatement",
															"src": "1888:43:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1514,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "1958:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1516,
														"indexExpression": {
															"id": 1515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "1971:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1518,
													"indexExpression": {
														"id": 1517,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "1978:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1519,
												"nodeType": "Return",
												"src": "1951:33:5"
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:5",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1765:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1780:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:5"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1824:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:5"
									},
									"scope": 1812,
									"src": "1736:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1825
									],
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "2123:41:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1527,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "2140:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1529,
												"nodeType": "Return",
												"src": "2133:24:5"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:5",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:5"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2114:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:5"
									},
									"scope": 1812,
									"src": "2062:102:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1843
									],
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "2311:151:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1539,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2325:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1540,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "2334:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "2321:101:5",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "2349:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1544,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1548,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "2405:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1543,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "2370:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "RevertStatement",
															"src": "2363:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1553,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "2438:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1555,
													"indexExpression": {
														"id": 1554,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2449:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1556,
												"nodeType": "Return",
												"src": "2431:24:5"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:5",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2258:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:5"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2302:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:5"
									},
									"scope": 1812,
									"src": "2236:226:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										850
									],
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "2622:521:5",
										"statements": [
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "2632:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1571,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"arguments": [
														{
															"id": 1575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2670:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1576,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2674:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1577,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "2683:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1573,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1812_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "2656:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1580,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "2703:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1591,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "2807:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1592,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2824:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1600,
													"nodeType": "IfStatement",
													"src": "2803:106:5",
													"trueBody": {
														"id": 1599,
														"nodeType": "Block",
														"src": "2828:81:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1595,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "2875:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1596,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "2890:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1594,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "2842:32:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1598,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:5"
															}
														]
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2699:210:5",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "2732:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1587,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "2778:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1586,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "2746:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1589,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1602,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "2922:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1603,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1613,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "3020:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "3037:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1622,
													"nodeType": "IfStatement",
													"src": "3016:90:5",
													"trueBody": {
														"id": 1621,
														"nodeType": "Block",
														"src": "3041:65:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1617,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "3083:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1618,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "3087:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1616,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "3055:27:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1620,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:5"
															}
														]
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "2918:188:5",
												"trueBody": {
													"id": 1612,
													"nodeType": "Block",
													"src": "2940:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1609,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "2991:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1608,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "2954:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1611,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1624,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1572,
													"src": "3123:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1625,
												"nodeType": "Return",
												"src": "3116:20:5"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:5",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1567,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:5"
									},
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2535:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2547:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2564:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:5"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2613:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:5"
									},
									"scope": 1812,
									"src": "2518:625:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "3511:140:5",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1657,
														"src": "3521:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1642,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1638,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "3548:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1637,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3538:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:5"
											},
											{
												"expression": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1643,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "3565:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1646,
															"indexExpression": {
																"id": 1644,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "3578:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1647,
														"indexExpression": {
															"id": 1645,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3582:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1648,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "3592:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:5"
											},
											{
												"expression": {
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1651,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3609:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1653,
														"indexExpression": {
															"id": 1652,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "3627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1654,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "3638:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:5"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:5",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3474:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3486:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:5"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:5"
									},
									"scope": 1812,
									"src": "3437:214:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "3912:95:5",
										"statements": [
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1664,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "3922:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1666,
														"indexExpression": {
															"id": 1665,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1667,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "3949:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1674,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "3992:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1671,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "3976:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:5"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:5",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "3887:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:5"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:5"
									},
									"scope": 1812,
									"src": "3846:161:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "4705:878:5",
										"statements": [
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "4886:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"arguments": [
														{
															"id": 1689,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "4921:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1688,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "4911:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:5"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "4936:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"initialValue": {
													"baseExpression": {
														"id": 1694,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "4957:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1696,
													"indexExpression": {
														"id": 1695,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "4975:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "5087:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1699,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "5101:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "5083:323:5",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "5117:289:5",
													"statements": [
														{
															"assignments": [
																1702
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1702,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1723,
																	"src": "5131:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1701,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1708,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1703,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5153:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1705,
																	"indexExpression": {
																		"id": 1704,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "5166:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1707,
																"indexExpression": {
																	"id": 1706,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "5172:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:5"
														},
														{
															"expression": {
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1709,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "5202:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1712,
																		"indexExpression": {
																			"id": 1710,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1681,
																			"src": "5215:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1713,
																	"indexExpression": {
																		"id": 1711,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "5221:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1714,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "5235:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1716,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:5"
														},
														{
															"expression": {
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1717,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "5318:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1719,
																	"indexExpression": {
																		"id": 1718,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "5336:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1720,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "5351:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:5",
													"subExpression": {
														"baseExpression": {
															"id": 1725,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "5499:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1727,
														"indexExpression": {
															"id": 1726,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "5517:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:5"
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:5",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1730,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5542:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1732,
															"indexExpression": {
																"id": 1731,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "5555:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1734,
														"indexExpression": {
															"id": 1733,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "5561:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:5"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:5",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4666:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4680:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:5"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:5"
									},
									"scope": 1812,
									"src": "4624:959:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "5942:990:5",
										"statements": [
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "6120:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1746,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6145:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:5"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "6176:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"baseExpression": {
														"id": 1753,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "6197:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1755,
													"indexExpression": {
														"id": 1754,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "6213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:5"
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "6543:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"baseExpression": {
														"id": 1759,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "6565:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1761,
													"indexExpression": {
														"id": 1760,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "6576:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:5"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1763,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6602:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1765,
														"indexExpression": {
															"id": 1764,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "6613:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1766,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "6627:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:5"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1769,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6706:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1771,
														"indexExpression": {
															"id": 1770,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "6722:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1772,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "6737:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:5"
											},
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:5",
													"subExpression": {
														"baseExpression": {
															"id": 1775,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6875:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1777,
														"indexExpression": {
															"id": 1776,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "6891:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1780,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6909:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:5",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:5"
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:5",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "5917:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:5"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:5"
									},
									"scope": 1812,
									"src": "5871:1061:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										760
									],
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "7134:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "7148:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1802,
												"nodeType": "IfStatement",
												"src": "7144:84:5",
												"trueBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "7160:68:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1798,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "7181:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1800,
															"nodeType": "RevertStatement",
															"src": "7174:43:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7260:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "7269:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1803,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1812_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:5",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "7237:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:5"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:5",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1793,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:5"
									},
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "7075:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "7092:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1790,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:5"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:5"
									},
									"scope": 1812,
									"src": "7049:234:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1813,
							"src": "708:6577:5",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1465,
								1468
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "128:7158:5"
				},
				"id": 5
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Enumerable": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:6"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1411,
							"src": "155:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1815,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "163:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1818,
										"name": "IERC721",
										"nameLocations": [
											"364:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "364:7:6"
									},
									"id": 1819,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1817,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								1410,
								2185
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:6"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "511:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:6"
									},
									"scope": 1844,
									"src": "465:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "731:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "746:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:6"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:6"
									},
									"scope": 1844,
									"src": "702:91:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "990:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:6"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "1028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:6"
									},
									"scope": 1844,
									"src": "968:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1845,
							"src": "333:706:6",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "129:911:6"
				},
				"id": 6
			},
			"openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1872
						]
					},
					"id": 1873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:7"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 1411,
							"src": "153:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1847,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1850,
										"name": "IERC721",
										"nameLocations": [
											"357:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:7"
									},
									"id": 1851,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1849,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1872,
							"linearizedBaseContracts": [
								1872,
								1410,
								2185
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:7"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:7"
									},
									"scope": 1872,
									"src": "434:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:7"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "600:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:7"
									},
									"scope": 1872,
									"src": "559:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:7"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:7"
									},
									"scope": 1872,
									"src": "716:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1873,
							"src": "328:463:7",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:7"
				},
				"id": 7
			},
			"openzeppelin-contracts-master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1894
						]
					},
					"id": 1895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1875,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1894,
							"linearizedBaseContracts": [
								1894
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1880,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1882,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1894,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1889,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1891,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1894,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1895,
							"src": "624:235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:8"
				},
				"id": 8
			},
			"openzeppelin-contracts-master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3239
						],
						"SignedMath": [
							3344
						],
						"Strings": [
							2149
						]
					},
					"id": 2150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1896,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2150,
							"sourceUnit": 3240,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1897,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3239,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1900,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2150,
							"sourceUnit": 3345,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1899,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3344,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1901,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2149,
							"linearizedBaseContracts": [
								2149
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1904,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2149,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1902,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1903,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1907,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2149,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1905,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1906,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1914,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1960,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1923
														],
														"declarations": [
															{
																"constant": false,
																"id": 1923,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1960,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1930,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1926,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1924,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3239,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3239_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3059,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1932
														],
														"declarations": [
															{
																"constant": false,
																"id": 1932,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1960,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1931,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1937,
														"initialValue": {
															"arguments": [
																{
																	"id": 1935,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1933,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1939
														],
														"declarations": [
															{
																"constant": false,
																"id": 1939,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1960,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1938,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1940,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1932,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1923,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1939,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1941,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1956,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1943,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1945,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1904,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1939,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1917,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1946,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1947,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1917,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1950,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1951,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1917,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1955,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1954,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1957,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1958,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1921,
														"id": 1959,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 2149,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1973,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1980,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3344,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3344_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3343,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1979,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1970,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1986,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1964,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 2149,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 2006,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1997,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1991,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2000,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1991,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1998,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3239,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3239_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3181,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1996,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2008,
																	2091,
																	2111
																],
																"referencedDeclaration": 2091,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1995,
														"id": 2005,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1993,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 2149,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													2019
												],
												"declarations": [
													{
														"constant": false,
														"id": 2019,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2021,
												"initialValue": {
													"id": 2020,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2011,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													2023
												],
												"declarations": [
													{
														"constant": false,
														"id": 2023,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2022,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2032,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2027,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2024,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2033,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2035,
														"indexExpression": {
															"hexValue": "30",
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2039,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2041,
														"indexExpression": {
															"hexValue": "31",
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 2073,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2059,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2061,
																	"indexExpression": {
																		"id": 2060,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2062,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2066,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2063,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2019,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2068,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2069,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2072,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2053,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"initializationExpression": {
													"assignments": [
														2046
													],
													"declarations": [
														{
															"constant": false,
															"id": 2046,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2074,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2045,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2052,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2048,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 2056,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2058,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2075,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2084,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 2083,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2079,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2080,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2078,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2082,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2087,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2085,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2017,
												"id": 2089,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 2149,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2104,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2102,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2107,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2099,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2008,
															2091,
															2111
														],
														"referencedDeclaration": 2091,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2098,
												"id": 2109,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2096,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 2149,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2123,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2114,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2121,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2128,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2126,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2135,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2114,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2133,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2132,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2141,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2116,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2139,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2138,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2146,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 2149,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2150,
							"src": "251:2847:9",
							"usedErrors": [
								1914
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2173
						],
						"IERC165": [
							2185
						]
					},
					"id": 2174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2174,
							"sourceUnit": 2186,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2185,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2155,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2185,
										"src": "687:7:10"
									},
									"id": 2156,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2154,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2173,
							"linearizedBaseContracts": [
								2173,
								2185
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2184
									],
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2164,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2166,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2185,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2185_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2185_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2165,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2185",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2163,
												"id": 2170,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 2173,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2174,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2185
						]
					},
					"id": 2186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2176,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2185,
							"linearizedBaseContracts": [
								2185
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2177,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2178,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 2185,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2186,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"openzeppelin-contracts-master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3239
						]
					},
					"id": 3240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2188,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3239,
							"linearizedBaseContracts": [
								3239
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2191,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2196,
									"members": [
										{
											"id": 2192,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2193,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2194,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2195,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2226,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2209
														],
														"declarations": [
															{
																"constant": false,
																"id": 2209,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2226,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2208,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2213,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2210,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2211,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2214,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2215,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2221,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2219,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2207,
															"id": 2220,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2224,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2207,
														"id": 2225,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3239,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2254,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2233,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2241,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2239,
															"id": 2246,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2250,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2252,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2239,
														"id": 2253,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3239,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2296,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2268,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2275,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2267,
															"id": 2274,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2277
														],
														"declarations": [
															{
																"constant": false,
																"id": 2277,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2296,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2276,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2281,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2282,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2283,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2285,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2291,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2289,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2267,
															"id": 2290,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2293,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2294,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2267,
														"id": 2295,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3239,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2324,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2317,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2315,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2309,
															"id": 2316,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2319,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2320,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2303,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2322,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2309,
														"id": 2323,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3239,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2353,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2352,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2345,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2343,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2337,
															"id": 2344,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2347,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2348,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2350,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2337,
														"id": 2351,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3239,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2371,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2364,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2365,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2368,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2367,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2363,
												"id": 2370,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2355,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3239,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2382,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2383,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2386,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2385,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2381,
												"id": 2388,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3239,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2400,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2401,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2403,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2404,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2393,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2405,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2395,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2407,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2399,
												"id": 2411,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3239,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2446,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2423,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2431,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2430,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2426,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2416,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2427,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2422,
															"id": 2429,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2432,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2436,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2439,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2422,
												"id": 2445,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3239,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2572,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2571,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2460
														],
														"declarations": [
															{
																"constant": false,
																"id": 2460,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2571,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2459,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2464,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2461,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2462,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2452,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2466
														],
														"declarations": [
															{
																"constant": false,
																"id": 2466,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2571,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2465,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2467,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2450,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2468,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2469,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2466,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2477,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2476,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2472,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2473,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2458,
																	"id": 2475,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2478,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2479,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2466,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2485,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2484,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2481,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2191,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2483,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2487
														],
														"declarations": [
															{
																"constant": false,
																"id": 2487,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2571,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2486,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2488,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2454,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2466,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2487,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2487,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2487,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2450,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2452,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2489,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2491
														],
														"declarations": [
															{
																"constant": false,
																"id": 2491,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2571,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2498,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2492,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2494,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2454,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2454,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2499,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2500,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2460,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2501,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2502,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2505,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2507
														],
														"declarations": [
															{
																"constant": false,
																"id": 2507,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2571,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2509,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2511,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2515,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2517,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2518,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2522,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2523,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2525,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2526,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2530,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2531,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2533,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2534,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2538,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2539,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2541,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2542,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2546,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2547,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2549,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2550,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2554,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2555,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2557,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2558,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2562,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2563,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2457,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2564,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2460,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2565,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2568,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2569,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2458,
														"id": 2570,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3239,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2589
												],
												"declarations": [
													{
														"constant": false,
														"id": 2589,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2615,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2595,
												"initialValue": {
													"arguments": [
														{
															"id": 2591,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2592,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2593,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2590,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2573,
															2616
														],
														"referencedDeclaration": 2573,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2597,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2583,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2196",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2196",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2596,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3238,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2196_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2600,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2576,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2601,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2602,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2599,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2612,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2611,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2607,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2610,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2613,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2589,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2587,
												"id": 2614,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2581,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2196,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3239,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2624,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2630,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2629,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2623,
															"id": 2628,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2632
												],
												"declarations": [
													{
														"constant": false,
														"id": 2632,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2635,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2634,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2895,
																			2930
																		],
																		"referencedDeclaration": 2895,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2639,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2726,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2642,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2643,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2644,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2645,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2648,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2652,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2653,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2654,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2655,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2656,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2659,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2663,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2664,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2665,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2666,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2667,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2670,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2674,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2675,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2676,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2677,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2678,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2681,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2685,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2686,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2687,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2688,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2689,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2692,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2696,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2697,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2698,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2699,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2700,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2703,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2707,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2708,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2709,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2710,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2711,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2714,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2718,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2720,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2721,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2722,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2632,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2719,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2623,
														"id": 2725,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3239,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2762,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2761,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2740
														],
														"declarations": [
															{
																"constant": false,
																"id": 2740,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2761,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2744,
														"initialValue": {
															"arguments": [
																{
																	"id": 2742,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2741,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2728,
																	2763
																],
																"referencedDeclaration": 2728,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2745,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2740,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2747,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2734,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2746,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2196_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2749,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2740,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2750,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2740,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2752,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2731,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2758,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2738,
														"id": 2760,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2732,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2196,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3239,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2772
												],
												"declarations": [
													{
														"constant": false,
														"id": 2772,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2894,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2774,
												"initialValue": {
													"hexValue": "30",
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2891,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2789,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2788,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2780,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2783,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2784,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2787,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2790,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2804,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2803,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2798,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2805,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2819,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2818,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2810,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2813,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2814,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2817,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2820,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2834,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2833,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2828,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2829,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2835,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2849,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2848,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2840,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2843,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2844,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2847,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2850,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2864,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2863,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2862,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2865,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2879,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2878,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2870,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2873,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2874,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2877,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2880,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2890,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2889,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2885,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2892,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2772,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2770,
												"id": 2893,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3239,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2929,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2928,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2907
														],
														"declarations": [
															{
																"constant": false,
																"id": 2907,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2928,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2906,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2911,
														"initialValue": {
															"arguments": [
																{
																	"id": 2909,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2908,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2895,
																	2930
																],
																"referencedDeclaration": 2895,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2912,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2907,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2914,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2901,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2913,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2196_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2918,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2917,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2907,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2919,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2898,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2905,
														"id": 2927,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2900,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2899,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2196,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3239,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3058,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2939
												],
												"declarations": [
													{
														"constant": false,
														"id": 2939,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3058,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2938,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2941,
												"initialValue": {
													"hexValue": "30",
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 3055,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2942,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2958,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2957,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2947,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2952,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2953,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2956,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2975,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2974,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2964,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2969,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2970,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2973,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2976,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2992,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2991,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2981,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2986,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2987,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2990,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2993,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3009,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 3008,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2998,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3003,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 3006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3004,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3007,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3010,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3026,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 3025,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3015,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 3023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3021,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3024,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3027,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3043,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 3042,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3032,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3037,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3038,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3041,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3044,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3054,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 3053,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3049,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3052,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3056,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2939,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2937,
												"id": 3057,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2931,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3239,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 3092,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															3071
														],
														"declarations": [
															{
																"constant": false,
																"id": 3071,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3092,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3070,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3075,
														"initialValue": {
															"arguments": [
																{
																	"id": 3073,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3062,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3072,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3059,
																	3094
																],
																"referencedDeclaration": 3059,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3076,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3071,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3078,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3065,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3077,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2196_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3082,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3080,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3081,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3071,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3083,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3089,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3069,
														"id": 3091,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3060,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3064,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3063,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2196,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3239,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													3103
												],
												"declarations": [
													{
														"constant": false,
														"id": 3103,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3105,
												"initialValue": {
													"hexValue": "30",
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3177,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3097,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3120,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 3119,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3111,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3114,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 3117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3115,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3103,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3118,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3121,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3097,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3135,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 3134,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3129,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 3132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3130,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3103,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3133,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3136,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3097,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3150,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3149,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3141,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3144,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3145,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3103,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3148,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3151,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3097,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3165,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3164,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3156,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3159,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3160,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3103,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3163,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3097,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3176,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3175,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3171,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3103,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3174,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3178,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3103,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3179,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3239,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3218,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3217,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3193
														],
														"declarations": [
															{
																"constant": false,
																"id": 3193,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3217,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3192,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3197,
														"initialValue": {
															"arguments": [
																{
																	"id": 3195,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3194,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3181,
																	3219
																],
																"referencedDeclaration": 3181,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3198,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3193,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3200,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3187,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2196",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3199,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2196_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3207,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3202,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3205,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3203,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3193,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3204,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3206,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3208,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3184,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3191,
														"id": 3216,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3182,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3219,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3219,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3185,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2196,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3219,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3239,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3237,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3230,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3223,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2196",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2196",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3228,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3227,
												"id": 3236,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3220,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3221,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2196,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2196,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3239,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3240,
							"src": "203:14914:12",
							"usedErrors": [
								2191
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3344
						]
					},
					"id": 3345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3242,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3344,
							"linearizedBaseContracts": [
								3344
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3259,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3252,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3245,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3253,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3247,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3247,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3245,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3251,
												"id": 3258,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3243,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3244,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3246,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3249,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3344,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3277,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3270,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3263,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3271,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3274,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3265,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3273,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3263,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3269,
												"id": 3276,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3261,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3262,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3264,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3267,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3344,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3321,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3289
												],
												"declarations": [
													{
														"constant": false,
														"id": 3289,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3321,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3288,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3302,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3290,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3281,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3291,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3283,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3293,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3294,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3281,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3295,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3283,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3297,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3300,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3303,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3289,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3308,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3289,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3306,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3304,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3313,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3281,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3314,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3283,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3316,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3318,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3287,
												"id": 3320,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3279,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3280,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3282,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3285,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3344,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3342,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3341,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3332,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3336,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3335,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3325,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3329,
														"id": 3340,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3323,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3324,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3344,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3345,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"openzeppelin-contracts-master/gota.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts-master/gota.sol",
					"exportedSymbols": {
						"Context": [
							1894
						],
						"ERC721": [
							1293
						],
						"ERC721Enumerable": [
							1812
						],
						"IERC165": [
							2185
						],
						"IERC721": [
							1410
						],
						"IERC721Enumerable": [
							1844
						],
						"NFTMarketplace": [
							3833
						],
						"Ownable": [
							147
						]
					},
					"id": 3834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
							"file": "openzeppelin-contracts-master/contracts/token/ERC721/IERC721.sol",
							"id": 3347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3834,
							"sourceUnit": 1411,
							"src": "58:74:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "openzeppelin-contracts-master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3348,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3834,
							"sourceUnit": 1813,
							"src": "133:94:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts-master/contracts/access/Ownable.sol",
							"file": "openzeppelin-contracts-master/contracts/access/Ownable.sol",
							"id": 3349,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3834,
							"sourceUnit": 148,
							"src": "228:68:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3350,
										"name": "Ownable",
										"nameLocations": [
											"326:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "326:7:14"
									},
									"id": 3351,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:14"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3833,
							"linearizedBaseContracts": [
								3833,
								147,
								1894
							],
							"name": "NFTMarketplace",
							"nameLocation": "308:14:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "NFTMarketplace.Listing",
									"id": 3364,
									"members": [
										{
											"constant": false,
											"id": 3353,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "373:11:14",
											"nodeType": "VariableDeclaration",
											"scope": 3364,
											"src": "365:19:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3352,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "365:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3355,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "402:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 3364,
											"src": "394:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3354,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "394:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3357,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "427:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 3364,
											"src": "419:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "419:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3359,
											"mutability": "mutable",
											"name": "isAuction",
											"nameLocation": "447:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 3364,
											"src": "442:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3358,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "442:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3361,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "471:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 3364,
											"src": "466:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3360,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "466:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3363,
											"mutability": "mutable",
											"name": "expiresAt",
											"nameLocation": "497:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 3364,
											"src": "489:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "489:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "347:7:14",
									"nodeType": "StructDefinition",
									"scope": 3833,
									"src": "340:173:14",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de74e57b",
									"id": 3369,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "554:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 3833,
									"src": "519:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$3364_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.Listing)"
									},
									"typeName": {
										"id": 3368,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3365,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "527:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "519:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$3364_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3367,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3366,
												"name": "Listing",
												"nameLocations": [
													"538:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3364,
												"src": "538:7:14"
											},
											"referencedDeclaration": 3364,
											"src": "538:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
												"typeString": "struct NFTMarketplace.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaccf1ec",
									"id": 3371,
									"mutability": "mutable",
									"name": "nextListingId",
									"nameLocation": "583:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3833,
									"src": "568:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "568:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cdd78cfc",
									"id": 3374,
									"mutability": "mutable",
									"name": "platformFeePercentage",
									"nameLocation": "617:21:14",
									"nodeType": "VariableDeclaration",
									"scope": 3833,
									"src": "602:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 3373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "641:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a5d63db",
									"id": 3377,
									"mutability": "mutable",
									"name": "royaltiesFeePercentage",
									"nameLocation": "663:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3833,
									"src": "648:41:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 3376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "688:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e20fc118",
									"id": 3379,
									"mutability": "mutable",
									"name": "platformFeeWallet",
									"nameLocation": "710:17:14",
									"nodeType": "VariableDeclaration",
									"scope": 3833,
									"src": "695:32:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3378,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d08a3a0",
									"id": 3381,
									"mutability": "mutable",
									"name": "royaltiesFeeWallet",
									"nameLocation": "748:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 3833,
									"src": "733:33:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3380,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "733:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8b20b21402c6ccf4b5f2e911ee605585802d96508e51890a1a317975b864dbb0",
									"id": 3395,
									"name": "ListingCreated",
									"nameLocation": "779:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "802:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "794:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3385,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "829:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "813:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3387,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "858:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "842:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3389,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "875:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "867:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3391,
												"indexed": false,
												"mutability": "mutable",
												"name": "isAuction",
												"nameLocation": "887:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "882:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3393,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiresAt",
												"nameLocation": "906:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "898:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:123:14"
									},
									"src": "773:144:14"
								},
								{
									"anonymous": false,
									"eventSelector": "411aee90354c51b1b04cd563fcab2617142a9d50da19232d888547c8a1b7fd8a",
									"id": 3399,
									"name": "ListingCancelled",
									"nameLocation": "928:16:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3397,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "953:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3399,
												"src": "945:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:19:14"
									},
									"src": "922:42:14"
								},
								{
									"anonymous": false,
									"eventSelector": "6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a",
									"id": 3407,
									"name": "NFTSold",
									"nameLocation": "975:7:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3401,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "991:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "983:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3403,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1018:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "1002:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3405,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1033:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "1025:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:57:14"
									},
									"src": "969:71:14"
								},
								{
									"anonymous": false,
									"eventSelector": "d0a5ddfa06600c6481dcd2923a572827c06e53859f23f7ddab41ff3144ee8687",
									"id": 3411,
									"name": "PlatformFeePercentageUpdated",
									"nameLocation": "1051:28:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3409,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPercentage",
												"nameLocation": "1088:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "1080:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:23:14"
									},
									"src": "1045:58:14"
								},
								{
									"body": {
										"id": 3431,
										"nodeType": "Block",
										"src": "1169:130:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3422,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3415,
																		"src": "1216:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3419,
																				"name": "nftContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3413,
																				"src": "1195:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3418,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1187:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1187:20:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1410",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1208:7:14",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1343,
																	"src": "1187:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1187:37:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3424,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1228:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1232:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1228:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1187:51:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204e4654206f776e65722063616e20706572666f726d207468697320616374696f6e",
															"id": 3427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3130584076f68be6fcb51d503cf289da3605b7081f689ec48142969fa0922e09",
																"typeString": "literal_string \"Only NFT owner can perform this action\""
															},
															"value": "Only NFT owner can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3130584076f68be6fcb51d503cf289da3605b7081f689ec48142969fa0922e09",
																"typeString": "literal_string \"Only NFT owner can perform this action\""
															}
														],
														"id": 3417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1179:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1179:102:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3429,
												"nodeType": "ExpressionStatement",
												"src": "1179:102:14"
											},
											{
												"id": 3430,
												"nodeType": "PlaceholderStatement",
												"src": "1291:1:14"
											}
										]
									},
									"id": 3432,
									"name": "onlyNFTOwner",
									"nameLocation": "1118:12:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1139:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "1131:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1160:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "1152:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:38:14"
									},
									"src": "1109:190:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3451,
										"nodeType": "Block",
										"src": "1394:105:14",
										"statements": [
											{
												"expression": {
													"id": 3445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3443,
														"name": "platformFeeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3379,
														"src": "1404:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3444,
														"name": "_platformFeeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3434,
														"src": "1424:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1404:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3446,
												"nodeType": "ExpressionStatement",
												"src": "1404:38:14"
											},
											{
												"expression": {
													"id": 3449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3447,
														"name": "royaltiesFeeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3381,
														"src": "1452:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3448,
														"name": "_royaltiesFeeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "1473:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1452:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3450,
												"nodeType": "ExpressionStatement",
												"src": "1452:40:14"
											}
										]
									},
									"id": 3452,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 3439,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1382:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1386:6:14",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1382:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3441,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3438,
												"name": "Ownable",
												"nameLocations": [
													"1374:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1374:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1374:19:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "_platformFeeWallet",
												"nameLocation": "1325:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 3452,
												"src": "1317:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3436,
												"mutability": "mutable",
												"name": "_royaltiesFeeWallet",
												"nameLocation": "1353:19:14",
												"nodeType": "VariableDeclaration",
												"scope": 3452,
												"src": "1345:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:57:14"
									},
									"returnParameters": {
										"id": 3442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:0:14"
									},
									"scope": 3833,
									"src": "1305:194:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3474,
										"nodeType": "Block",
										"src": "1581:191:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3460,
																"name": "newPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3454,
																"src": "1599:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 3461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1616:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1599:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50657263656e74616765206d757374206265206265747765656e203020616e6420313030",
															"id": 3463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1621:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5",
																"typeString": "literal_string \"Percentage must be between 0 and 100\""
															},
															"value": "Percentage must be between 0 and 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f3276a896432c428136ca9fa77c9c81268cfef4691876a11aad8dd280bf4cc5",
																"typeString": "literal_string \"Percentage must be between 0 and 100\""
															}
														],
														"id": 3459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1591:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1591:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3465,
												"nodeType": "ExpressionStatement",
												"src": "1591:69:14"
											},
											{
												"expression": {
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3466,
														"name": "platformFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3374,
														"src": "1670:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3467,
														"name": "newPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3454,
														"src": "1694:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1670:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3469,
												"nodeType": "ExpressionStatement",
												"src": "1670:37:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3471,
															"name": "newPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "1751:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3470,
														"name": "PlatformFeePercentageUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3411,
														"src": "1722:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3473,
												"nodeType": "EmitStatement",
												"src": "1717:48:14"
											}
										]
									},
									"functionSelector": "8333903e",
									"id": 3475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3456,
												"name": "onlyOwner",
												"nameLocations": [
													"1571:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1571:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1571:9:14"
										}
									],
									"name": "setPlatformFeePercentage",
									"nameLocation": "1514:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "newPercentage",
												"nameLocation": "1547:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "1539:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:23:14"
									},
									"returnParameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:14"
									},
									"scope": 3833,
									"src": "1505:267:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3567,
										"nodeType": "Block",
										"src": "1897:821:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3489,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3481,
																"src": "1915:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1923:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1915:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 3492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1926:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 3488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1907:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3494,
												"nodeType": "ExpressionStatement",
												"src": "1907:53:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3500,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3479,
																		"src": "2007:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3497,
																				"name": "nftContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3477,
																				"src": "1986:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3496,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1978:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1978:20:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1410",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1999:7:14",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1343,
																	"src": "1978:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1978:37:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3502,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2019:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2023:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2019:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1978:51:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204e4654206f776e65722063616e206372656174652061206c697374696e67",
															"id": 3505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2031:37:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482",
																"typeString": "literal_string \"Only NFT owner can create a listing\""
															},
															"value": "Only NFT owner can create a listing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_633580112727e33cd053d5c2c3bfc703711929b4e98f2c729054f04bfc7ce482",
																"typeString": "literal_string \"Only NFT owner can create a listing\""
															}
														],
														"id": 3495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1970:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1970:99:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3507,
												"nodeType": "ExpressionStatement",
												"src": "1970:99:14"
											},
											{
												"condition": {
													"id": 3508,
													"name": "isAuction",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3483,
													"src": "2084:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3521,
													"nodeType": "Block",
													"src": "2193:37:14",
													"statements": [
														{
															"expression": {
																"id": 3519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3517,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "2207:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2207:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3520,
															"nodeType": "ExpressionStatement",
															"src": "2207:12:14"
														}
													]
												},
												"id": 3522,
												"nodeType": "IfStatement",
												"src": "2080:150:14",
												"trueBody": {
													"id": 3516,
													"nodeType": "Block",
													"src": "2095:92:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3510,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3485,
																			"src": "2117:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2128:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2117:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "41756374696f6e206475726174696f6e206d7573742062652067726561746572207468616e207a65726f",
																		"id": 3513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2131:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277",
																			"typeString": "literal_string \"Auction duration must be greater than zero\""
																		},
																		"value": "Auction duration must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_95e6af4dadb6ccf046e47794c41cc9bf3729f984f1df32eb5dcab27102d49277",
																			"typeString": "literal_string \"Auction duration must be greater than zero\""
																		}
																	],
																	"id": 3509,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2109:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2109:67:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3515,
															"nodeType": "ExpressionStatement",
															"src": "2109:67:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3527,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2274:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2278:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2274:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3531,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2294:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2286:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2286:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2286:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3533,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "2301:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3524,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "2248:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3523,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "2240:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2240:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1410",
																"typeString": "contract IERC721"
															}
														},
														"id": 3526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2261:12:14",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "2240:33:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3535,
												"nodeType": "ExpressionStatement",
												"src": "2240:69:14"
											},
											{
												"expression": {
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3536,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3369,
															"src": "2320:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$3364_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Listing storage ref)"
															}
														},
														"id": 3538,
														"indexExpression": {
															"id": 3537,
															"name": "nextListingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "2329:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2320:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$3364_storage",
															"typeString": "struct NFTMarketplace.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3540,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3477,
																"src": "2381:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3541,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3479,
																"src": "2415:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3542,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3481,
																"src": "2443:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3543,
																"name": "isAuction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3483,
																"src": "2473:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3545,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2535:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2541:9:14",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2535:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3547,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "2553:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2535:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3539,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3364,
															"src": "2346:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$3364_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.Listing storage pointer)"
															}
														},
														"id": 3549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2368:11:14",
															"2406:7:14",
															"2436:5:14",
															"2462:9:14",
															"2496:8:14",
															"2524:9:14"
														],
														"names": [
															"nftContract",
															"tokenId",
															"price",
															"isAuction",
															"isActive",
															"expiresAt"
														],
														"nodeType": "FunctionCall",
														"src": "2346:226:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$3364_memory_ptr",
															"typeString": "struct NFTMarketplace.Listing memory"
														}
													},
													"src": "2320:252:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$3364_storage",
														"typeString": "struct NFTMarketplace.Listing storage ref"
													}
												},
												"id": 3551,
												"nodeType": "ExpressionStatement",
												"src": "2320:252:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3553,
															"name": "nextListingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "2603:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3554,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3477,
															"src": "2618:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "2631:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3556,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3481,
															"src": "2640:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3557,
															"name": "isAuction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3483,
															"src": "2647:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3558,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2658:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2664:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2658:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 3560,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3485,
																"src": "2676:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2658:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3552,
														"name": "ListingCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3395,
														"src": "2588:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,bool,uint256)"
														}
													},
													"id": 3562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:97:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3563,
												"nodeType": "EmitStatement",
												"src": "2583:102:14"
											},
											{
												"expression": {
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2696:15:14",
													"subExpression": {
														"id": 3564,
														"name": "nextListingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3371,
														"src": "2696:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3566,
												"nodeType": "ExpressionStatement",
												"src": "2696:15:14"
											}
										]
									},
									"functionSelector": "d9194bb2",
									"id": 3568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createListing",
									"nameLocation": "1787:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3477,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1809:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "1801:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1830:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "1822:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1847:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "1839:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3483,
												"mutability": "mutable",
												"name": "isAuction",
												"nameLocation": "1859:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "1854:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1854:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1878:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "1870:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:87:14"
									},
									"returnParameters": {
										"id": 3487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:0:14"
									},
									"scope": 3833,
									"src": "1778:940:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3628,
										"nodeType": "Block",
										"src": "2775:429:14",
										"statements": [
											{
												"assignments": [
													3575
												],
												"declarations": [
													{
														"constant": false,
														"id": 3575,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "2801:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3628,
														"src": "2785:23:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
															"typeString": "struct NFTMarketplace.Listing"
														},
														"typeName": {
															"id": 3574,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3573,
																"name": "Listing",
																"nameLocations": [
																	"2785:7:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3364,
																"src": "2785:7:14"
															},
															"referencedDeclaration": 3364,
															"src": "2785:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																"typeString": "struct NFTMarketplace.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3579,
												"initialValue": {
													"baseExpression": {
														"id": 3576,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3369,
														"src": "2811:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$3364_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.Listing storage ref)"
														}
													},
													"id": 3578,
													"indexExpression": {
														"id": 3577,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3570,
														"src": "2820:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2811:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$3364_storage",
														"typeString": "struct NFTMarketplace.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2785:45:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3581,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3575,
																"src": "2848:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2856:8:14",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3361,
															"src": "2848:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e67206973206e6f7420616374697665",
															"id": 3583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2866:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
																"typeString": "literal_string \"Listing is not active\""
															},
															"value": "Listing is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
																"typeString": "literal_string \"Listing is not active\""
															}
														],
														"id": 3580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2840:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2840:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3585,
												"nodeType": "ExpressionStatement",
												"src": "2840:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3592,
																			"name": "listing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3575,
																			"src": "2945:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																				"typeString": "struct NFTMarketplace.Listing storage pointer"
																			}
																		},
																		"id": 3593,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2953:7:14",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3355,
																		"src": "2945:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 3588,
																					"name": "listing",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3575,
																					"src": "2916:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																						"typeString": "struct NFTMarketplace.Listing storage pointer"
																					}
																				},
																				"id": 3589,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2924:11:14",
																				"memberName": "nftContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3353,
																				"src": "2916:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3587,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "2908:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2908:28:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1410",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2937:7:14",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1343,
																	"src": "2908:36:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2908:53:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3597,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2973:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 3596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2965:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2965:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2965:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2908:70:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e74726163742063616e2063616e63656c20746865206c697374696e67",
															"id": 3600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2980:42:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130",
																"typeString": "literal_string \"Only the contract can cancel the listing\""
															},
															"value": "Only the contract can cancel the listing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83ac7abea3437f06a64092abd513d631dea4ea3bd9e7ef537cd21bc0fde90130",
																"typeString": "literal_string \"Only the contract can cancel the listing\""
															}
														],
														"id": 3586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2900:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2900:123:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3602,
												"nodeType": "ExpressionStatement",
												"src": "2900:123:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3610,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3084:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3076:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3608,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3076:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3076:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3612,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3091:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3095:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3091:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3614,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3575,
																"src": "3103:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3615,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3111:7:14",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3355,
															"src": "3103:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3604,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3575,
																		"src": "3042:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																			"typeString": "struct NFTMarketplace.Listing storage pointer"
																		}
																	},
																	"id": 3605,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3050:11:14",
																	"memberName": "nftContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3353,
																	"src": "3042:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3603,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3034:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3034:28:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1410",
																"typeString": "contract IERC721"
															}
														},
														"id": 3607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3063:12:14",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "3034:41:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3034:85:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3617,
												"nodeType": "ExpressionStatement",
												"src": "3034:85:14"
											},
											{
												"expression": {
													"id": 3622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3618,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3575,
															"src": "3130:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																"typeString": "struct NFTMarketplace.Listing storage pointer"
															}
														},
														"id": 3620,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3138:8:14",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3361,
														"src": "3130:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3149:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3130:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3623,
												"nodeType": "ExpressionStatement",
												"src": "3130:24:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3625,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3570,
															"src": "3187:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3624,
														"name": "ListingCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3399,
														"src": "3170:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3627,
												"nodeType": "EmitStatement",
												"src": "3165:32:14"
											}
										]
									},
									"functionSelector": "305a67a8",
									"id": 3629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelListing",
									"nameLocation": "2733:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "2755:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "2747:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:19:14"
									},
									"returnParameters": {
										"id": 3572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2775:0:14"
									},
									"scope": 3833,
									"src": "2724:480:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3749,
										"nodeType": "Block",
										"src": "3266:867:14",
										"statements": [
											{
												"assignments": [
													3636
												],
												"declarations": [
													{
														"constant": false,
														"id": 3636,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "3292:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3749,
														"src": "3276:23:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
															"typeString": "struct NFTMarketplace.Listing"
														},
														"typeName": {
															"id": 3635,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3634,
																"name": "Listing",
																"nameLocations": [
																	"3276:7:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3364,
																"src": "3276:7:14"
															},
															"referencedDeclaration": 3364,
															"src": "3276:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																"typeString": "struct NFTMarketplace.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3640,
												"initialValue": {
													"baseExpression": {
														"id": 3637,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3369,
														"src": "3302:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$3364_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.Listing storage ref)"
														}
													},
													"id": 3639,
													"indexExpression": {
														"id": 3638,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "3311:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3302:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$3364_storage",
														"typeString": "struct NFTMarketplace.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:45:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3642,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3636,
																"src": "3339:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3643,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3347:8:14",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3361,
															"src": "3339:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e67206973206e6f7420616374697665",
															"id": 3644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3357:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
																"typeString": "literal_string \"Listing is not active\""
															},
															"value": "Listing is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
																"typeString": "literal_string \"Listing is not active\""
															}
														],
														"id": 3641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3331:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3646,
												"nodeType": "ExpressionStatement",
												"src": "3331:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3648,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3636,
																	"src": "3399:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																		"typeString": "struct NFTMarketplace.Listing storage pointer"
																	}
																},
																"id": 3649,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3407:5:14",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3357,
																"src": "3399:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3650,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3416:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3420:5:14",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3416:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3399:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
															"id": 3653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3427:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															},
															"value": "Incorrect payment amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															}
														],
														"id": 3647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3391:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3655,
												"nodeType": "ExpressionStatement",
												"src": "3391:63:14"
											},
											{
												"assignments": [
													3657
												],
												"declarations": [
													{
														"constant": false,
														"id": 3657,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "3473:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3749,
														"src": "3465:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3465:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3666,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3663,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3636,
																"src": "3519:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3664,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3527:7:14",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3355,
															"src": "3519:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3659,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3636,
																		"src": "3490:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																			"typeString": "struct NFTMarketplace.Listing storage pointer"
																		}
																	},
																	"id": 3660,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3498:11:14",
																	"memberName": "nftContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3353,
																	"src": "3490:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3658,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3482:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3482:28:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1410",
																"typeString": "contract IERC721"
															}
														},
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3511:7:14",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1343,
														"src": "3482:36:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 3665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3482:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3465:70:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3674,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3596:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3833",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3588:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3588:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3588:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3676,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3603:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3607:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3603:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3678,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3636,
																"src": "3615:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3679,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3623:7:14",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3355,
															"src": "3615:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3668,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3636,
																		"src": "3554:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																			"typeString": "struct NFTMarketplace.Listing storage pointer"
																		}
																	},
																	"id": 3669,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3562:11:14",
																	"memberName": "nftContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3353,
																	"src": "3554:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3667,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3546:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3546:28:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1410",
																"typeString": "contract IERC721"
															}
														},
														"id": 3671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3575:12:14",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "3546:41:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3546:85:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3681,
												"nodeType": "ExpressionStatement",
												"src": "3546:85:14"
											},
											{
												"assignments": [
													3683
												],
												"declarations": [
													{
														"constant": false,
														"id": 3683,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "3650:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 3749,
														"src": "3642:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3642:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3691,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3684,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3636,
																		"src": "3665:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																			"typeString": "struct NFTMarketplace.Listing storage pointer"
																		}
																	},
																	"id": 3685,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3673:5:14",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3357,
																	"src": "3665:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3686,
																	"name": "platformFeePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3374,
																	"src": "3681:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3665:37:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3688,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3664:39:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3706:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3664:45:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3642:67:14"
											},
											{
												"assignments": [
													3693
												],
												"declarations": [
													{
														"constant": false,
														"id": 3693,
														"mutability": "mutable",
														"name": "royaltiesFee",
														"nameLocation": "3727:12:14",
														"nodeType": "VariableDeclaration",
														"scope": 3749,
														"src": "3719:20:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3719:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3701,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3694,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3636,
																		"src": "3743:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																			"typeString": "struct NFTMarketplace.Listing storage pointer"
																		}
																	},
																	"id": 3695,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3751:5:14",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3357,
																	"src": "3743:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3696,
																	"name": "royaltiesFeePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3377,
																	"src": "3759:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3743:38:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3698,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3742:40:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3785:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3742:46:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3719:69:14"
											},
											{
												"assignments": [
													3703
												],
												"declarations": [
													{
														"constant": false,
														"id": 3703,
														"mutability": "mutable",
														"name": "sellerAmount",
														"nameLocation": "3806:12:14",
														"nodeType": "VariableDeclaration",
														"scope": 3749,
														"src": "3798:20:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3798:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3704,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3636,
																"src": "3821:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3705,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3829:5:14",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3357,
															"src": "3821:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3706,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3683,
															"src": "3837:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3821:27:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3708,
														"name": "royaltiesFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3693,
														"src": "3851:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3821:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3798:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3716,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3683,
															"src": "3910:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3713,
																	"name": "platformFeeWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3379,
																	"src": "3882:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3874:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3711,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3874:8:14",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3874:26:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3901:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3874:35:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:48:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3718,
												"nodeType": "ExpressionStatement",
												"src": "3874:48:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3724,
															"name": "royaltiesFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3693,
															"src": "3969:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3721,
																	"name": "royaltiesFeeWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3381,
																	"src": "3940:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3932:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3932:8:14",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3932:27:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3932:36:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3932:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3726,
												"nodeType": "ExpressionStatement",
												"src": "3932:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3732,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3703,
															"src": "4017:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3729,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3657,
																	"src": "4000:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3992:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3992:8:14",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3992:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4008:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3992:24:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3734,
												"nodeType": "ExpressionStatement",
												"src": "3992:38:14"
											},
											{
												"expression": {
													"id": 3739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3735,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "4041:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																"typeString": "struct NFTMarketplace.Listing storage pointer"
															}
														},
														"id": 3737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4049:8:14",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3361,
														"src": "4041:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4060:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4041:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3740,
												"nodeType": "ExpressionStatement",
												"src": "4041:24:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3742,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "4089:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3743,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4100:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4104:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4100:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3745,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3636,
																"src": "4112:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$3364_storage_ptr",
																	"typeString": "struct NFTMarketplace.Listing storage pointer"
																}
															},
															"id": 3746,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4120:5:14",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3357,
															"src": "4112:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3741,
														"name": "NFTSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3407,
														"src": "4081:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 3747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4081:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3748,
												"nodeType": "EmitStatement",
												"src": "4076:50:14"
											}
										]
									},
									"functionSelector": "4884f459",
									"id": 3750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyListing",
									"nameLocation": "3219:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "3238:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3750,
												"src": "3230:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:19:14"
									},
									"returnParameters": {
										"id": 3633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:14"
									},
									"scope": 3833,
									"src": "3210:923:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3831,
										"nodeType": "Block",
										"src": "4209:473:14",
										"statements": [
											{
												"assignments": [
													3760
												],
												"declarations": [
													{
														"constant": false,
														"id": 3760,
														"mutability": "mutable",
														"name": "activeListings",
														"nameLocation": "4236:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 3831,
														"src": "4219:31:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3758,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4219:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3759,
															"nodeType": "ArrayTypeName",
															"src": "4219:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3766,
												"initialValue": {
													"arguments": [
														{
															"id": 3764,
															"name": "nextListingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "4267:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4253:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3761,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4257:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3762,
															"nodeType": "ArrayTypeName",
															"src": "4257:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4253:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4219:62:14"
											},
											{
												"assignments": [
													3768
												],
												"declarations": [
													{
														"constant": false,
														"id": 3768,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "4299:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3831,
														"src": "4291:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4291:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3770,
												"initialValue": {
													"hexValue": "30",
													"id": 3769,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4307:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4291:17:14"
											},
											{
												"body": {
													"id": 3796,
													"nodeType": "Block",
													"src": "4363:133:14",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"id": 3781,
																		"name": "listings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3369,
																		"src": "4381:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$3364_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.Listing storage ref)"
																		}
																	},
																	"id": 3783,
																	"indexExpression": {
																		"id": 3782,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3772,
																		"src": "4390:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4381:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$3364_storage",
																		"typeString": "struct NFTMarketplace.Listing storage ref"
																	}
																},
																"id": 3784,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4393:8:14",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3361,
																"src": "4381:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3795,
															"nodeType": "IfStatement",
															"src": "4377:109:14",
															"trueBody": {
																"id": 3794,
																"nodeType": "Block",
																"src": "4403:83:14",
																"statements": [
																	{
																		"expression": {
																			"id": 3789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3785,
																					"name": "activeListings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3760,
																					"src": "4421:14:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 3787,
																				"indexExpression": {
																					"id": 3786,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3768,
																					"src": "4436:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4421:21:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3772,
																				"src": "4445:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4421:25:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3790,
																		"nodeType": "ExpressionStatement",
																		"src": "4421:25:14"
																	},
																	{
																		"expression": {
																			"id": 3792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4464:7:14",
																			"subExpression": {
																				"id": 3791,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3768,
																				"src": "4464:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3793,
																		"nodeType": "ExpressionStatement",
																		"src": "4464:7:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3775,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3772,
														"src": "4339:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3776,
														"name": "nextListingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3371,
														"src": "4343:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4339:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3797,
												"initializationExpression": {
													"assignments": [
														3772
													],
													"declarations": [
														{
															"constant": false,
															"id": 3772,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4332:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3797,
															"src": "4324:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3771,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4324:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3774,
													"initialValue": {
														"hexValue": "30",
														"id": 3773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4336:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4324:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 3779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4358:3:14",
														"subExpression": {
															"id": 3778,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3772,
															"src": "4358:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3780,
													"nodeType": "ExpressionStatement",
													"src": "4358:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4319:177:14"
											},
											{
												"assignments": [
													3802
												],
												"declarations": [
													{
														"constant": false,
														"id": 3802,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4523:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3831,
														"src": "4506:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3800,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4506:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3801,
															"nodeType": "ArrayTypeName",
															"src": "4506:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3808,
												"initialValue": {
													"arguments": [
														{
															"id": 3806,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3768,
															"src": "4546:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4532:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4536:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3804,
															"nodeType": "ArrayTypeName",
															"src": "4536:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4532:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4506:46:14"
											},
											{
												"body": {
													"id": 3827,
													"nodeType": "Block",
													"src": "4598:54:14",
													"statements": [
														{
															"expression": {
																"id": 3825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3819,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3802,
																		"src": "4612:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3821,
																	"indexExpression": {
																		"id": 3820,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3810,
																		"src": "4619:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4612:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3822,
																		"name": "activeListings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3760,
																		"src": "4624:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3824,
																	"indexExpression": {
																		"id": 3823,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3810,
																		"src": "4639:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4624:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4612:29:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3826,
															"nodeType": "ExpressionStatement",
															"src": "4612:29:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3813,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3810,
														"src": "4582:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3814,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3768,
														"src": "4586:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4582:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3828,
												"initializationExpression": {
													"assignments": [
														3810
													],
													"declarations": [
														{
															"constant": false,
															"id": 3810,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4575:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3828,
															"src": "4567:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3809,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4567:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3812,
													"initialValue": {
														"hexValue": "30",
														"id": 3811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4579:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4567:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 3817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4593:3:14",
														"subExpression": {
															"id": 3816,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3810,
															"src": "4593:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3818,
													"nodeType": "ExpressionStatement",
													"src": "4593:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4562:90:14"
											},
											{
												"expression": {
													"id": 3829,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3802,
													"src": "4669:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3755,
												"id": 3830,
												"nodeType": "Return",
												"src": "4662:13:14"
											}
										]
									},
									"functionSelector": "87c35bc0",
									"id": 3832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveListings",
									"nameLocation": "4148:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4165:2:14"
									},
									"returnParameters": {
										"id": 3755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "4191:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3752,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4191:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3753,
													"nodeType": "ArrayTypeName",
													"src": "4191:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4190:18:14"
									},
									"scope": 3833,
									"src": "4139:543:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3834,
							"src": "299:4385:14",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								3395,
								3399,
								3407,
								3411
							]
						}
					],
					"src": "32:4653:14"
				},
				"id": 14
			}
		}
	}
}